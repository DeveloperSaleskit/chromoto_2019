//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Account.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("JPCRM")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class JPCRM : global::System.Data.DataSet {
        
        private SiteInfoRegisterDataTable tableSiteInfoRegister;
        
        private BuildingInfoRegisterDataTable tableBuildingInfoRegister;
        
        private BlockInfoRegisterDataTable tableBlockInfoRegister;
        
        private BankDetailRegisterDataTable tableBankDetailRegister;
        
        private AllotmentReportDataTable tableAllotmentReport;
        
        private DemandLetterDataTable tableDemandLetter;
        
        private CustomerReceiptDataTable tableCustomerReceipt;
        
        private LeadRegisterDataTable tableLeadRegister;
        
        private HRDetailListDataTable tableHRDetailList;
        
        private DailyConsumptionDataTable tableDailyConsumption;
        
        private CustomerPaymentRegisterDataTable tableCustomerPaymentRegister;
        
        private CustomerRegisterDataTable tableCustomerRegister;
        
        private SalesVoucherDataTable tableSalesVoucher;
        
        private ServiceModuleRegisterDataTable tableServiceModuleRegister;
        
        private CarTypeWiseRegisterDataTable tableCarTypeWiseRegister;
        
        private SalesInvoiceDataTable tableSalesInvoice;
        
        private PurchaseOrderDataTable tablePurchaseOrder;
        
        private salesDataTable tablesales;
        
        private SalesInvoicevDataTable tableSalesInvoicev;
        
        private SalesInvoicevidhiDataTable tableSalesInvoicevidhi;
        
        private SalesInvoiceviDataTable tableSalesInvoicevi;
        
        private DriveDutyVoucherDataTable tableDriveDutyVoucher;
        
        private QuotationDataTable tableQuotation;
        
        private AverageDataTable tableAverage;
        
        private DepartmentRegisterDataTable tableDepartmentRegister;
        
        private ContractTypeRegisterDataTable tableContractTypeRegister;
        
        private CallTypeRegisterDataTable tableCallTypeRegister;
        
        private ZoneRegisterDataTable tableZoneRegister;
        
        private ProductRegisterDataTable tableProductRegister;
        
        private GodownRegisterDataTable tableGodownRegister;
        
        private BookingRegisterDataTable tableBookingRegister;
        
        private BookingRegDataTable tableBookingReg;
        
        private VendorRegDataTable tableVendorReg;
        
        private CustomerRegDataTable tableCustomerReg;
        
        private CustomerPendingRegDataTable tableCustomerPendingReg;
        
        private VendorPendingRegDataTable tableVendorPendingReg;
        
        private ServiceRegisterDataTable tableServiceRegister;
        
        private Service_Item_ListDataTable tableService_Item_List;
        
        private InvoiceAllDataTable tableInvoiceAll;
        
        private InvoicePageDataTable tableInvoicePage;
        
        private SalesInvoice_NewDataTable tableSalesInvoice_New;
        
        private SalesInvoice_PageDataTable tableSalesInvoice_Page;
        
        private Invoice_NewDataTable tableInvoice_New;
        
        private Invoice_New_ItemDataTable tableInvoice_New_Item;
        
        private CompanyInfoDataTable tableCompanyInfo;
        
        private Customer_ServiceDataTable tableCustomer_Service;
        
        private TNCDataTable tableTNC;
        
        private Service_ToyoDataTable tableService_Toyo;
        
        private ItemStockRegisterHozifaDataTable tableItemStockRegisterHozifa;
        
        private PurchaseInvoiceRegisterWithDetailDataTable tablePurchaseInvoiceRegisterWithDetail;
        
        private SalesRegisterHozifaDataTable tableSalesRegisterHozifa;
        
        private PaymentReceiptDataTable tablePaymentReceipt;
        
        private ServiceOrderDataTable tableServiceOrder;
        
        private ServiceInvoiceOldDataTable tableServiceInvoiceOld;
        
        private ItemSalesDataTable tableItemSales;
        
        private LogoDataTable tableLogo;
        
        private ChallanCumTaxInvoiceDataTable tableChallanCumTaxInvoice;
        
        private PaymentRegister1DataTable tablePaymentRegister1;
        
        private ItemRegisterDataTable tableItemRegister;
        
        private PORegisterDataTable tablePORegister;
        
        private OrderBookingDataTable tableOrderBooking;
        
        private ItemPicDataTable tableItemPic;
        
        private Ledger_ReportDataTable tableLedger_Report;
        
        private DebitNoteDataTable tableDebitNote;
        
        private CreditNoteDataTable tableCreditNote;
        
        private ServiceInvoiceDataTable tableServiceInvoice;
        
        private ProfitnLossStatementDataTable tableProfitnLossStatement;
        
        private PaymentReturnRegisterDataTable tablePaymentReturnRegister;
        
        private CustomerPaymentReturnRegisterDataTable tableCustomerPaymentReturnRegister;
        
        private PaymentReturnReceiptDataTable tablePaymentReturnReceipt;
        
        private PaymentRegisterDataTable tablePaymentRegister;
        
        private MatrialissueREGDataTable tableMatrialissueREG;
        
        private MatrialissueDataTable tableMatrialissue;
        
        private MatrialReturnREGDataTable tableMatrialReturnREG;
        
        private ItemAdjustmentRegisterDataTable tableItemAdjustmentRegister;
        
        private PurchaseINdentRegDataTable tablePurchaseINdentReg;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public JPCRM() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected JPCRM(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SiteInfoRegister"] != null)) {
                    base.Tables.Add(new SiteInfoRegisterDataTable(ds.Tables["SiteInfoRegister"]));
                }
                if ((ds.Tables["BuildingInfoRegister"] != null)) {
                    base.Tables.Add(new BuildingInfoRegisterDataTable(ds.Tables["BuildingInfoRegister"]));
                }
                if ((ds.Tables["BlockInfoRegister"] != null)) {
                    base.Tables.Add(new BlockInfoRegisterDataTable(ds.Tables["BlockInfoRegister"]));
                }
                if ((ds.Tables["BankDetailRegister"] != null)) {
                    base.Tables.Add(new BankDetailRegisterDataTable(ds.Tables["BankDetailRegister"]));
                }
                if ((ds.Tables["AllotmentReport"] != null)) {
                    base.Tables.Add(new AllotmentReportDataTable(ds.Tables["AllotmentReport"]));
                }
                if ((ds.Tables["DemandLetter"] != null)) {
                    base.Tables.Add(new DemandLetterDataTable(ds.Tables["DemandLetter"]));
                }
                if ((ds.Tables["CustomerReceipt"] != null)) {
                    base.Tables.Add(new CustomerReceiptDataTable(ds.Tables["CustomerReceipt"]));
                }
                if ((ds.Tables["LeadRegister"] != null)) {
                    base.Tables.Add(new LeadRegisterDataTable(ds.Tables["LeadRegister"]));
                }
                if ((ds.Tables["HRDetailList"] != null)) {
                    base.Tables.Add(new HRDetailListDataTable(ds.Tables["HRDetailList"]));
                }
                if ((ds.Tables["DailyConsumption"] != null)) {
                    base.Tables.Add(new DailyConsumptionDataTable(ds.Tables["DailyConsumption"]));
                }
                if ((ds.Tables["CustomerPaymentRegister"] != null)) {
                    base.Tables.Add(new CustomerPaymentRegisterDataTable(ds.Tables["CustomerPaymentRegister"]));
                }
                if ((ds.Tables["CustomerRegister"] != null)) {
                    base.Tables.Add(new CustomerRegisterDataTable(ds.Tables["CustomerRegister"]));
                }
                if ((ds.Tables["SalesVoucher"] != null)) {
                    base.Tables.Add(new SalesVoucherDataTable(ds.Tables["SalesVoucher"]));
                }
                if ((ds.Tables["ServiceModuleRegister"] != null)) {
                    base.Tables.Add(new ServiceModuleRegisterDataTable(ds.Tables["ServiceModuleRegister"]));
                }
                if ((ds.Tables["CarTypeWiseRegister"] != null)) {
                    base.Tables.Add(new CarTypeWiseRegisterDataTable(ds.Tables["CarTypeWiseRegister"]));
                }
                if ((ds.Tables["SalesInvoice"] != null)) {
                    base.Tables.Add(new SalesInvoiceDataTable(ds.Tables["SalesInvoice"]));
                }
                if ((ds.Tables["PurchaseOrder"] != null)) {
                    base.Tables.Add(new PurchaseOrderDataTable(ds.Tables["PurchaseOrder"]));
                }
                if ((ds.Tables["sales"] != null)) {
                    base.Tables.Add(new salesDataTable(ds.Tables["sales"]));
                }
                if ((ds.Tables["SalesInvoicev"] != null)) {
                    base.Tables.Add(new SalesInvoicevDataTable(ds.Tables["SalesInvoicev"]));
                }
                if ((ds.Tables["SalesInvoicevidhi"] != null)) {
                    base.Tables.Add(new SalesInvoicevidhiDataTable(ds.Tables["SalesInvoicevidhi"]));
                }
                if ((ds.Tables["SalesInvoicevi"] != null)) {
                    base.Tables.Add(new SalesInvoiceviDataTable(ds.Tables["SalesInvoicevi"]));
                }
                if ((ds.Tables["DriveDutyVoucher"] != null)) {
                    base.Tables.Add(new DriveDutyVoucherDataTable(ds.Tables["DriveDutyVoucher"]));
                }
                if ((ds.Tables["Quotation"] != null)) {
                    base.Tables.Add(new QuotationDataTable(ds.Tables["Quotation"]));
                }
                if ((ds.Tables["Average"] != null)) {
                    base.Tables.Add(new AverageDataTable(ds.Tables["Average"]));
                }
                if ((ds.Tables["DepartmentRegister"] != null)) {
                    base.Tables.Add(new DepartmentRegisterDataTable(ds.Tables["DepartmentRegister"]));
                }
                if ((ds.Tables["ContractTypeRegister"] != null)) {
                    base.Tables.Add(new ContractTypeRegisterDataTable(ds.Tables["ContractTypeRegister"]));
                }
                if ((ds.Tables["CallTypeRegister"] != null)) {
                    base.Tables.Add(new CallTypeRegisterDataTable(ds.Tables["CallTypeRegister"]));
                }
                if ((ds.Tables["ZoneRegister"] != null)) {
                    base.Tables.Add(new ZoneRegisterDataTable(ds.Tables["ZoneRegister"]));
                }
                if ((ds.Tables["ProductRegister"] != null)) {
                    base.Tables.Add(new ProductRegisterDataTable(ds.Tables["ProductRegister"]));
                }
                if ((ds.Tables["GodownRegister"] != null)) {
                    base.Tables.Add(new GodownRegisterDataTable(ds.Tables["GodownRegister"]));
                }
                if ((ds.Tables["BookingRegister"] != null)) {
                    base.Tables.Add(new BookingRegisterDataTable(ds.Tables["BookingRegister"]));
                }
                if ((ds.Tables["BookingReg"] != null)) {
                    base.Tables.Add(new BookingRegDataTable(ds.Tables["BookingReg"]));
                }
                if ((ds.Tables["VendorReg"] != null)) {
                    base.Tables.Add(new VendorRegDataTable(ds.Tables["VendorReg"]));
                }
                if ((ds.Tables["CustomerReg"] != null)) {
                    base.Tables.Add(new CustomerRegDataTable(ds.Tables["CustomerReg"]));
                }
                if ((ds.Tables["CustomerPendingReg"] != null)) {
                    base.Tables.Add(new CustomerPendingRegDataTable(ds.Tables["CustomerPendingReg"]));
                }
                if ((ds.Tables["VendorPendingReg"] != null)) {
                    base.Tables.Add(new VendorPendingRegDataTable(ds.Tables["VendorPendingReg"]));
                }
                if ((ds.Tables["ServiceRegister"] != null)) {
                    base.Tables.Add(new ServiceRegisterDataTable(ds.Tables["ServiceRegister"]));
                }
                if ((ds.Tables["Service_Item_List"] != null)) {
                    base.Tables.Add(new Service_Item_ListDataTable(ds.Tables["Service_Item_List"]));
                }
                if ((ds.Tables["InvoiceAll"] != null)) {
                    base.Tables.Add(new InvoiceAllDataTable(ds.Tables["InvoiceAll"]));
                }
                if ((ds.Tables["InvoicePage"] != null)) {
                    base.Tables.Add(new InvoicePageDataTable(ds.Tables["InvoicePage"]));
                }
                if ((ds.Tables["SalesInvoice_New"] != null)) {
                    base.Tables.Add(new SalesInvoice_NewDataTable(ds.Tables["SalesInvoice_New"]));
                }
                if ((ds.Tables["SalesInvoice_Page"] != null)) {
                    base.Tables.Add(new SalesInvoice_PageDataTable(ds.Tables["SalesInvoice_Page"]));
                }
                if ((ds.Tables["Invoice_New"] != null)) {
                    base.Tables.Add(new Invoice_NewDataTable(ds.Tables["Invoice_New"]));
                }
                if ((ds.Tables["Invoice_New_Item"] != null)) {
                    base.Tables.Add(new Invoice_New_ItemDataTable(ds.Tables["Invoice_New_Item"]));
                }
                if ((ds.Tables["CompanyInfo"] != null)) {
                    base.Tables.Add(new CompanyInfoDataTable(ds.Tables["CompanyInfo"]));
                }
                if ((ds.Tables["Customer Service"] != null)) {
                    base.Tables.Add(new Customer_ServiceDataTable(ds.Tables["Customer Service"]));
                }
                if ((ds.Tables["TNC"] != null)) {
                    base.Tables.Add(new TNCDataTable(ds.Tables["TNC"]));
                }
                if ((ds.Tables["Service_Toyo"] != null)) {
                    base.Tables.Add(new Service_ToyoDataTable(ds.Tables["Service_Toyo"]));
                }
                if ((ds.Tables["ItemStockRegisterHozifa"] != null)) {
                    base.Tables.Add(new ItemStockRegisterHozifaDataTable(ds.Tables["ItemStockRegisterHozifa"]));
                }
                if ((ds.Tables["PurchaseInvoiceRegisterWithDetail"] != null)) {
                    base.Tables.Add(new PurchaseInvoiceRegisterWithDetailDataTable(ds.Tables["PurchaseInvoiceRegisterWithDetail"]));
                }
                if ((ds.Tables["SalesRegisterHozifa"] != null)) {
                    base.Tables.Add(new SalesRegisterHozifaDataTable(ds.Tables["SalesRegisterHozifa"]));
                }
                if ((ds.Tables["PaymentReceipt"] != null)) {
                    base.Tables.Add(new PaymentReceiptDataTable(ds.Tables["PaymentReceipt"]));
                }
                if ((ds.Tables["ServiceOrder"] != null)) {
                    base.Tables.Add(new ServiceOrderDataTable(ds.Tables["ServiceOrder"]));
                }
                if ((ds.Tables["ServiceInvoiceOld"] != null)) {
                    base.Tables.Add(new ServiceInvoiceOldDataTable(ds.Tables["ServiceInvoiceOld"]));
                }
                if ((ds.Tables["ItemSales"] != null)) {
                    base.Tables.Add(new ItemSalesDataTable(ds.Tables["ItemSales"]));
                }
                if ((ds.Tables["Logo"] != null)) {
                    base.Tables.Add(new LogoDataTable(ds.Tables["Logo"]));
                }
                if ((ds.Tables["ChallanCumTaxInvoice"] != null)) {
                    base.Tables.Add(new ChallanCumTaxInvoiceDataTable(ds.Tables["ChallanCumTaxInvoice"]));
                }
                if ((ds.Tables["PaymentRegister1"] != null)) {
                    base.Tables.Add(new PaymentRegister1DataTable(ds.Tables["PaymentRegister1"]));
                }
                if ((ds.Tables["ItemRegister"] != null)) {
                    base.Tables.Add(new ItemRegisterDataTable(ds.Tables["ItemRegister"]));
                }
                if ((ds.Tables["PORegister"] != null)) {
                    base.Tables.Add(new PORegisterDataTable(ds.Tables["PORegister"]));
                }
                if ((ds.Tables["OrderBooking"] != null)) {
                    base.Tables.Add(new OrderBookingDataTable(ds.Tables["OrderBooking"]));
                }
                if ((ds.Tables["ItemPic"] != null)) {
                    base.Tables.Add(new ItemPicDataTable(ds.Tables["ItemPic"]));
                }
                if ((ds.Tables["Ledger_Report"] != null)) {
                    base.Tables.Add(new Ledger_ReportDataTable(ds.Tables["Ledger_Report"]));
                }
                if ((ds.Tables["DebitNote"] != null)) {
                    base.Tables.Add(new DebitNoteDataTable(ds.Tables["DebitNote"]));
                }
                if ((ds.Tables["CreditNote"] != null)) {
                    base.Tables.Add(new CreditNoteDataTable(ds.Tables["CreditNote"]));
                }
                if ((ds.Tables["ServiceInvoice"] != null)) {
                    base.Tables.Add(new ServiceInvoiceDataTable(ds.Tables["ServiceInvoice"]));
                }
                if ((ds.Tables["ProfitnLossStatement"] != null)) {
                    base.Tables.Add(new ProfitnLossStatementDataTable(ds.Tables["ProfitnLossStatement"]));
                }
                if ((ds.Tables["PaymentReturnRegister"] != null)) {
                    base.Tables.Add(new PaymentReturnRegisterDataTable(ds.Tables["PaymentReturnRegister"]));
                }
                if ((ds.Tables["CustomerPaymentReturnRegister"] != null)) {
                    base.Tables.Add(new CustomerPaymentReturnRegisterDataTable(ds.Tables["CustomerPaymentReturnRegister"]));
                }
                if ((ds.Tables["PaymentReturnReceipt"] != null)) {
                    base.Tables.Add(new PaymentReturnReceiptDataTable(ds.Tables["PaymentReturnReceipt"]));
                }
                if ((ds.Tables["PaymentRegister"] != null)) {
                    base.Tables.Add(new PaymentRegisterDataTable(ds.Tables["PaymentRegister"]));
                }
                if ((ds.Tables["MatrialissueREG"] != null)) {
                    base.Tables.Add(new MatrialissueREGDataTable(ds.Tables["MatrialissueREG"]));
                }
                if ((ds.Tables["Matrialissue"] != null)) {
                    base.Tables.Add(new MatrialissueDataTable(ds.Tables["Matrialissue"]));
                }
                if ((ds.Tables["MatrialReturnREG"] != null)) {
                    base.Tables.Add(new MatrialReturnREGDataTable(ds.Tables["MatrialReturnREG"]));
                }
                if ((ds.Tables["ItemAdjustmentRegister"] != null)) {
                    base.Tables.Add(new ItemAdjustmentRegisterDataTable(ds.Tables["ItemAdjustmentRegister"]));
                }
                if ((ds.Tables["PurchaseINdentReg"] != null)) {
                    base.Tables.Add(new PurchaseINdentRegDataTable(ds.Tables["PurchaseINdentReg"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SiteInfoRegisterDataTable SiteInfoRegister {
            get {
                return this.tableSiteInfoRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BuildingInfoRegisterDataTable BuildingInfoRegister {
            get {
                return this.tableBuildingInfoRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BlockInfoRegisterDataTable BlockInfoRegister {
            get {
                return this.tableBlockInfoRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BankDetailRegisterDataTable BankDetailRegister {
            get {
                return this.tableBankDetailRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AllotmentReportDataTable AllotmentReport {
            get {
                return this.tableAllotmentReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DemandLetterDataTable DemandLetter {
            get {
                return this.tableDemandLetter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerReceiptDataTable CustomerReceipt {
            get {
                return this.tableCustomerReceipt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LeadRegisterDataTable LeadRegister {
            get {
                return this.tableLeadRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HRDetailListDataTable HRDetailList {
            get {
                return this.tableHRDetailList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DailyConsumptionDataTable DailyConsumption {
            get {
                return this.tableDailyConsumption;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerPaymentRegisterDataTable CustomerPaymentRegister {
            get {
                return this.tableCustomerPaymentRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerRegisterDataTable CustomerRegister {
            get {
                return this.tableCustomerRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesVoucherDataTable SalesVoucher {
            get {
                return this.tableSalesVoucher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServiceModuleRegisterDataTable ServiceModuleRegister {
            get {
                return this.tableServiceModuleRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CarTypeWiseRegisterDataTable CarTypeWiseRegister {
            get {
                return this.tableCarTypeWiseRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesInvoiceDataTable SalesInvoice {
            get {
                return this.tableSalesInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseOrderDataTable PurchaseOrder {
            get {
                return this.tablePurchaseOrder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public salesDataTable sales {
            get {
                return this.tablesales;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesInvoicevDataTable SalesInvoicev {
            get {
                return this.tableSalesInvoicev;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesInvoicevidhiDataTable SalesInvoicevidhi {
            get {
                return this.tableSalesInvoicevidhi;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesInvoiceviDataTable SalesInvoicevi {
            get {
                return this.tableSalesInvoicevi;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DriveDutyVoucherDataTable DriveDutyVoucher {
            get {
                return this.tableDriveDutyVoucher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QuotationDataTable Quotation {
            get {
                return this.tableQuotation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AverageDataTable Average {
            get {
                return this.tableAverage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DepartmentRegisterDataTable DepartmentRegister {
            get {
                return this.tableDepartmentRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContractTypeRegisterDataTable ContractTypeRegister {
            get {
                return this.tableContractTypeRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CallTypeRegisterDataTable CallTypeRegister {
            get {
                return this.tableCallTypeRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZoneRegisterDataTable ZoneRegister {
            get {
                return this.tableZoneRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductRegisterDataTable ProductRegister {
            get {
                return this.tableProductRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GodownRegisterDataTable GodownRegister {
            get {
                return this.tableGodownRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BookingRegisterDataTable BookingRegister {
            get {
                return this.tableBookingRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BookingRegDataTable BookingReg {
            get {
                return this.tableBookingReg;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VendorRegDataTable VendorReg {
            get {
                return this.tableVendorReg;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerRegDataTable CustomerReg {
            get {
                return this.tableCustomerReg;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerPendingRegDataTable CustomerPendingReg {
            get {
                return this.tableCustomerPendingReg;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VendorPendingRegDataTable VendorPendingReg {
            get {
                return this.tableVendorPendingReg;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServiceRegisterDataTable ServiceRegister {
            get {
                return this.tableServiceRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Service_Item_ListDataTable Service_Item_List {
            get {
                return this.tableService_Item_List;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InvoiceAllDataTable InvoiceAll {
            get {
                return this.tableInvoiceAll;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InvoicePageDataTable InvoicePage {
            get {
                return this.tableInvoicePage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesInvoice_NewDataTable SalesInvoice_New {
            get {
                return this.tableSalesInvoice_New;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesInvoice_PageDataTable SalesInvoice_Page {
            get {
                return this.tableSalesInvoice_Page;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Invoice_NewDataTable Invoice_New {
            get {
                return this.tableInvoice_New;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Invoice_New_ItemDataTable Invoice_New_Item {
            get {
                return this.tableInvoice_New_Item;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CompanyInfoDataTable CompanyInfo {
            get {
                return this.tableCompanyInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Customer_ServiceDataTable Customer_Service {
            get {
                return this.tableCustomer_Service;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TNCDataTable TNC {
            get {
                return this.tableTNC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Service_ToyoDataTable Service_Toyo {
            get {
                return this.tableService_Toyo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemStockRegisterHozifaDataTable ItemStockRegisterHozifa {
            get {
                return this.tableItemStockRegisterHozifa;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseInvoiceRegisterWithDetailDataTable PurchaseInvoiceRegisterWithDetail {
            get {
                return this.tablePurchaseInvoiceRegisterWithDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SalesRegisterHozifaDataTable SalesRegisterHozifa {
            get {
                return this.tableSalesRegisterHozifa;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentReceiptDataTable PaymentReceipt {
            get {
                return this.tablePaymentReceipt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServiceOrderDataTable ServiceOrder {
            get {
                return this.tableServiceOrder;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServiceInvoiceOldDataTable ServiceInvoiceOld {
            get {
                return this.tableServiceInvoiceOld;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemSalesDataTable ItemSales {
            get {
                return this.tableItemSales;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LogoDataTable Logo {
            get {
                return this.tableLogo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ChallanCumTaxInvoiceDataTable ChallanCumTaxInvoice {
            get {
                return this.tableChallanCumTaxInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentRegister1DataTable PaymentRegister1 {
            get {
                return this.tablePaymentRegister1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemRegisterDataTable ItemRegister {
            get {
                return this.tableItemRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PORegisterDataTable PORegister {
            get {
                return this.tablePORegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrderBookingDataTable OrderBooking {
            get {
                return this.tableOrderBooking;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemPicDataTable ItemPic {
            get {
                return this.tableItemPic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Ledger_ReportDataTable Ledger_Report {
            get {
                return this.tableLedger_Report;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DebitNoteDataTable DebitNote {
            get {
                return this.tableDebitNote;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CreditNoteDataTable CreditNote {
            get {
                return this.tableCreditNote;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServiceInvoiceDataTable ServiceInvoice {
            get {
                return this.tableServiceInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProfitnLossStatementDataTable ProfitnLossStatement {
            get {
                return this.tableProfitnLossStatement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentReturnRegisterDataTable PaymentReturnRegister {
            get {
                return this.tablePaymentReturnRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CustomerPaymentReturnRegisterDataTable CustomerPaymentReturnRegister {
            get {
                return this.tableCustomerPaymentReturnRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentReturnReceiptDataTable PaymentReturnReceipt {
            get {
                return this.tablePaymentReturnReceipt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PaymentRegisterDataTable PaymentRegister {
            get {
                return this.tablePaymentRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MatrialissueREGDataTable MatrialissueREG {
            get {
                return this.tableMatrialissueREG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MatrialissueDataTable Matrialissue {
            get {
                return this.tableMatrialissue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MatrialReturnREGDataTable MatrialReturnREG {
            get {
                return this.tableMatrialReturnREG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ItemAdjustmentRegisterDataTable ItemAdjustmentRegister {
            get {
                return this.tableItemAdjustmentRegister;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PurchaseINdentRegDataTable PurchaseINdentReg {
            get {
                return this.tablePurchaseINdentReg;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            JPCRM cln = ((JPCRM)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SiteInfoRegister"] != null)) {
                    base.Tables.Add(new SiteInfoRegisterDataTable(ds.Tables["SiteInfoRegister"]));
                }
                if ((ds.Tables["BuildingInfoRegister"] != null)) {
                    base.Tables.Add(new BuildingInfoRegisterDataTable(ds.Tables["BuildingInfoRegister"]));
                }
                if ((ds.Tables["BlockInfoRegister"] != null)) {
                    base.Tables.Add(new BlockInfoRegisterDataTable(ds.Tables["BlockInfoRegister"]));
                }
                if ((ds.Tables["BankDetailRegister"] != null)) {
                    base.Tables.Add(new BankDetailRegisterDataTable(ds.Tables["BankDetailRegister"]));
                }
                if ((ds.Tables["AllotmentReport"] != null)) {
                    base.Tables.Add(new AllotmentReportDataTable(ds.Tables["AllotmentReport"]));
                }
                if ((ds.Tables["DemandLetter"] != null)) {
                    base.Tables.Add(new DemandLetterDataTable(ds.Tables["DemandLetter"]));
                }
                if ((ds.Tables["CustomerReceipt"] != null)) {
                    base.Tables.Add(new CustomerReceiptDataTable(ds.Tables["CustomerReceipt"]));
                }
                if ((ds.Tables["LeadRegister"] != null)) {
                    base.Tables.Add(new LeadRegisterDataTable(ds.Tables["LeadRegister"]));
                }
                if ((ds.Tables["HRDetailList"] != null)) {
                    base.Tables.Add(new HRDetailListDataTable(ds.Tables["HRDetailList"]));
                }
                if ((ds.Tables["DailyConsumption"] != null)) {
                    base.Tables.Add(new DailyConsumptionDataTable(ds.Tables["DailyConsumption"]));
                }
                if ((ds.Tables["CustomerPaymentRegister"] != null)) {
                    base.Tables.Add(new CustomerPaymentRegisterDataTable(ds.Tables["CustomerPaymentRegister"]));
                }
                if ((ds.Tables["CustomerRegister"] != null)) {
                    base.Tables.Add(new CustomerRegisterDataTable(ds.Tables["CustomerRegister"]));
                }
                if ((ds.Tables["SalesVoucher"] != null)) {
                    base.Tables.Add(new SalesVoucherDataTable(ds.Tables["SalesVoucher"]));
                }
                if ((ds.Tables["ServiceModuleRegister"] != null)) {
                    base.Tables.Add(new ServiceModuleRegisterDataTable(ds.Tables["ServiceModuleRegister"]));
                }
                if ((ds.Tables["CarTypeWiseRegister"] != null)) {
                    base.Tables.Add(new CarTypeWiseRegisterDataTable(ds.Tables["CarTypeWiseRegister"]));
                }
                if ((ds.Tables["SalesInvoice"] != null)) {
                    base.Tables.Add(new SalesInvoiceDataTable(ds.Tables["SalesInvoice"]));
                }
                if ((ds.Tables["PurchaseOrder"] != null)) {
                    base.Tables.Add(new PurchaseOrderDataTable(ds.Tables["PurchaseOrder"]));
                }
                if ((ds.Tables["sales"] != null)) {
                    base.Tables.Add(new salesDataTable(ds.Tables["sales"]));
                }
                if ((ds.Tables["SalesInvoicev"] != null)) {
                    base.Tables.Add(new SalesInvoicevDataTable(ds.Tables["SalesInvoicev"]));
                }
                if ((ds.Tables["SalesInvoicevidhi"] != null)) {
                    base.Tables.Add(new SalesInvoicevidhiDataTable(ds.Tables["SalesInvoicevidhi"]));
                }
                if ((ds.Tables["SalesInvoicevi"] != null)) {
                    base.Tables.Add(new SalesInvoiceviDataTable(ds.Tables["SalesInvoicevi"]));
                }
                if ((ds.Tables["DriveDutyVoucher"] != null)) {
                    base.Tables.Add(new DriveDutyVoucherDataTable(ds.Tables["DriveDutyVoucher"]));
                }
                if ((ds.Tables["Quotation"] != null)) {
                    base.Tables.Add(new QuotationDataTable(ds.Tables["Quotation"]));
                }
                if ((ds.Tables["Average"] != null)) {
                    base.Tables.Add(new AverageDataTable(ds.Tables["Average"]));
                }
                if ((ds.Tables["DepartmentRegister"] != null)) {
                    base.Tables.Add(new DepartmentRegisterDataTable(ds.Tables["DepartmentRegister"]));
                }
                if ((ds.Tables["ContractTypeRegister"] != null)) {
                    base.Tables.Add(new ContractTypeRegisterDataTable(ds.Tables["ContractTypeRegister"]));
                }
                if ((ds.Tables["CallTypeRegister"] != null)) {
                    base.Tables.Add(new CallTypeRegisterDataTable(ds.Tables["CallTypeRegister"]));
                }
                if ((ds.Tables["ZoneRegister"] != null)) {
                    base.Tables.Add(new ZoneRegisterDataTable(ds.Tables["ZoneRegister"]));
                }
                if ((ds.Tables["ProductRegister"] != null)) {
                    base.Tables.Add(new ProductRegisterDataTable(ds.Tables["ProductRegister"]));
                }
                if ((ds.Tables["GodownRegister"] != null)) {
                    base.Tables.Add(new GodownRegisterDataTable(ds.Tables["GodownRegister"]));
                }
                if ((ds.Tables["BookingRegister"] != null)) {
                    base.Tables.Add(new BookingRegisterDataTable(ds.Tables["BookingRegister"]));
                }
                if ((ds.Tables["BookingReg"] != null)) {
                    base.Tables.Add(new BookingRegDataTable(ds.Tables["BookingReg"]));
                }
                if ((ds.Tables["VendorReg"] != null)) {
                    base.Tables.Add(new VendorRegDataTable(ds.Tables["VendorReg"]));
                }
                if ((ds.Tables["CustomerReg"] != null)) {
                    base.Tables.Add(new CustomerRegDataTable(ds.Tables["CustomerReg"]));
                }
                if ((ds.Tables["CustomerPendingReg"] != null)) {
                    base.Tables.Add(new CustomerPendingRegDataTable(ds.Tables["CustomerPendingReg"]));
                }
                if ((ds.Tables["VendorPendingReg"] != null)) {
                    base.Tables.Add(new VendorPendingRegDataTable(ds.Tables["VendorPendingReg"]));
                }
                if ((ds.Tables["ServiceRegister"] != null)) {
                    base.Tables.Add(new ServiceRegisterDataTable(ds.Tables["ServiceRegister"]));
                }
                if ((ds.Tables["Service_Item_List"] != null)) {
                    base.Tables.Add(new Service_Item_ListDataTable(ds.Tables["Service_Item_List"]));
                }
                if ((ds.Tables["InvoiceAll"] != null)) {
                    base.Tables.Add(new InvoiceAllDataTable(ds.Tables["InvoiceAll"]));
                }
                if ((ds.Tables["InvoicePage"] != null)) {
                    base.Tables.Add(new InvoicePageDataTable(ds.Tables["InvoicePage"]));
                }
                if ((ds.Tables["SalesInvoice_New"] != null)) {
                    base.Tables.Add(new SalesInvoice_NewDataTable(ds.Tables["SalesInvoice_New"]));
                }
                if ((ds.Tables["SalesInvoice_Page"] != null)) {
                    base.Tables.Add(new SalesInvoice_PageDataTable(ds.Tables["SalesInvoice_Page"]));
                }
                if ((ds.Tables["Invoice_New"] != null)) {
                    base.Tables.Add(new Invoice_NewDataTable(ds.Tables["Invoice_New"]));
                }
                if ((ds.Tables["Invoice_New_Item"] != null)) {
                    base.Tables.Add(new Invoice_New_ItemDataTable(ds.Tables["Invoice_New_Item"]));
                }
                if ((ds.Tables["CompanyInfo"] != null)) {
                    base.Tables.Add(new CompanyInfoDataTable(ds.Tables["CompanyInfo"]));
                }
                if ((ds.Tables["Customer Service"] != null)) {
                    base.Tables.Add(new Customer_ServiceDataTable(ds.Tables["Customer Service"]));
                }
                if ((ds.Tables["TNC"] != null)) {
                    base.Tables.Add(new TNCDataTable(ds.Tables["TNC"]));
                }
                if ((ds.Tables["Service_Toyo"] != null)) {
                    base.Tables.Add(new Service_ToyoDataTable(ds.Tables["Service_Toyo"]));
                }
                if ((ds.Tables["ItemStockRegisterHozifa"] != null)) {
                    base.Tables.Add(new ItemStockRegisterHozifaDataTable(ds.Tables["ItemStockRegisterHozifa"]));
                }
                if ((ds.Tables["PurchaseInvoiceRegisterWithDetail"] != null)) {
                    base.Tables.Add(new PurchaseInvoiceRegisterWithDetailDataTable(ds.Tables["PurchaseInvoiceRegisterWithDetail"]));
                }
                if ((ds.Tables["SalesRegisterHozifa"] != null)) {
                    base.Tables.Add(new SalesRegisterHozifaDataTable(ds.Tables["SalesRegisterHozifa"]));
                }
                if ((ds.Tables["PaymentReceipt"] != null)) {
                    base.Tables.Add(new PaymentReceiptDataTable(ds.Tables["PaymentReceipt"]));
                }
                if ((ds.Tables["ServiceOrder"] != null)) {
                    base.Tables.Add(new ServiceOrderDataTable(ds.Tables["ServiceOrder"]));
                }
                if ((ds.Tables["ServiceInvoiceOld"] != null)) {
                    base.Tables.Add(new ServiceInvoiceOldDataTable(ds.Tables["ServiceInvoiceOld"]));
                }
                if ((ds.Tables["ItemSales"] != null)) {
                    base.Tables.Add(new ItemSalesDataTable(ds.Tables["ItemSales"]));
                }
                if ((ds.Tables["Logo"] != null)) {
                    base.Tables.Add(new LogoDataTable(ds.Tables["Logo"]));
                }
                if ((ds.Tables["ChallanCumTaxInvoice"] != null)) {
                    base.Tables.Add(new ChallanCumTaxInvoiceDataTable(ds.Tables["ChallanCumTaxInvoice"]));
                }
                if ((ds.Tables["PaymentRegister1"] != null)) {
                    base.Tables.Add(new PaymentRegister1DataTable(ds.Tables["PaymentRegister1"]));
                }
                if ((ds.Tables["ItemRegister"] != null)) {
                    base.Tables.Add(new ItemRegisterDataTable(ds.Tables["ItemRegister"]));
                }
                if ((ds.Tables["PORegister"] != null)) {
                    base.Tables.Add(new PORegisterDataTable(ds.Tables["PORegister"]));
                }
                if ((ds.Tables["OrderBooking"] != null)) {
                    base.Tables.Add(new OrderBookingDataTable(ds.Tables["OrderBooking"]));
                }
                if ((ds.Tables["ItemPic"] != null)) {
                    base.Tables.Add(new ItemPicDataTable(ds.Tables["ItemPic"]));
                }
                if ((ds.Tables["Ledger_Report"] != null)) {
                    base.Tables.Add(new Ledger_ReportDataTable(ds.Tables["Ledger_Report"]));
                }
                if ((ds.Tables["DebitNote"] != null)) {
                    base.Tables.Add(new DebitNoteDataTable(ds.Tables["DebitNote"]));
                }
                if ((ds.Tables["CreditNote"] != null)) {
                    base.Tables.Add(new CreditNoteDataTable(ds.Tables["CreditNote"]));
                }
                if ((ds.Tables["ServiceInvoice"] != null)) {
                    base.Tables.Add(new ServiceInvoiceDataTable(ds.Tables["ServiceInvoice"]));
                }
                if ((ds.Tables["ProfitnLossStatement"] != null)) {
                    base.Tables.Add(new ProfitnLossStatementDataTable(ds.Tables["ProfitnLossStatement"]));
                }
                if ((ds.Tables["PaymentReturnRegister"] != null)) {
                    base.Tables.Add(new PaymentReturnRegisterDataTable(ds.Tables["PaymentReturnRegister"]));
                }
                if ((ds.Tables["CustomerPaymentReturnRegister"] != null)) {
                    base.Tables.Add(new CustomerPaymentReturnRegisterDataTable(ds.Tables["CustomerPaymentReturnRegister"]));
                }
                if ((ds.Tables["PaymentReturnReceipt"] != null)) {
                    base.Tables.Add(new PaymentReturnReceiptDataTable(ds.Tables["PaymentReturnReceipt"]));
                }
                if ((ds.Tables["PaymentRegister"] != null)) {
                    base.Tables.Add(new PaymentRegisterDataTable(ds.Tables["PaymentRegister"]));
                }
                if ((ds.Tables["MatrialissueREG"] != null)) {
                    base.Tables.Add(new MatrialissueREGDataTable(ds.Tables["MatrialissueREG"]));
                }
                if ((ds.Tables["Matrialissue"] != null)) {
                    base.Tables.Add(new MatrialissueDataTable(ds.Tables["Matrialissue"]));
                }
                if ((ds.Tables["MatrialReturnREG"] != null)) {
                    base.Tables.Add(new MatrialReturnREGDataTable(ds.Tables["MatrialReturnREG"]));
                }
                if ((ds.Tables["ItemAdjustmentRegister"] != null)) {
                    base.Tables.Add(new ItemAdjustmentRegisterDataTable(ds.Tables["ItemAdjustmentRegister"]));
                }
                if ((ds.Tables["PurchaseINdentReg"] != null)) {
                    base.Tables.Add(new PurchaseINdentRegDataTable(ds.Tables["PurchaseINdentReg"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSiteInfoRegister = ((SiteInfoRegisterDataTable)(base.Tables["SiteInfoRegister"]));
            if ((initTable == true)) {
                if ((this.tableSiteInfoRegister != null)) {
                    this.tableSiteInfoRegister.InitVars();
                }
            }
            this.tableBuildingInfoRegister = ((BuildingInfoRegisterDataTable)(base.Tables["BuildingInfoRegister"]));
            if ((initTable == true)) {
                if ((this.tableBuildingInfoRegister != null)) {
                    this.tableBuildingInfoRegister.InitVars();
                }
            }
            this.tableBlockInfoRegister = ((BlockInfoRegisterDataTable)(base.Tables["BlockInfoRegister"]));
            if ((initTable == true)) {
                if ((this.tableBlockInfoRegister != null)) {
                    this.tableBlockInfoRegister.InitVars();
                }
            }
            this.tableBankDetailRegister = ((BankDetailRegisterDataTable)(base.Tables["BankDetailRegister"]));
            if ((initTable == true)) {
                if ((this.tableBankDetailRegister != null)) {
                    this.tableBankDetailRegister.InitVars();
                }
            }
            this.tableAllotmentReport = ((AllotmentReportDataTable)(base.Tables["AllotmentReport"]));
            if ((initTable == true)) {
                if ((this.tableAllotmentReport != null)) {
                    this.tableAllotmentReport.InitVars();
                }
            }
            this.tableDemandLetter = ((DemandLetterDataTable)(base.Tables["DemandLetter"]));
            if ((initTable == true)) {
                if ((this.tableDemandLetter != null)) {
                    this.tableDemandLetter.InitVars();
                }
            }
            this.tableCustomerReceipt = ((CustomerReceiptDataTable)(base.Tables["CustomerReceipt"]));
            if ((initTable == true)) {
                if ((this.tableCustomerReceipt != null)) {
                    this.tableCustomerReceipt.InitVars();
                }
            }
            this.tableLeadRegister = ((LeadRegisterDataTable)(base.Tables["LeadRegister"]));
            if ((initTable == true)) {
                if ((this.tableLeadRegister != null)) {
                    this.tableLeadRegister.InitVars();
                }
            }
            this.tableHRDetailList = ((HRDetailListDataTable)(base.Tables["HRDetailList"]));
            if ((initTable == true)) {
                if ((this.tableHRDetailList != null)) {
                    this.tableHRDetailList.InitVars();
                }
            }
            this.tableDailyConsumption = ((DailyConsumptionDataTable)(base.Tables["DailyConsumption"]));
            if ((initTable == true)) {
                if ((this.tableDailyConsumption != null)) {
                    this.tableDailyConsumption.InitVars();
                }
            }
            this.tableCustomerPaymentRegister = ((CustomerPaymentRegisterDataTable)(base.Tables["CustomerPaymentRegister"]));
            if ((initTable == true)) {
                if ((this.tableCustomerPaymentRegister != null)) {
                    this.tableCustomerPaymentRegister.InitVars();
                }
            }
            this.tableCustomerRegister = ((CustomerRegisterDataTable)(base.Tables["CustomerRegister"]));
            if ((initTable == true)) {
                if ((this.tableCustomerRegister != null)) {
                    this.tableCustomerRegister.InitVars();
                }
            }
            this.tableSalesVoucher = ((SalesVoucherDataTable)(base.Tables["SalesVoucher"]));
            if ((initTable == true)) {
                if ((this.tableSalesVoucher != null)) {
                    this.tableSalesVoucher.InitVars();
                }
            }
            this.tableServiceModuleRegister = ((ServiceModuleRegisterDataTable)(base.Tables["ServiceModuleRegister"]));
            if ((initTable == true)) {
                if ((this.tableServiceModuleRegister != null)) {
                    this.tableServiceModuleRegister.InitVars();
                }
            }
            this.tableCarTypeWiseRegister = ((CarTypeWiseRegisterDataTable)(base.Tables["CarTypeWiseRegister"]));
            if ((initTable == true)) {
                if ((this.tableCarTypeWiseRegister != null)) {
                    this.tableCarTypeWiseRegister.InitVars();
                }
            }
            this.tableSalesInvoice = ((SalesInvoiceDataTable)(base.Tables["SalesInvoice"]));
            if ((initTable == true)) {
                if ((this.tableSalesInvoice != null)) {
                    this.tableSalesInvoice.InitVars();
                }
            }
            this.tablePurchaseOrder = ((PurchaseOrderDataTable)(base.Tables["PurchaseOrder"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseOrder != null)) {
                    this.tablePurchaseOrder.InitVars();
                }
            }
            this.tablesales = ((salesDataTable)(base.Tables["sales"]));
            if ((initTable == true)) {
                if ((this.tablesales != null)) {
                    this.tablesales.InitVars();
                }
            }
            this.tableSalesInvoicev = ((SalesInvoicevDataTable)(base.Tables["SalesInvoicev"]));
            if ((initTable == true)) {
                if ((this.tableSalesInvoicev != null)) {
                    this.tableSalesInvoicev.InitVars();
                }
            }
            this.tableSalesInvoicevidhi = ((SalesInvoicevidhiDataTable)(base.Tables["SalesInvoicevidhi"]));
            if ((initTable == true)) {
                if ((this.tableSalesInvoicevidhi != null)) {
                    this.tableSalesInvoicevidhi.InitVars();
                }
            }
            this.tableSalesInvoicevi = ((SalesInvoiceviDataTable)(base.Tables["SalesInvoicevi"]));
            if ((initTable == true)) {
                if ((this.tableSalesInvoicevi != null)) {
                    this.tableSalesInvoicevi.InitVars();
                }
            }
            this.tableDriveDutyVoucher = ((DriveDutyVoucherDataTable)(base.Tables["DriveDutyVoucher"]));
            if ((initTable == true)) {
                if ((this.tableDriveDutyVoucher != null)) {
                    this.tableDriveDutyVoucher.InitVars();
                }
            }
            this.tableQuotation = ((QuotationDataTable)(base.Tables["Quotation"]));
            if ((initTable == true)) {
                if ((this.tableQuotation != null)) {
                    this.tableQuotation.InitVars();
                }
            }
            this.tableAverage = ((AverageDataTable)(base.Tables["Average"]));
            if ((initTable == true)) {
                if ((this.tableAverage != null)) {
                    this.tableAverage.InitVars();
                }
            }
            this.tableDepartmentRegister = ((DepartmentRegisterDataTable)(base.Tables["DepartmentRegister"]));
            if ((initTable == true)) {
                if ((this.tableDepartmentRegister != null)) {
                    this.tableDepartmentRegister.InitVars();
                }
            }
            this.tableContractTypeRegister = ((ContractTypeRegisterDataTable)(base.Tables["ContractTypeRegister"]));
            if ((initTable == true)) {
                if ((this.tableContractTypeRegister != null)) {
                    this.tableContractTypeRegister.InitVars();
                }
            }
            this.tableCallTypeRegister = ((CallTypeRegisterDataTable)(base.Tables["CallTypeRegister"]));
            if ((initTable == true)) {
                if ((this.tableCallTypeRegister != null)) {
                    this.tableCallTypeRegister.InitVars();
                }
            }
            this.tableZoneRegister = ((ZoneRegisterDataTable)(base.Tables["ZoneRegister"]));
            if ((initTable == true)) {
                if ((this.tableZoneRegister != null)) {
                    this.tableZoneRegister.InitVars();
                }
            }
            this.tableProductRegister = ((ProductRegisterDataTable)(base.Tables["ProductRegister"]));
            if ((initTable == true)) {
                if ((this.tableProductRegister != null)) {
                    this.tableProductRegister.InitVars();
                }
            }
            this.tableGodownRegister = ((GodownRegisterDataTable)(base.Tables["GodownRegister"]));
            if ((initTable == true)) {
                if ((this.tableGodownRegister != null)) {
                    this.tableGodownRegister.InitVars();
                }
            }
            this.tableBookingRegister = ((BookingRegisterDataTable)(base.Tables["BookingRegister"]));
            if ((initTable == true)) {
                if ((this.tableBookingRegister != null)) {
                    this.tableBookingRegister.InitVars();
                }
            }
            this.tableBookingReg = ((BookingRegDataTable)(base.Tables["BookingReg"]));
            if ((initTable == true)) {
                if ((this.tableBookingReg != null)) {
                    this.tableBookingReg.InitVars();
                }
            }
            this.tableVendorReg = ((VendorRegDataTable)(base.Tables["VendorReg"]));
            if ((initTable == true)) {
                if ((this.tableVendorReg != null)) {
                    this.tableVendorReg.InitVars();
                }
            }
            this.tableCustomerReg = ((CustomerRegDataTable)(base.Tables["CustomerReg"]));
            if ((initTable == true)) {
                if ((this.tableCustomerReg != null)) {
                    this.tableCustomerReg.InitVars();
                }
            }
            this.tableCustomerPendingReg = ((CustomerPendingRegDataTable)(base.Tables["CustomerPendingReg"]));
            if ((initTable == true)) {
                if ((this.tableCustomerPendingReg != null)) {
                    this.tableCustomerPendingReg.InitVars();
                }
            }
            this.tableVendorPendingReg = ((VendorPendingRegDataTable)(base.Tables["VendorPendingReg"]));
            if ((initTable == true)) {
                if ((this.tableVendorPendingReg != null)) {
                    this.tableVendorPendingReg.InitVars();
                }
            }
            this.tableServiceRegister = ((ServiceRegisterDataTable)(base.Tables["ServiceRegister"]));
            if ((initTable == true)) {
                if ((this.tableServiceRegister != null)) {
                    this.tableServiceRegister.InitVars();
                }
            }
            this.tableService_Item_List = ((Service_Item_ListDataTable)(base.Tables["Service_Item_List"]));
            if ((initTable == true)) {
                if ((this.tableService_Item_List != null)) {
                    this.tableService_Item_List.InitVars();
                }
            }
            this.tableInvoiceAll = ((InvoiceAllDataTable)(base.Tables["InvoiceAll"]));
            if ((initTable == true)) {
                if ((this.tableInvoiceAll != null)) {
                    this.tableInvoiceAll.InitVars();
                }
            }
            this.tableInvoicePage = ((InvoicePageDataTable)(base.Tables["InvoicePage"]));
            if ((initTable == true)) {
                if ((this.tableInvoicePage != null)) {
                    this.tableInvoicePage.InitVars();
                }
            }
            this.tableSalesInvoice_New = ((SalesInvoice_NewDataTable)(base.Tables["SalesInvoice_New"]));
            if ((initTable == true)) {
                if ((this.tableSalesInvoice_New != null)) {
                    this.tableSalesInvoice_New.InitVars();
                }
            }
            this.tableSalesInvoice_Page = ((SalesInvoice_PageDataTable)(base.Tables["SalesInvoice_Page"]));
            if ((initTable == true)) {
                if ((this.tableSalesInvoice_Page != null)) {
                    this.tableSalesInvoice_Page.InitVars();
                }
            }
            this.tableInvoice_New = ((Invoice_NewDataTable)(base.Tables["Invoice_New"]));
            if ((initTable == true)) {
                if ((this.tableInvoice_New != null)) {
                    this.tableInvoice_New.InitVars();
                }
            }
            this.tableInvoice_New_Item = ((Invoice_New_ItemDataTable)(base.Tables["Invoice_New_Item"]));
            if ((initTable == true)) {
                if ((this.tableInvoice_New_Item != null)) {
                    this.tableInvoice_New_Item.InitVars();
                }
            }
            this.tableCompanyInfo = ((CompanyInfoDataTable)(base.Tables["CompanyInfo"]));
            if ((initTable == true)) {
                if ((this.tableCompanyInfo != null)) {
                    this.tableCompanyInfo.InitVars();
                }
            }
            this.tableCustomer_Service = ((Customer_ServiceDataTable)(base.Tables["Customer Service"]));
            if ((initTable == true)) {
                if ((this.tableCustomer_Service != null)) {
                    this.tableCustomer_Service.InitVars();
                }
            }
            this.tableTNC = ((TNCDataTable)(base.Tables["TNC"]));
            if ((initTable == true)) {
                if ((this.tableTNC != null)) {
                    this.tableTNC.InitVars();
                }
            }
            this.tableService_Toyo = ((Service_ToyoDataTable)(base.Tables["Service_Toyo"]));
            if ((initTable == true)) {
                if ((this.tableService_Toyo != null)) {
                    this.tableService_Toyo.InitVars();
                }
            }
            this.tableItemStockRegisterHozifa = ((ItemStockRegisterHozifaDataTable)(base.Tables["ItemStockRegisterHozifa"]));
            if ((initTable == true)) {
                if ((this.tableItemStockRegisterHozifa != null)) {
                    this.tableItemStockRegisterHozifa.InitVars();
                }
            }
            this.tablePurchaseInvoiceRegisterWithDetail = ((PurchaseInvoiceRegisterWithDetailDataTable)(base.Tables["PurchaseInvoiceRegisterWithDetail"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseInvoiceRegisterWithDetail != null)) {
                    this.tablePurchaseInvoiceRegisterWithDetail.InitVars();
                }
            }
            this.tableSalesRegisterHozifa = ((SalesRegisterHozifaDataTable)(base.Tables["SalesRegisterHozifa"]));
            if ((initTable == true)) {
                if ((this.tableSalesRegisterHozifa != null)) {
                    this.tableSalesRegisterHozifa.InitVars();
                }
            }
            this.tablePaymentReceipt = ((PaymentReceiptDataTable)(base.Tables["PaymentReceipt"]));
            if ((initTable == true)) {
                if ((this.tablePaymentReceipt != null)) {
                    this.tablePaymentReceipt.InitVars();
                }
            }
            this.tableServiceOrder = ((ServiceOrderDataTable)(base.Tables["ServiceOrder"]));
            if ((initTable == true)) {
                if ((this.tableServiceOrder != null)) {
                    this.tableServiceOrder.InitVars();
                }
            }
            this.tableServiceInvoiceOld = ((ServiceInvoiceOldDataTable)(base.Tables["ServiceInvoiceOld"]));
            if ((initTable == true)) {
                if ((this.tableServiceInvoiceOld != null)) {
                    this.tableServiceInvoiceOld.InitVars();
                }
            }
            this.tableItemSales = ((ItemSalesDataTable)(base.Tables["ItemSales"]));
            if ((initTable == true)) {
                if ((this.tableItemSales != null)) {
                    this.tableItemSales.InitVars();
                }
            }
            this.tableLogo = ((LogoDataTable)(base.Tables["Logo"]));
            if ((initTable == true)) {
                if ((this.tableLogo != null)) {
                    this.tableLogo.InitVars();
                }
            }
            this.tableChallanCumTaxInvoice = ((ChallanCumTaxInvoiceDataTable)(base.Tables["ChallanCumTaxInvoice"]));
            if ((initTable == true)) {
                if ((this.tableChallanCumTaxInvoice != null)) {
                    this.tableChallanCumTaxInvoice.InitVars();
                }
            }
            this.tablePaymentRegister1 = ((PaymentRegister1DataTable)(base.Tables["PaymentRegister1"]));
            if ((initTable == true)) {
                if ((this.tablePaymentRegister1 != null)) {
                    this.tablePaymentRegister1.InitVars();
                }
            }
            this.tableItemRegister = ((ItemRegisterDataTable)(base.Tables["ItemRegister"]));
            if ((initTable == true)) {
                if ((this.tableItemRegister != null)) {
                    this.tableItemRegister.InitVars();
                }
            }
            this.tablePORegister = ((PORegisterDataTable)(base.Tables["PORegister"]));
            if ((initTable == true)) {
                if ((this.tablePORegister != null)) {
                    this.tablePORegister.InitVars();
                }
            }
            this.tableOrderBooking = ((OrderBookingDataTable)(base.Tables["OrderBooking"]));
            if ((initTable == true)) {
                if ((this.tableOrderBooking != null)) {
                    this.tableOrderBooking.InitVars();
                }
            }
            this.tableItemPic = ((ItemPicDataTable)(base.Tables["ItemPic"]));
            if ((initTable == true)) {
                if ((this.tableItemPic != null)) {
                    this.tableItemPic.InitVars();
                }
            }
            this.tableLedger_Report = ((Ledger_ReportDataTable)(base.Tables["Ledger_Report"]));
            if ((initTable == true)) {
                if ((this.tableLedger_Report != null)) {
                    this.tableLedger_Report.InitVars();
                }
            }
            this.tableDebitNote = ((DebitNoteDataTable)(base.Tables["DebitNote"]));
            if ((initTable == true)) {
                if ((this.tableDebitNote != null)) {
                    this.tableDebitNote.InitVars();
                }
            }
            this.tableCreditNote = ((CreditNoteDataTable)(base.Tables["CreditNote"]));
            if ((initTable == true)) {
                if ((this.tableCreditNote != null)) {
                    this.tableCreditNote.InitVars();
                }
            }
            this.tableServiceInvoice = ((ServiceInvoiceDataTable)(base.Tables["ServiceInvoice"]));
            if ((initTable == true)) {
                if ((this.tableServiceInvoice != null)) {
                    this.tableServiceInvoice.InitVars();
                }
            }
            this.tableProfitnLossStatement = ((ProfitnLossStatementDataTable)(base.Tables["ProfitnLossStatement"]));
            if ((initTable == true)) {
                if ((this.tableProfitnLossStatement != null)) {
                    this.tableProfitnLossStatement.InitVars();
                }
            }
            this.tablePaymentReturnRegister = ((PaymentReturnRegisterDataTable)(base.Tables["PaymentReturnRegister"]));
            if ((initTable == true)) {
                if ((this.tablePaymentReturnRegister != null)) {
                    this.tablePaymentReturnRegister.InitVars();
                }
            }
            this.tableCustomerPaymentReturnRegister = ((CustomerPaymentReturnRegisterDataTable)(base.Tables["CustomerPaymentReturnRegister"]));
            if ((initTable == true)) {
                if ((this.tableCustomerPaymentReturnRegister != null)) {
                    this.tableCustomerPaymentReturnRegister.InitVars();
                }
            }
            this.tablePaymentReturnReceipt = ((PaymentReturnReceiptDataTable)(base.Tables["PaymentReturnReceipt"]));
            if ((initTable == true)) {
                if ((this.tablePaymentReturnReceipt != null)) {
                    this.tablePaymentReturnReceipt.InitVars();
                }
            }
            this.tablePaymentRegister = ((PaymentRegisterDataTable)(base.Tables["PaymentRegister"]));
            if ((initTable == true)) {
                if ((this.tablePaymentRegister != null)) {
                    this.tablePaymentRegister.InitVars();
                }
            }
            this.tableMatrialissueREG = ((MatrialissueREGDataTable)(base.Tables["MatrialissueREG"]));
            if ((initTable == true)) {
                if ((this.tableMatrialissueREG != null)) {
                    this.tableMatrialissueREG.InitVars();
                }
            }
            this.tableMatrialissue = ((MatrialissueDataTable)(base.Tables["Matrialissue"]));
            if ((initTable == true)) {
                if ((this.tableMatrialissue != null)) {
                    this.tableMatrialissue.InitVars();
                }
            }
            this.tableMatrialReturnREG = ((MatrialReturnREGDataTable)(base.Tables["MatrialReturnREG"]));
            if ((initTable == true)) {
                if ((this.tableMatrialReturnREG != null)) {
                    this.tableMatrialReturnREG.InitVars();
                }
            }
            this.tableItemAdjustmentRegister = ((ItemAdjustmentRegisterDataTable)(base.Tables["ItemAdjustmentRegister"]));
            if ((initTable == true)) {
                if ((this.tableItemAdjustmentRegister != null)) {
                    this.tableItemAdjustmentRegister.InitVars();
                }
            }
            this.tablePurchaseINdentReg = ((PurchaseINdentRegDataTable)(base.Tables["PurchaseINdentReg"]));
            if ((initTable == true)) {
                if ((this.tablePurchaseINdentReg != null)) {
                    this.tablePurchaseINdentReg.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "JPCRM";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/JPCRM.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSiteInfoRegister = new SiteInfoRegisterDataTable();
            base.Tables.Add(this.tableSiteInfoRegister);
            this.tableBuildingInfoRegister = new BuildingInfoRegisterDataTable();
            base.Tables.Add(this.tableBuildingInfoRegister);
            this.tableBlockInfoRegister = new BlockInfoRegisterDataTable();
            base.Tables.Add(this.tableBlockInfoRegister);
            this.tableBankDetailRegister = new BankDetailRegisterDataTable();
            base.Tables.Add(this.tableBankDetailRegister);
            this.tableAllotmentReport = new AllotmentReportDataTable();
            base.Tables.Add(this.tableAllotmentReport);
            this.tableDemandLetter = new DemandLetterDataTable();
            base.Tables.Add(this.tableDemandLetter);
            this.tableCustomerReceipt = new CustomerReceiptDataTable();
            base.Tables.Add(this.tableCustomerReceipt);
            this.tableLeadRegister = new LeadRegisterDataTable();
            base.Tables.Add(this.tableLeadRegister);
            this.tableHRDetailList = new HRDetailListDataTable();
            base.Tables.Add(this.tableHRDetailList);
            this.tableDailyConsumption = new DailyConsumptionDataTable();
            base.Tables.Add(this.tableDailyConsumption);
            this.tableCustomerPaymentRegister = new CustomerPaymentRegisterDataTable();
            base.Tables.Add(this.tableCustomerPaymentRegister);
            this.tableCustomerRegister = new CustomerRegisterDataTable();
            base.Tables.Add(this.tableCustomerRegister);
            this.tableSalesVoucher = new SalesVoucherDataTable();
            base.Tables.Add(this.tableSalesVoucher);
            this.tableServiceModuleRegister = new ServiceModuleRegisterDataTable();
            base.Tables.Add(this.tableServiceModuleRegister);
            this.tableCarTypeWiseRegister = new CarTypeWiseRegisterDataTable();
            base.Tables.Add(this.tableCarTypeWiseRegister);
            this.tableSalesInvoice = new SalesInvoiceDataTable();
            base.Tables.Add(this.tableSalesInvoice);
            this.tablePurchaseOrder = new PurchaseOrderDataTable();
            base.Tables.Add(this.tablePurchaseOrder);
            this.tablesales = new salesDataTable();
            base.Tables.Add(this.tablesales);
            this.tableSalesInvoicev = new SalesInvoicevDataTable();
            base.Tables.Add(this.tableSalesInvoicev);
            this.tableSalesInvoicevidhi = new SalesInvoicevidhiDataTable();
            base.Tables.Add(this.tableSalesInvoicevidhi);
            this.tableSalesInvoicevi = new SalesInvoiceviDataTable();
            base.Tables.Add(this.tableSalesInvoicevi);
            this.tableDriveDutyVoucher = new DriveDutyVoucherDataTable();
            base.Tables.Add(this.tableDriveDutyVoucher);
            this.tableQuotation = new QuotationDataTable();
            base.Tables.Add(this.tableQuotation);
            this.tableAverage = new AverageDataTable();
            base.Tables.Add(this.tableAverage);
            this.tableDepartmentRegister = new DepartmentRegisterDataTable();
            base.Tables.Add(this.tableDepartmentRegister);
            this.tableContractTypeRegister = new ContractTypeRegisterDataTable();
            base.Tables.Add(this.tableContractTypeRegister);
            this.tableCallTypeRegister = new CallTypeRegisterDataTable();
            base.Tables.Add(this.tableCallTypeRegister);
            this.tableZoneRegister = new ZoneRegisterDataTable();
            base.Tables.Add(this.tableZoneRegister);
            this.tableProductRegister = new ProductRegisterDataTable();
            base.Tables.Add(this.tableProductRegister);
            this.tableGodownRegister = new GodownRegisterDataTable();
            base.Tables.Add(this.tableGodownRegister);
            this.tableBookingRegister = new BookingRegisterDataTable();
            base.Tables.Add(this.tableBookingRegister);
            this.tableBookingReg = new BookingRegDataTable();
            base.Tables.Add(this.tableBookingReg);
            this.tableVendorReg = new VendorRegDataTable();
            base.Tables.Add(this.tableVendorReg);
            this.tableCustomerReg = new CustomerRegDataTable();
            base.Tables.Add(this.tableCustomerReg);
            this.tableCustomerPendingReg = new CustomerPendingRegDataTable();
            base.Tables.Add(this.tableCustomerPendingReg);
            this.tableVendorPendingReg = new VendorPendingRegDataTable();
            base.Tables.Add(this.tableVendorPendingReg);
            this.tableServiceRegister = new ServiceRegisterDataTable();
            base.Tables.Add(this.tableServiceRegister);
            this.tableService_Item_List = new Service_Item_ListDataTable();
            base.Tables.Add(this.tableService_Item_List);
            this.tableInvoiceAll = new InvoiceAllDataTable();
            base.Tables.Add(this.tableInvoiceAll);
            this.tableInvoicePage = new InvoicePageDataTable();
            base.Tables.Add(this.tableInvoicePage);
            this.tableSalesInvoice_New = new SalesInvoice_NewDataTable();
            base.Tables.Add(this.tableSalesInvoice_New);
            this.tableSalesInvoice_Page = new SalesInvoice_PageDataTable();
            base.Tables.Add(this.tableSalesInvoice_Page);
            this.tableInvoice_New = new Invoice_NewDataTable();
            base.Tables.Add(this.tableInvoice_New);
            this.tableInvoice_New_Item = new Invoice_New_ItemDataTable();
            base.Tables.Add(this.tableInvoice_New_Item);
            this.tableCompanyInfo = new CompanyInfoDataTable();
            base.Tables.Add(this.tableCompanyInfo);
            this.tableCustomer_Service = new Customer_ServiceDataTable();
            base.Tables.Add(this.tableCustomer_Service);
            this.tableTNC = new TNCDataTable();
            base.Tables.Add(this.tableTNC);
            this.tableService_Toyo = new Service_ToyoDataTable();
            base.Tables.Add(this.tableService_Toyo);
            this.tableItemStockRegisterHozifa = new ItemStockRegisterHozifaDataTable();
            base.Tables.Add(this.tableItemStockRegisterHozifa);
            this.tablePurchaseInvoiceRegisterWithDetail = new PurchaseInvoiceRegisterWithDetailDataTable();
            base.Tables.Add(this.tablePurchaseInvoiceRegisterWithDetail);
            this.tableSalesRegisterHozifa = new SalesRegisterHozifaDataTable();
            base.Tables.Add(this.tableSalesRegisterHozifa);
            this.tablePaymentReceipt = new PaymentReceiptDataTable();
            base.Tables.Add(this.tablePaymentReceipt);
            this.tableServiceOrder = new ServiceOrderDataTable();
            base.Tables.Add(this.tableServiceOrder);
            this.tableServiceInvoiceOld = new ServiceInvoiceOldDataTable();
            base.Tables.Add(this.tableServiceInvoiceOld);
            this.tableItemSales = new ItemSalesDataTable();
            base.Tables.Add(this.tableItemSales);
            this.tableLogo = new LogoDataTable();
            base.Tables.Add(this.tableLogo);
            this.tableChallanCumTaxInvoice = new ChallanCumTaxInvoiceDataTable();
            base.Tables.Add(this.tableChallanCumTaxInvoice);
            this.tablePaymentRegister1 = new PaymentRegister1DataTable();
            base.Tables.Add(this.tablePaymentRegister1);
            this.tableItemRegister = new ItemRegisterDataTable();
            base.Tables.Add(this.tableItemRegister);
            this.tablePORegister = new PORegisterDataTable();
            base.Tables.Add(this.tablePORegister);
            this.tableOrderBooking = new OrderBookingDataTable();
            base.Tables.Add(this.tableOrderBooking);
            this.tableItemPic = new ItemPicDataTable();
            base.Tables.Add(this.tableItemPic);
            this.tableLedger_Report = new Ledger_ReportDataTable();
            base.Tables.Add(this.tableLedger_Report);
            this.tableDebitNote = new DebitNoteDataTable();
            base.Tables.Add(this.tableDebitNote);
            this.tableCreditNote = new CreditNoteDataTable();
            base.Tables.Add(this.tableCreditNote);
            this.tableServiceInvoice = new ServiceInvoiceDataTable();
            base.Tables.Add(this.tableServiceInvoice);
            this.tableProfitnLossStatement = new ProfitnLossStatementDataTable();
            base.Tables.Add(this.tableProfitnLossStatement);
            this.tablePaymentReturnRegister = new PaymentReturnRegisterDataTable();
            base.Tables.Add(this.tablePaymentReturnRegister);
            this.tableCustomerPaymentReturnRegister = new CustomerPaymentReturnRegisterDataTable();
            base.Tables.Add(this.tableCustomerPaymentReturnRegister);
            this.tablePaymentReturnReceipt = new PaymentReturnReceiptDataTable();
            base.Tables.Add(this.tablePaymentReturnReceipt);
            this.tablePaymentRegister = new PaymentRegisterDataTable();
            base.Tables.Add(this.tablePaymentRegister);
            this.tableMatrialissueREG = new MatrialissueREGDataTable();
            base.Tables.Add(this.tableMatrialissueREG);
            this.tableMatrialissue = new MatrialissueDataTable();
            base.Tables.Add(this.tableMatrialissue);
            this.tableMatrialReturnREG = new MatrialReturnREGDataTable();
            base.Tables.Add(this.tableMatrialReturnREG);
            this.tableItemAdjustmentRegister = new ItemAdjustmentRegisterDataTable();
            base.Tables.Add(this.tableItemAdjustmentRegister);
            this.tablePurchaseINdentReg = new PurchaseINdentRegDataTable();
            base.Tables.Add(this.tablePurchaseINdentReg);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSiteInfoRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBuildingInfoRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBlockInfoRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBankDetailRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAllotmentReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDemandLetter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerReceipt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLeadRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHRDetailList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDailyConsumption() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerPaymentRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesVoucher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeServiceModuleRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCarTypeWiseRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseOrder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesales() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesInvoicev() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesInvoicevidhi() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesInvoicevi() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDriveDutyVoucher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeQuotation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAverage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDepartmentRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContractTypeRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCallTypeRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeZoneRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGodownRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBookingRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBookingReg() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVendorReg() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerReg() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerPendingReg() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVendorPendingReg() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeServiceRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeService_Item_List() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInvoiceAll() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInvoicePage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesInvoice_New() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesInvoice_Page() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInvoice_New() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInvoice_New_Item() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCompanyInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomer_Service() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTNC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeService_Toyo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemStockRegisterHozifa() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseInvoiceRegisterWithDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSalesRegisterHozifa() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePaymentReceipt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeServiceOrder() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeServiceInvoiceOld() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemSales() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLogo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeChallanCumTaxInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePaymentRegister1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePORegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOrderBooking() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemPic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLedger_Report() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDebitNote() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCreditNote() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeServiceInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProfitnLossStatement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePaymentReturnRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCustomerPaymentReturnRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePaymentReturnReceipt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePaymentRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMatrialissueREG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMatrialissue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMatrialReturnREG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeItemAdjustmentRegister() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchaseINdentReg() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            JPCRM ds = new JPCRM();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void SiteInfoRegisterRowChangeEventHandler(object sender, SiteInfoRegisterRowChangeEvent e);
        
        public delegate void BuildingInfoRegisterRowChangeEventHandler(object sender, BuildingInfoRegisterRowChangeEvent e);
        
        public delegate void BlockInfoRegisterRowChangeEventHandler(object sender, BlockInfoRegisterRowChangeEvent e);
        
        public delegate void BankDetailRegisterRowChangeEventHandler(object sender, BankDetailRegisterRowChangeEvent e);
        
        public delegate void AllotmentReportRowChangeEventHandler(object sender, AllotmentReportRowChangeEvent e);
        
        public delegate void DemandLetterRowChangeEventHandler(object sender, DemandLetterRowChangeEvent e);
        
        public delegate void CustomerReceiptRowChangeEventHandler(object sender, CustomerReceiptRowChangeEvent e);
        
        public delegate void LeadRegisterRowChangeEventHandler(object sender, LeadRegisterRowChangeEvent e);
        
        public delegate void HRDetailListRowChangeEventHandler(object sender, HRDetailListRowChangeEvent e);
        
        public delegate void DailyConsumptionRowChangeEventHandler(object sender, DailyConsumptionRowChangeEvent e);
        
        public delegate void CustomerPaymentRegisterRowChangeEventHandler(object sender, CustomerPaymentRegisterRowChangeEvent e);
        
        public delegate void CustomerRegisterRowChangeEventHandler(object sender, CustomerRegisterRowChangeEvent e);
        
        public delegate void SalesVoucherRowChangeEventHandler(object sender, SalesVoucherRowChangeEvent e);
        
        public delegate void ServiceModuleRegisterRowChangeEventHandler(object sender, ServiceModuleRegisterRowChangeEvent e);
        
        public delegate void CarTypeWiseRegisterRowChangeEventHandler(object sender, CarTypeWiseRegisterRowChangeEvent e);
        
        public delegate void SalesInvoiceRowChangeEventHandler(object sender, SalesInvoiceRowChangeEvent e);
        
        public delegate void PurchaseOrderRowChangeEventHandler(object sender, PurchaseOrderRowChangeEvent e);
        
        public delegate void salesRowChangeEventHandler(object sender, salesRowChangeEvent e);
        
        public delegate void SalesInvoicevRowChangeEventHandler(object sender, SalesInvoicevRowChangeEvent e);
        
        public delegate void SalesInvoicevidhiRowChangeEventHandler(object sender, SalesInvoicevidhiRowChangeEvent e);
        
        public delegate void SalesInvoiceviRowChangeEventHandler(object sender, SalesInvoiceviRowChangeEvent e);
        
        public delegate void DriveDutyVoucherRowChangeEventHandler(object sender, DriveDutyVoucherRowChangeEvent e);
        
        public delegate void QuotationRowChangeEventHandler(object sender, QuotationRowChangeEvent e);
        
        public delegate void AverageRowChangeEventHandler(object sender, AverageRowChangeEvent e);
        
        public delegate void DepartmentRegisterRowChangeEventHandler(object sender, DepartmentRegisterRowChangeEvent e);
        
        public delegate void ContractTypeRegisterRowChangeEventHandler(object sender, ContractTypeRegisterRowChangeEvent e);
        
        public delegate void CallTypeRegisterRowChangeEventHandler(object sender, CallTypeRegisterRowChangeEvent e);
        
        public delegate void ZoneRegisterRowChangeEventHandler(object sender, ZoneRegisterRowChangeEvent e);
        
        public delegate void ProductRegisterRowChangeEventHandler(object sender, ProductRegisterRowChangeEvent e);
        
        public delegate void GodownRegisterRowChangeEventHandler(object sender, GodownRegisterRowChangeEvent e);
        
        public delegate void BookingRegisterRowChangeEventHandler(object sender, BookingRegisterRowChangeEvent e);
        
        public delegate void BookingRegRowChangeEventHandler(object sender, BookingRegRowChangeEvent e);
        
        public delegate void VendorRegRowChangeEventHandler(object sender, VendorRegRowChangeEvent e);
        
        public delegate void CustomerRegRowChangeEventHandler(object sender, CustomerRegRowChangeEvent e);
        
        public delegate void CustomerPendingRegRowChangeEventHandler(object sender, CustomerPendingRegRowChangeEvent e);
        
        public delegate void VendorPendingRegRowChangeEventHandler(object sender, VendorPendingRegRowChangeEvent e);
        
        public delegate void ServiceRegisterRowChangeEventHandler(object sender, ServiceRegisterRowChangeEvent e);
        
        public delegate void Service_Item_ListRowChangeEventHandler(object sender, Service_Item_ListRowChangeEvent e);
        
        public delegate void InvoiceAllRowChangeEventHandler(object sender, InvoiceAllRowChangeEvent e);
        
        public delegate void InvoicePageRowChangeEventHandler(object sender, InvoicePageRowChangeEvent e);
        
        public delegate void SalesInvoice_NewRowChangeEventHandler(object sender, SalesInvoice_NewRowChangeEvent e);
        
        public delegate void SalesInvoice_PageRowChangeEventHandler(object sender, SalesInvoice_PageRowChangeEvent e);
        
        public delegate void Invoice_NewRowChangeEventHandler(object sender, Invoice_NewRowChangeEvent e);
        
        public delegate void Invoice_New_ItemRowChangeEventHandler(object sender, Invoice_New_ItemRowChangeEvent e);
        
        public delegate void CompanyInfoRowChangeEventHandler(object sender, CompanyInfoRowChangeEvent e);
        
        public delegate void Customer_ServiceRowChangeEventHandler(object sender, Customer_ServiceRowChangeEvent e);
        
        public delegate void TNCRowChangeEventHandler(object sender, TNCRowChangeEvent e);
        
        public delegate void Service_ToyoRowChangeEventHandler(object sender, Service_ToyoRowChangeEvent e);
        
        public delegate void ItemStockRegisterHozifaRowChangeEventHandler(object sender, ItemStockRegisterHozifaRowChangeEvent e);
        
        public delegate void PurchaseInvoiceRegisterWithDetailRowChangeEventHandler(object sender, PurchaseInvoiceRegisterWithDetailRowChangeEvent e);
        
        public delegate void SalesRegisterHozifaRowChangeEventHandler(object sender, SalesRegisterHozifaRowChangeEvent e);
        
        public delegate void PaymentReceiptRowChangeEventHandler(object sender, PaymentReceiptRowChangeEvent e);
        
        public delegate void ServiceOrderRowChangeEventHandler(object sender, ServiceOrderRowChangeEvent e);
        
        public delegate void ServiceInvoiceOldRowChangeEventHandler(object sender, ServiceInvoiceOldRowChangeEvent e);
        
        public delegate void ItemSalesRowChangeEventHandler(object sender, ItemSalesRowChangeEvent e);
        
        public delegate void LogoRowChangeEventHandler(object sender, LogoRowChangeEvent e);
        
        public delegate void ChallanCumTaxInvoiceRowChangeEventHandler(object sender, ChallanCumTaxInvoiceRowChangeEvent e);
        
        public delegate void PaymentRegister1RowChangeEventHandler(object sender, PaymentRegister1RowChangeEvent e);
        
        public delegate void ItemRegisterRowChangeEventHandler(object sender, ItemRegisterRowChangeEvent e);
        
        public delegate void PORegisterRowChangeEventHandler(object sender, PORegisterRowChangeEvent e);
        
        public delegate void OrderBookingRowChangeEventHandler(object sender, OrderBookingRowChangeEvent e);
        
        public delegate void ItemPicRowChangeEventHandler(object sender, ItemPicRowChangeEvent e);
        
        public delegate void Ledger_ReportRowChangeEventHandler(object sender, Ledger_ReportRowChangeEvent e);
        
        public delegate void DebitNoteRowChangeEventHandler(object sender, DebitNoteRowChangeEvent e);
        
        public delegate void CreditNoteRowChangeEventHandler(object sender, CreditNoteRowChangeEvent e);
        
        public delegate void ServiceInvoiceRowChangeEventHandler(object sender, ServiceInvoiceRowChangeEvent e);
        
        public delegate void ProfitnLossStatementRowChangeEventHandler(object sender, ProfitnLossStatementRowChangeEvent e);
        
        public delegate void PaymentReturnRegisterRowChangeEventHandler(object sender, PaymentReturnRegisterRowChangeEvent e);
        
        public delegate void CustomerPaymentReturnRegisterRowChangeEventHandler(object sender, CustomerPaymentReturnRegisterRowChangeEvent e);
        
        public delegate void PaymentReturnReceiptRowChangeEventHandler(object sender, PaymentReturnReceiptRowChangeEvent e);
        
        public delegate void PaymentRegisterRowChangeEventHandler(object sender, PaymentRegisterRowChangeEvent e);
        
        public delegate void MatrialissueREGRowChangeEventHandler(object sender, MatrialissueREGRowChangeEvent e);
        
        public delegate void MatrialissueRowChangeEventHandler(object sender, MatrialissueRowChangeEvent e);
        
        public delegate void MatrialReturnREGRowChangeEventHandler(object sender, MatrialReturnREGRowChangeEvent e);
        
        public delegate void ItemAdjustmentRegisterRowChangeEventHandler(object sender, ItemAdjustmentRegisterRowChangeEvent e);
        
        public delegate void PurchaseINdentRegRowChangeEventHandler(object sender, PurchaseINdentRegRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SiteInfoRegisterDataTable : global::System.Data.TypedTableBase<SiteInfoRegisterRow> {
            
            private global::System.Data.DataColumn columnSiteId;
            
            private global::System.Data.DataColumn columnSiteName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCityId;
            
            private global::System.Data.DataColumn columnCityName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiteInfoRegisterDataTable() {
                this.TableName = "SiteInfoRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SiteInfoRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SiteInfoRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteNameColumn {
                get {
                    return this.columnSiteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityIdColumn {
                get {
                    return this.columnCityId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiteInfoRegisterRow this[int index] {
                get {
                    return ((SiteInfoRegisterRow)(this.Rows[index]));
                }
            }
            
            public event SiteInfoRegisterRowChangeEventHandler SiteInfoRegisterRowChanging;
            
            public event SiteInfoRegisterRowChangeEventHandler SiteInfoRegisterRowChanged;
            
            public event SiteInfoRegisterRowChangeEventHandler SiteInfoRegisterRowDeleting;
            
            public event SiteInfoRegisterRowChangeEventHandler SiteInfoRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSiteInfoRegisterRow(SiteInfoRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiteInfoRegisterRow AddSiteInfoRegisterRow(long SiteId, string SiteName, string Address, long CityId, string CityName) {
                SiteInfoRegisterRow rowSiteInfoRegisterRow = ((SiteInfoRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SiteId,
                        SiteName,
                        Address,
                        CityId,
                        CityName};
                rowSiteInfoRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSiteInfoRegisterRow);
                return rowSiteInfoRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SiteInfoRegisterDataTable cln = ((SiteInfoRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SiteInfoRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSiteId = base.Columns["SiteId"];
                this.columnSiteName = base.Columns["SiteName"];
                this.columnAddress = base.Columns["Address"];
                this.columnCityId = base.Columns["CityId"];
                this.columnCityName = base.Columns["CityName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSiteId = new global::System.Data.DataColumn("SiteId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteId);
                this.columnSiteName = new global::System.Data.DataColumn("SiteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCityId = new global::System.Data.DataColumn("CityId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityId);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiteInfoRegisterRow NewSiteInfoRegisterRow() {
                return ((SiteInfoRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SiteInfoRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SiteInfoRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SiteInfoRegisterRowChanged != null)) {
                    this.SiteInfoRegisterRowChanged(this, new SiteInfoRegisterRowChangeEvent(((SiteInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SiteInfoRegisterRowChanging != null)) {
                    this.SiteInfoRegisterRowChanging(this, new SiteInfoRegisterRowChangeEvent(((SiteInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SiteInfoRegisterRowDeleted != null)) {
                    this.SiteInfoRegisterRowDeleted(this, new SiteInfoRegisterRowChangeEvent(((SiteInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SiteInfoRegisterRowDeleting != null)) {
                    this.SiteInfoRegisterRowDeleting(this, new SiteInfoRegisterRowChangeEvent(((SiteInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSiteInfoRegisterRow(SiteInfoRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SiteInfoRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BuildingInfoRegisterDataTable : global::System.Data.TypedTableBase<BuildingInfoRegisterRow> {
            
            private global::System.Data.DataColumn columnBuildingId;
            
            private global::System.Data.DataColumn columnSiteId;
            
            private global::System.Data.DataColumn columnBuildingName;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnSiteName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BuildingInfoRegisterDataTable() {
                this.TableName = "BuildingInfoRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BuildingInfoRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BuildingInfoRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.columnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteIdColumn {
                get {
                    return this.columnSiteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingNameColumn {
                get {
                    return this.columnBuildingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteNameColumn {
                get {
                    return this.columnSiteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BuildingInfoRegisterRow this[int index] {
                get {
                    return ((BuildingInfoRegisterRow)(this.Rows[index]));
                }
            }
            
            public event BuildingInfoRegisterRowChangeEventHandler BuildingInfoRegisterRowChanging;
            
            public event BuildingInfoRegisterRowChangeEventHandler BuildingInfoRegisterRowChanged;
            
            public event BuildingInfoRegisterRowChangeEventHandler BuildingInfoRegisterRowDeleting;
            
            public event BuildingInfoRegisterRowChangeEventHandler BuildingInfoRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBuildingInfoRegisterRow(BuildingInfoRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BuildingInfoRegisterRow AddBuildingInfoRegisterRow(long BuildingId, long SiteId, string BuildingName, string Remark, string SiteName) {
                BuildingInfoRegisterRow rowBuildingInfoRegisterRow = ((BuildingInfoRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BuildingId,
                        SiteId,
                        BuildingName,
                        Remark,
                        SiteName};
                rowBuildingInfoRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBuildingInfoRegisterRow);
                return rowBuildingInfoRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BuildingInfoRegisterDataTable cln = ((BuildingInfoRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BuildingInfoRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBuildingId = base.Columns["BuildingId"];
                this.columnSiteId = base.Columns["SiteId"];
                this.columnBuildingName = base.Columns["BuildingName"];
                this.columnRemark = base.Columns["Remark"];
                this.columnSiteName = base.Columns["SiteName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingId);
                this.columnSiteId = new global::System.Data.DataColumn("SiteId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteId);
                this.columnBuildingName = new global::System.Data.DataColumn("BuildingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingName);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnSiteName = new global::System.Data.DataColumn("SiteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BuildingInfoRegisterRow NewBuildingInfoRegisterRow() {
                return ((BuildingInfoRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BuildingInfoRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BuildingInfoRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BuildingInfoRegisterRowChanged != null)) {
                    this.BuildingInfoRegisterRowChanged(this, new BuildingInfoRegisterRowChangeEvent(((BuildingInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BuildingInfoRegisterRowChanging != null)) {
                    this.BuildingInfoRegisterRowChanging(this, new BuildingInfoRegisterRowChangeEvent(((BuildingInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BuildingInfoRegisterRowDeleted != null)) {
                    this.BuildingInfoRegisterRowDeleted(this, new BuildingInfoRegisterRowChangeEvent(((BuildingInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BuildingInfoRegisterRowDeleting != null)) {
                    this.BuildingInfoRegisterRowDeleting(this, new BuildingInfoRegisterRowChangeEvent(((BuildingInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBuildingInfoRegisterRow(BuildingInfoRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BuildingInfoRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BlockInfoRegisterDataTable : global::System.Data.TypedTableBase<BlockInfoRegisterRow> {
            
            private global::System.Data.DataColumn columnBlockId;
            
            private global::System.Data.DataColumn columnBuildingId;
            
            private global::System.Data.DataColumn columnBlockName;
            
            private global::System.Data.DataColumn columnRemark;
            
            private global::System.Data.DataColumn columnIsBooked;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnBuildingName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BlockInfoRegisterDataTable() {
                this.TableName = "BlockInfoRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BlockInfoRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BlockInfoRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockIdColumn {
                get {
                    return this.columnBlockId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingIdColumn {
                get {
                    return this.columnBuildingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockNameColumn {
                get {
                    return this.columnBlockName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarkColumn {
                get {
                    return this.columnRemark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsBookedColumn {
                get {
                    return this.columnIsBooked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingNameColumn {
                get {
                    return this.columnBuildingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BlockInfoRegisterRow this[int index] {
                get {
                    return ((BlockInfoRegisterRow)(this.Rows[index]));
                }
            }
            
            public event BlockInfoRegisterRowChangeEventHandler BlockInfoRegisterRowChanging;
            
            public event BlockInfoRegisterRowChangeEventHandler BlockInfoRegisterRowChanged;
            
            public event BlockInfoRegisterRowChangeEventHandler BlockInfoRegisterRowDeleting;
            
            public event BlockInfoRegisterRowChangeEventHandler BlockInfoRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBlockInfoRegisterRow(BlockInfoRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BlockInfoRegisterRow AddBlockInfoRegisterRow(long BlockId, long BuildingId, string BlockName, string Remark, bool IsBooked, string CustomerName, string BuildingName) {
                BlockInfoRegisterRow rowBlockInfoRegisterRow = ((BlockInfoRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BlockId,
                        BuildingId,
                        BlockName,
                        Remark,
                        IsBooked,
                        CustomerName,
                        BuildingName};
                rowBlockInfoRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBlockInfoRegisterRow);
                return rowBlockInfoRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BlockInfoRegisterDataTable cln = ((BlockInfoRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BlockInfoRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBlockId = base.Columns["BlockId"];
                this.columnBuildingId = base.Columns["BuildingId"];
                this.columnBlockName = base.Columns["BlockName"];
                this.columnRemark = base.Columns["Remark"];
                this.columnIsBooked = base.Columns["IsBooked"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnBuildingName = base.Columns["BuildingName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBlockId = new global::System.Data.DataColumn("BlockId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockId);
                this.columnBuildingId = new global::System.Data.DataColumn("BuildingId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingId);
                this.columnBlockName = new global::System.Data.DataColumn("BlockName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockName);
                this.columnRemark = new global::System.Data.DataColumn("Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemark);
                this.columnIsBooked = new global::System.Data.DataColumn("IsBooked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBooked);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnBuildingName = new global::System.Data.DataColumn("BuildingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BlockInfoRegisterRow NewBlockInfoRegisterRow() {
                return ((BlockInfoRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BlockInfoRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BlockInfoRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BlockInfoRegisterRowChanged != null)) {
                    this.BlockInfoRegisterRowChanged(this, new BlockInfoRegisterRowChangeEvent(((BlockInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BlockInfoRegisterRowChanging != null)) {
                    this.BlockInfoRegisterRowChanging(this, new BlockInfoRegisterRowChangeEvent(((BlockInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BlockInfoRegisterRowDeleted != null)) {
                    this.BlockInfoRegisterRowDeleted(this, new BlockInfoRegisterRowChangeEvent(((BlockInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BlockInfoRegisterRowDeleting != null)) {
                    this.BlockInfoRegisterRowDeleting(this, new BlockInfoRegisterRowChangeEvent(((BlockInfoRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBlockInfoRegisterRow(BlockInfoRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BlockInfoRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BankDetailRegisterDataTable : global::System.Data.TypedTableBase<BankDetailRegisterRow> {
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnFolowUpDate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnChequeNo;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnBankDetID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BankDetailRegisterDataTable() {
                this.TableName = "BankDetailRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BankDetailRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BankDetailRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FolowUpDateColumn {
                get {
                    return this.columnFolowUpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeNoColumn {
                get {
                    return this.columnChequeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankDetIDColumn {
                get {
                    return this.columnBankDetID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BankDetailRegisterRow this[int index] {
                get {
                    return ((BankDetailRegisterRow)(this.Rows[index]));
                }
            }
            
            public event BankDetailRegisterRowChangeEventHandler BankDetailRegisterRowChanging;
            
            public event BankDetailRegisterRowChangeEventHandler BankDetailRegisterRowChanged;
            
            public event BankDetailRegisterRowChangeEventHandler BankDetailRegisterRowDeleting;
            
            public event BankDetailRegisterRowChangeEventHandler BankDetailRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBankDetailRegisterRow(BankDetailRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BankDetailRegisterRow AddBankDetailRegisterRow(string BankName, System.DateTime FolowUpDate, decimal Amount, string ChequeNo, string Remarks, string CustomerName, long BankDetID) {
                BankDetailRegisterRow rowBankDetailRegisterRow = ((BankDetailRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BankName,
                        FolowUpDate,
                        Amount,
                        ChequeNo,
                        Remarks,
                        CustomerName,
                        BankDetID};
                rowBankDetailRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBankDetailRegisterRow);
                return rowBankDetailRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BankDetailRegisterDataTable cln = ((BankDetailRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BankDetailRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBankName = base.Columns["BankName"];
                this.columnFolowUpDate = base.Columns["FolowUpDate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnChequeNo = base.Columns["ChequeNo"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnBankDetID = base.Columns["BankDetID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnFolowUpDate = new global::System.Data.DataColumn("FolowUpDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFolowUpDate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnChequeNo = new global::System.Data.DataColumn("ChequeNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeNo);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnBankDetID = new global::System.Data.DataColumn("BankDetID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankDetID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BankDetailRegisterRow NewBankDetailRegisterRow() {
                return ((BankDetailRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BankDetailRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BankDetailRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BankDetailRegisterRowChanged != null)) {
                    this.BankDetailRegisterRowChanged(this, new BankDetailRegisterRowChangeEvent(((BankDetailRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BankDetailRegisterRowChanging != null)) {
                    this.BankDetailRegisterRowChanging(this, new BankDetailRegisterRowChangeEvent(((BankDetailRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BankDetailRegisterRowDeleted != null)) {
                    this.BankDetailRegisterRowDeleted(this, new BankDetailRegisterRowChangeEvent(((BankDetailRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BankDetailRegisterRowDeleting != null)) {
                    this.BankDetailRegisterRowDeleting(this, new BankDetailRegisterRowChangeEvent(((BankDetailRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBankDetailRegisterRow(BankDetailRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BankDetailRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AllotmentReportDataTable : global::System.Data.TypedTableBase<AllotmentReportRow> {
            
            private global::System.Data.DataColumn columnLeadID;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnBlockName;
            
            private global::System.Data.DataColumn columnBuildingName;
            
            private global::System.Data.DataColumn columnSiteName;
            
            private global::System.Data.DataColumn columnSiteAddress;
            
            private global::System.Data.DataColumn columnSiteCity;
            
            private global::System.Data.DataColumn columnSalePrice;
            
            private global::System.Data.DataColumn columnAdvAmount;
            
            private global::System.Data.DataColumn columnSBA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllotmentReportDataTable() {
                this.TableName = "AllotmentReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AllotmentReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AllotmentReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadIDColumn {
                get {
                    return this.columnLeadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockNameColumn {
                get {
                    return this.columnBlockName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingNameColumn {
                get {
                    return this.columnBuildingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteNameColumn {
                get {
                    return this.columnSiteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteAddressColumn {
                get {
                    return this.columnSiteAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteCityColumn {
                get {
                    return this.columnSiteCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalePriceColumn {
                get {
                    return this.columnSalePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvAmountColumn {
                get {
                    return this.columnAdvAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SBAColumn {
                get {
                    return this.columnSBA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllotmentReportRow this[int index] {
                get {
                    return ((AllotmentReportRow)(this.Rows[index]));
                }
            }
            
            public event AllotmentReportRowChangeEventHandler AllotmentReportRowChanging;
            
            public event AllotmentReportRowChangeEventHandler AllotmentReportRowChanged;
            
            public event AllotmentReportRowChangeEventHandler AllotmentReportRowDeleting;
            
            public event AllotmentReportRowChangeEventHandler AllotmentReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAllotmentReportRow(AllotmentReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllotmentReportRow AddAllotmentReportRow(long LeadID, string CustomerName, string Address, string CityName, string BlockName, string BuildingName, string SiteName, string SiteAddress, string SiteCity, decimal SalePrice, decimal AdvAmount, decimal SBA) {
                AllotmentReportRow rowAllotmentReportRow = ((AllotmentReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LeadID,
                        CustomerName,
                        Address,
                        CityName,
                        BlockName,
                        BuildingName,
                        SiteName,
                        SiteAddress,
                        SiteCity,
                        SalePrice,
                        AdvAmount,
                        SBA};
                rowAllotmentReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAllotmentReportRow);
                return rowAllotmentReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AllotmentReportDataTable cln = ((AllotmentReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AllotmentReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLeadID = base.Columns["LeadID"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnCityName = base.Columns["CityName"];
                this.columnBlockName = base.Columns["BlockName"];
                this.columnBuildingName = base.Columns["BuildingName"];
                this.columnSiteName = base.Columns["SiteName"];
                this.columnSiteAddress = base.Columns["SiteAddress"];
                this.columnSiteCity = base.Columns["SiteCity"];
                this.columnSalePrice = base.Columns["SalePrice"];
                this.columnAdvAmount = base.Columns["AdvAmount"];
                this.columnSBA = base.Columns["SBA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLeadID = new global::System.Data.DataColumn("LeadID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadID);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnBlockName = new global::System.Data.DataColumn("BlockName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockName);
                this.columnBuildingName = new global::System.Data.DataColumn("BuildingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingName);
                this.columnSiteName = new global::System.Data.DataColumn("SiteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteName);
                this.columnSiteAddress = new global::System.Data.DataColumn("SiteAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteAddress);
                this.columnSiteCity = new global::System.Data.DataColumn("SiteCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteCity);
                this.columnSalePrice = new global::System.Data.DataColumn("SalePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalePrice);
                this.columnAdvAmount = new global::System.Data.DataColumn("AdvAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvAmount);
                this.columnSBA = new global::System.Data.DataColumn("SBA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBA);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllotmentReportRow NewAllotmentReportRow() {
                return ((AllotmentReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AllotmentReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AllotmentReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AllotmentReportRowChanged != null)) {
                    this.AllotmentReportRowChanged(this, new AllotmentReportRowChangeEvent(((AllotmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AllotmentReportRowChanging != null)) {
                    this.AllotmentReportRowChanging(this, new AllotmentReportRowChangeEvent(((AllotmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AllotmentReportRowDeleted != null)) {
                    this.AllotmentReportRowDeleted(this, new AllotmentReportRowChangeEvent(((AllotmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AllotmentReportRowDeleting != null)) {
                    this.AllotmentReportRowDeleting(this, new AllotmentReportRowChangeEvent(((AllotmentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAllotmentReportRow(AllotmentReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AllotmentReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DemandLetterDataTable : global::System.Data.TypedTableBase<DemandLetterRow> {
            
            private global::System.Data.DataColumn columnSaleId;
            
            private global::System.Data.DataColumn columnSiteAddress;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerAddress;
            
            private global::System.Data.DataColumn columnCustomerCityName;
            
            private global::System.Data.DataColumn columnSaleDate;
            
            private global::System.Data.DataColumn columnBlockName;
            
            private global::System.Data.DataColumn columnSalePrice;
            
            private global::System.Data.DataColumn columnAdvAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnNextDate;
            
            private global::System.Data.DataColumn columnPayment;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnReceivePayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DemandLetterDataTable() {
                this.TableName = "DemandLetter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DemandLetterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DemandLetterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIdColumn {
                get {
                    return this.columnSaleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteAddressColumn {
                get {
                    return this.columnSiteAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerAddressColumn {
                get {
                    return this.columnCustomerAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCityNameColumn {
                get {
                    return this.columnCustomerCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleDateColumn {
                get {
                    return this.columnSaleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockNameColumn {
                get {
                    return this.columnBlockName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalePriceColumn {
                get {
                    return this.columnSalePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvAmountColumn {
                get {
                    return this.columnAdvAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextDateColumn {
                get {
                    return this.columnNextDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentColumn {
                get {
                    return this.columnPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivePaymentColumn {
                get {
                    return this.columnReceivePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DemandLetterRow this[int index] {
                get {
                    return ((DemandLetterRow)(this.Rows[index]));
                }
            }
            
            public event DemandLetterRowChangeEventHandler DemandLetterRowChanging;
            
            public event DemandLetterRowChangeEventHandler DemandLetterRowChanged;
            
            public event DemandLetterRowChangeEventHandler DemandLetterRowDeleting;
            
            public event DemandLetterRowChangeEventHandler DemandLetterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDemandLetterRow(DemandLetterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DemandLetterRow AddDemandLetterRow(long SaleId, string SiteAddress, string CustomerName, string CustomerAddress, string CustomerCityName, System.DateTime SaleDate, string BlockName, decimal SalePrice, decimal AdvAmount, decimal PaidAmount, System.DateTime NextDate, decimal Payment, string Remarks, decimal ReceivePayment) {
                DemandLetterRow rowDemandLetterRow = ((DemandLetterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SaleId,
                        SiteAddress,
                        CustomerName,
                        CustomerAddress,
                        CustomerCityName,
                        SaleDate,
                        BlockName,
                        SalePrice,
                        AdvAmount,
                        PaidAmount,
                        NextDate,
                        Payment,
                        Remarks,
                        ReceivePayment};
                rowDemandLetterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDemandLetterRow);
                return rowDemandLetterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DemandLetterDataTable cln = ((DemandLetterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DemandLetterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSaleId = base.Columns["SaleId"];
                this.columnSiteAddress = base.Columns["SiteAddress"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerAddress = base.Columns["CustomerAddress"];
                this.columnCustomerCityName = base.Columns["CustomerCityName"];
                this.columnSaleDate = base.Columns["SaleDate"];
                this.columnBlockName = base.Columns["BlockName"];
                this.columnSalePrice = base.Columns["SalePrice"];
                this.columnAdvAmount = base.Columns["AdvAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnNextDate = base.Columns["NextDate"];
                this.columnPayment = base.Columns["Payment"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnReceivePayment = base.Columns["ReceivePayment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSaleId = new global::System.Data.DataColumn("SaleId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleId);
                this.columnSiteAddress = new global::System.Data.DataColumn("SiteAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteAddress);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerAddress = new global::System.Data.DataColumn("CustomerAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAddress);
                this.columnCustomerCityName = new global::System.Data.DataColumn("CustomerCityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCityName);
                this.columnSaleDate = new global::System.Data.DataColumn("SaleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleDate);
                this.columnBlockName = new global::System.Data.DataColumn("BlockName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockName);
                this.columnSalePrice = new global::System.Data.DataColumn("SalePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalePrice);
                this.columnAdvAmount = new global::System.Data.DataColumn("AdvAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnNextDate = new global::System.Data.DataColumn("NextDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextDate);
                this.columnPayment = new global::System.Data.DataColumn("Payment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnReceivePayment = new global::System.Data.DataColumn("ReceivePayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivePayment);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DemandLetterRow NewDemandLetterRow() {
                return ((DemandLetterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DemandLetterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DemandLetterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DemandLetterRowChanged != null)) {
                    this.DemandLetterRowChanged(this, new DemandLetterRowChangeEvent(((DemandLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DemandLetterRowChanging != null)) {
                    this.DemandLetterRowChanging(this, new DemandLetterRowChangeEvent(((DemandLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DemandLetterRowDeleted != null)) {
                    this.DemandLetterRowDeleted(this, new DemandLetterRowChangeEvent(((DemandLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DemandLetterRowDeleting != null)) {
                    this.DemandLetterRowDeleting(this, new DemandLetterRowChangeEvent(((DemandLetterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDemandLetterRow(DemandLetterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DemandLetterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerReceiptDataTable : global::System.Data.TypedTableBase<CustomerReceiptRow> {
            
            private global::System.Data.DataColumn columnSaleId;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnSaleDate;
            
            private global::System.Data.DataColumn columnSalePrice;
            
            private global::System.Data.DataColumn columnAdvAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnNextDate;
            
            private global::System.Data.DataColumn columnPayment;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnReceivePayment;
            
            private global::System.Data.DataColumn columnBlockName;
            
            private global::System.Data.DataColumn columnBuildingName;
            
            private global::System.Data.DataColumn columnArrivalDate;
            
            private global::System.Data.DataColumn columnDepartureDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerReceiptDataTable() {
                this.TableName = "CustomerReceipt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerReceiptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerReceiptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIdColumn {
                get {
                    return this.columnSaleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleDateColumn {
                get {
                    return this.columnSaleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalePriceColumn {
                get {
                    return this.columnSalePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvAmountColumn {
                get {
                    return this.columnAdvAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextDateColumn {
                get {
                    return this.columnNextDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentColumn {
                get {
                    return this.columnPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivePaymentColumn {
                get {
                    return this.columnReceivePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockNameColumn {
                get {
                    return this.columnBlockName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingNameColumn {
                get {
                    return this.columnBuildingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ArrivalDateColumn {
                get {
                    return this.columnArrivalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DepartureDateColumn {
                get {
                    return this.columnDepartureDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerReceiptRow this[int index] {
                get {
                    return ((CustomerReceiptRow)(this.Rows[index]));
                }
            }
            
            public event CustomerReceiptRowChangeEventHandler CustomerReceiptRowChanging;
            
            public event CustomerReceiptRowChangeEventHandler CustomerReceiptRowChanged;
            
            public event CustomerReceiptRowChangeEventHandler CustomerReceiptRowDeleting;
            
            public event CustomerReceiptRowChangeEventHandler CustomerReceiptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerReceiptRow(CustomerReceiptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerReceiptRow AddCustomerReceiptRow(long SaleId, string CustomerName, System.DateTime SaleDate, decimal SalePrice, decimal AdvAmount, decimal PaidAmount, System.DateTime NextDate, decimal Payment, string Remarks, decimal ReceivePayment, string BlockName, string BuildingName, System.DateTime ArrivalDate, System.DateTime DepartureDate) {
                CustomerReceiptRow rowCustomerReceiptRow = ((CustomerReceiptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SaleId,
                        CustomerName,
                        SaleDate,
                        SalePrice,
                        AdvAmount,
                        PaidAmount,
                        NextDate,
                        Payment,
                        Remarks,
                        ReceivePayment,
                        BlockName,
                        BuildingName,
                        ArrivalDate,
                        DepartureDate};
                rowCustomerReceiptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerReceiptRow);
                return rowCustomerReceiptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerReceiptDataTable cln = ((CustomerReceiptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerReceiptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSaleId = base.Columns["SaleId"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnSaleDate = base.Columns["SaleDate"];
                this.columnSalePrice = base.Columns["SalePrice"];
                this.columnAdvAmount = base.Columns["AdvAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnNextDate = base.Columns["NextDate"];
                this.columnPayment = base.Columns["Payment"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnReceivePayment = base.Columns["ReceivePayment"];
                this.columnBlockName = base.Columns["BlockName"];
                this.columnBuildingName = base.Columns["BuildingName"];
                this.columnArrivalDate = base.Columns["ArrivalDate"];
                this.columnDepartureDate = base.Columns["DepartureDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSaleId = new global::System.Data.DataColumn("SaleId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleId);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnSaleDate = new global::System.Data.DataColumn("SaleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleDate);
                this.columnSalePrice = new global::System.Data.DataColumn("SalePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalePrice);
                this.columnAdvAmount = new global::System.Data.DataColumn("AdvAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnNextDate = new global::System.Data.DataColumn("NextDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextDate);
                this.columnPayment = new global::System.Data.DataColumn("Payment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnReceivePayment = new global::System.Data.DataColumn("ReceivePayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivePayment);
                this.columnBlockName = new global::System.Data.DataColumn("BlockName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockName);
                this.columnBuildingName = new global::System.Data.DataColumn("BuildingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingName);
                this.columnArrivalDate = new global::System.Data.DataColumn("ArrivalDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivalDate);
                this.columnDepartureDate = new global::System.Data.DataColumn("DepartureDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDepartureDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerReceiptRow NewCustomerReceiptRow() {
                return ((CustomerReceiptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerReceiptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerReceiptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerReceiptRowChanged != null)) {
                    this.CustomerReceiptRowChanged(this, new CustomerReceiptRowChangeEvent(((CustomerReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerReceiptRowChanging != null)) {
                    this.CustomerReceiptRowChanging(this, new CustomerReceiptRowChangeEvent(((CustomerReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerReceiptRowDeleted != null)) {
                    this.CustomerReceiptRowDeleted(this, new CustomerReceiptRowChangeEvent(((CustomerReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerReceiptRowDeleting != null)) {
                    this.CustomerReceiptRowDeleting(this, new CustomerReceiptRowChangeEvent(((CustomerReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerReceiptRow(CustomerReceiptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerReceiptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LeadRegisterDataTable : global::System.Data.TypedTableBase<LeadRegisterRow> {
            
            private global::System.Data.DataColumn columnLeadId;
            
            private global::System.Data.DataColumn columnLeadNo;
            
            private global::System.Data.DataColumn columnLeadDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnSourceOfLead;
            
            private global::System.Data.DataColumn columnCustomerBudget;
            
            private global::System.Data.DataColumn columnInterestLevel;
            
            private global::System.Data.DataColumn columnNextFollowUpDate;
            
            private global::System.Data.DataColumn columnSpecification;
            
            private global::System.Data.DataColumn columnLeadStatus;
            
            private global::System.Data.DataColumn columnLeadTakenBy;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnBlockName;
            
            private global::System.Data.DataColumn columnBuildingName;
            
            private global::System.Data.DataColumn columnLeadBy;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columnEmpAllTo;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnPincode;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnInqResponse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LeadRegisterDataTable() {
                this.TableName = "LeadRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LeadRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LeadRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadIdColumn {
                get {
                    return this.columnLeadId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadNoColumn {
                get {
                    return this.columnLeadNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadDateColumn {
                get {
                    return this.columnLeadDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SourceOfLeadColumn {
                get {
                    return this.columnSourceOfLead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerBudgetColumn {
                get {
                    return this.columnCustomerBudget;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InterestLevelColumn {
                get {
                    return this.columnInterestLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NextFollowUpDateColumn {
                get {
                    return this.columnNextFollowUpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecificationColumn {
                get {
                    return this.columnSpecification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadStatusColumn {
                get {
                    return this.columnLeadStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadTakenByColumn {
                get {
                    return this.columnLeadTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BlockNameColumn {
                get {
                    return this.columnBlockName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BuildingNameColumn {
                get {
                    return this.columnBuildingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadByColumn {
                get {
                    return this.columnLeadBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpAllToColumn {
                get {
                    return this.columnEmpAllTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PincodeColumn {
                get {
                    return this.columnPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InqResponseColumn {
                get {
                    return this.columnInqResponse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LeadRegisterRow this[int index] {
                get {
                    return ((LeadRegisterRow)(this.Rows[index]));
                }
            }
            
            public event LeadRegisterRowChangeEventHandler LeadRegisterRowChanging;
            
            public event LeadRegisterRowChangeEventHandler LeadRegisterRowChanged;
            
            public event LeadRegisterRowChangeEventHandler LeadRegisterRowDeleting;
            
            public event LeadRegisterRowChangeEventHandler LeadRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLeadRegisterRow(LeadRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LeadRegisterRow AddLeadRegisterRow(
                        long LeadId, 
                        string LeadNo, 
                        System.DateTime LeadDate, 
                        string CustomerName, 
                        string ContactPerson, 
                        string Address, 
                        string Phone1, 
                        string SourceOfLead, 
                        decimal CustomerBudget, 
                        string InterestLevel, 
                        System.DateTime NextFollowUpDate, 
                        string Specification, 
                        string LeadStatus, 
                        string LeadTakenBy, 
                        string MobileNo, 
                        string Email, 
                        string BlockName, 
                        string BuildingName, 
                        long LeadBy, 
                        string Remarks, 
                        string EmpName, 
                        string EmpAllTo, 
                        string Mobile, 
                        string City, 
                        string Pincode, 
                        string State, 
                        string Country, 
                        string InqResponse) {
                LeadRegisterRow rowLeadRegisterRow = ((LeadRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LeadId,
                        LeadNo,
                        LeadDate,
                        CustomerName,
                        ContactPerson,
                        Address,
                        Phone1,
                        SourceOfLead,
                        CustomerBudget,
                        InterestLevel,
                        NextFollowUpDate,
                        Specification,
                        LeadStatus,
                        LeadTakenBy,
                        MobileNo,
                        Email,
                        BlockName,
                        BuildingName,
                        LeadBy,
                        Remarks,
                        EmpName,
                        EmpAllTo,
                        Mobile,
                        City,
                        Pincode,
                        State,
                        Country,
                        InqResponse};
                rowLeadRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLeadRegisterRow);
                return rowLeadRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LeadRegisterDataTable cln = ((LeadRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LeadRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLeadId = base.Columns["LeadId"];
                this.columnLeadNo = base.Columns["LeadNo"];
                this.columnLeadDate = base.Columns["LeadDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnContactPerson = base.Columns["ContactPerson"];
                this.columnAddress = base.Columns["Address"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnSourceOfLead = base.Columns["SourceOfLead"];
                this.columnCustomerBudget = base.Columns["CustomerBudget"];
                this.columnInterestLevel = base.Columns["InterestLevel"];
                this.columnNextFollowUpDate = base.Columns["NextFollowUpDate"];
                this.columnSpecification = base.Columns["Specification"];
                this.columnLeadStatus = base.Columns["LeadStatus"];
                this.columnLeadTakenBy = base.Columns["LeadTakenBy"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnEmail = base.Columns["Email"];
                this.columnBlockName = base.Columns["BlockName"];
                this.columnBuildingName = base.Columns["BuildingName"];
                this.columnLeadBy = base.Columns["LeadBy"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columnEmpAllTo = base.Columns["EmpAllTo"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnCity = base.Columns["City"];
                this.columnPincode = base.Columns["Pincode"];
                this.columnState = base.Columns["State"];
                this.columnCountry = base.Columns["Country"];
                this.columnInqResponse = base.Columns["InqResponse"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLeadId = new global::System.Data.DataColumn("LeadId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadId);
                this.columnLeadNo = new global::System.Data.DataColumn("LeadNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadNo);
                this.columnLeadDate = new global::System.Data.DataColumn("LeadDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnSourceOfLead = new global::System.Data.DataColumn("SourceOfLead", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSourceOfLead);
                this.columnCustomerBudget = new global::System.Data.DataColumn("CustomerBudget", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerBudget);
                this.columnInterestLevel = new global::System.Data.DataColumn("InterestLevel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterestLevel);
                this.columnNextFollowUpDate = new global::System.Data.DataColumn("NextFollowUpDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextFollowUpDate);
                this.columnSpecification = new global::System.Data.DataColumn("Specification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecification);
                this.columnLeadStatus = new global::System.Data.DataColumn("LeadStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadStatus);
                this.columnLeadTakenBy = new global::System.Data.DataColumn("LeadTakenBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadTakenBy);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnBlockName = new global::System.Data.DataColumn("BlockName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBlockName);
                this.columnBuildingName = new global::System.Data.DataColumn("BuildingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingName);
                this.columnLeadBy = new global::System.Data.DataColumn("LeadBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadBy);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columnEmpAllTo = new global::System.Data.DataColumn("EmpAllTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpAllTo);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnPincode = new global::System.Data.DataColumn("Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPincode);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnInqResponse = new global::System.Data.DataColumn("InqResponse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInqResponse);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LeadRegisterRow NewLeadRegisterRow() {
                return ((LeadRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LeadRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LeadRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LeadRegisterRowChanged != null)) {
                    this.LeadRegisterRowChanged(this, new LeadRegisterRowChangeEvent(((LeadRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LeadRegisterRowChanging != null)) {
                    this.LeadRegisterRowChanging(this, new LeadRegisterRowChangeEvent(((LeadRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LeadRegisterRowDeleted != null)) {
                    this.LeadRegisterRowDeleted(this, new LeadRegisterRowChangeEvent(((LeadRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LeadRegisterRowDeleting != null)) {
                    this.LeadRegisterRowDeleting(this, new LeadRegisterRowChangeEvent(((LeadRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLeadRegisterRow(LeadRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LeadRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HRDetailListDataTable : global::System.Data.TypedTableBase<HRDetailListRow> {
            
            private global::System.Data.DataColumn columnHRID;
            
            private global::System.Data.DataColumn columnHrDate;
            
            private global::System.Data.DataColumn columnTypeOfLabour;
            
            private global::System.Data.DataColumn columnNoOfLabour;
            
            private global::System.Data.DataColumn columnAmountPerLabour;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnSiteName;
            
            private global::System.Data.DataColumn columnSiteID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRDetailListDataTable() {
                this.TableName = "HRDetailList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HRDetailListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HRDetailListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HRIDColumn {
                get {
                    return this.columnHRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HrDateColumn {
                get {
                    return this.columnHrDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TypeOfLabourColumn {
                get {
                    return this.columnTypeOfLabour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoOfLabourColumn {
                get {
                    return this.columnNoOfLabour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountPerLabourColumn {
                get {
                    return this.columnAmountPerLabour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteNameColumn {
                get {
                    return this.columnSiteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteIDColumn {
                get {
                    return this.columnSiteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRDetailListRow this[int index] {
                get {
                    return ((HRDetailListRow)(this.Rows[index]));
                }
            }
            
            public event HRDetailListRowChangeEventHandler HRDetailListRowChanging;
            
            public event HRDetailListRowChangeEventHandler HRDetailListRowChanged;
            
            public event HRDetailListRowChangeEventHandler HRDetailListRowDeleting;
            
            public event HRDetailListRowChangeEventHandler HRDetailListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHRDetailListRow(HRDetailListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRDetailListRow AddHRDetailListRow(long HRID, System.DateTime HrDate, string TypeOfLabour, long NoOfLabour, decimal AmountPerLabour, decimal TotalAmount, string Remarks, string SiteName, long SiteID) {
                HRDetailListRow rowHRDetailListRow = ((HRDetailListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HRID,
                        HrDate,
                        TypeOfLabour,
                        NoOfLabour,
                        AmountPerLabour,
                        TotalAmount,
                        Remarks,
                        SiteName,
                        SiteID};
                rowHRDetailListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHRDetailListRow);
                return rowHRDetailListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HRDetailListDataTable cln = ((HRDetailListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HRDetailListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnHRID = base.Columns["HRID"];
                this.columnHrDate = base.Columns["HrDate"];
                this.columnTypeOfLabour = base.Columns["TypeOfLabour"];
                this.columnNoOfLabour = base.Columns["NoOfLabour"];
                this.columnAmountPerLabour = base.Columns["AmountPerLabour"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnSiteName = base.Columns["SiteName"];
                this.columnSiteID = base.Columns["SiteID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnHRID = new global::System.Data.DataColumn("HRID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRID);
                this.columnHrDate = new global::System.Data.DataColumn("HrDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHrDate);
                this.columnTypeOfLabour = new global::System.Data.DataColumn("TypeOfLabour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeOfLabour);
                this.columnNoOfLabour = new global::System.Data.DataColumn("NoOfLabour", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoOfLabour);
                this.columnAmountPerLabour = new global::System.Data.DataColumn("AmountPerLabour", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountPerLabour);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnSiteName = new global::System.Data.DataColumn("SiteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteName);
                this.columnSiteID = new global::System.Data.DataColumn("SiteID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRDetailListRow NewHRDetailListRow() {
                return ((HRDetailListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HRDetailListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HRDetailListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HRDetailListRowChanged != null)) {
                    this.HRDetailListRowChanged(this, new HRDetailListRowChangeEvent(((HRDetailListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HRDetailListRowChanging != null)) {
                    this.HRDetailListRowChanging(this, new HRDetailListRowChangeEvent(((HRDetailListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HRDetailListRowDeleted != null)) {
                    this.HRDetailListRowDeleted(this, new HRDetailListRowChangeEvent(((HRDetailListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HRDetailListRowDeleting != null)) {
                    this.HRDetailListRowDeleting(this, new HRDetailListRowChangeEvent(((HRDetailListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHRDetailListRow(HRDetailListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HRDetailListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DailyConsumptionDataTable : global::System.Data.TypedTableBase<DailyConsumptionRow> {
            
            private global::System.Data.DataColumn columnSiteID;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnSiteName;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyConsumptionDataTable() {
                this.TableName = "DailyConsumption";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DailyConsumptionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DailyConsumptionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteIDColumn {
                get {
                    return this.columnSiteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SiteNameColumn {
                get {
                    return this.columnSiteName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyConsumptionRow this[int index] {
                get {
                    return ((DailyConsumptionRow)(this.Rows[index]));
                }
            }
            
            public event DailyConsumptionRowChangeEventHandler DailyConsumptionRowChanging;
            
            public event DailyConsumptionRowChangeEventHandler DailyConsumptionRowChanged;
            
            public event DailyConsumptionRowChangeEventHandler DailyConsumptionRowDeleting;
            
            public event DailyConsumptionRowChangeEventHandler DailyConsumptionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDailyConsumptionRow(DailyConsumptionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyConsumptionRow AddDailyConsumptionRow(long SiteID, long ItemID, string ItemName, string SiteName, System.DateTime Date, string Description, decimal Qty) {
                DailyConsumptionRow rowDailyConsumptionRow = ((DailyConsumptionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SiteID,
                        ItemID,
                        ItemName,
                        SiteName,
                        Date,
                        Description,
                        Qty};
                rowDailyConsumptionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDailyConsumptionRow);
                return rowDailyConsumptionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DailyConsumptionDataTable cln = ((DailyConsumptionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DailyConsumptionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSiteID = base.Columns["SiteID"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnSiteName = base.Columns["SiteName"];
                this.columnDate = base.Columns["Date"];
                this.columnDescription = base.Columns["Description"];
                this.columnQty = base.Columns["Qty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSiteID = new global::System.Data.DataColumn("SiteID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteID);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnSiteName = new global::System.Data.DataColumn("SiteName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteName);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyConsumptionRow NewDailyConsumptionRow() {
                return ((DailyConsumptionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DailyConsumptionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DailyConsumptionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DailyConsumptionRowChanged != null)) {
                    this.DailyConsumptionRowChanged(this, new DailyConsumptionRowChangeEvent(((DailyConsumptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DailyConsumptionRowChanging != null)) {
                    this.DailyConsumptionRowChanging(this, new DailyConsumptionRowChangeEvent(((DailyConsumptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DailyConsumptionRowDeleted != null)) {
                    this.DailyConsumptionRowDeleted(this, new DailyConsumptionRowChangeEvent(((DailyConsumptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DailyConsumptionRowDeleting != null)) {
                    this.DailyConsumptionRowDeleting(this, new DailyConsumptionRowChangeEvent(((DailyConsumptionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDailyConsumptionRow(DailyConsumptionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DailyConsumptionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerPaymentRegisterDataTable : global::System.Data.TypedTableBase<CustomerPaymentRegisterRow> {
            
            private global::System.Data.DataColumn columnReceiptID;
            
            private global::System.Data.DataColumn columnReceiptCode;
            
            private global::System.Data.DataColumn columnReceiptDate;
            
            private global::System.Data.DataColumn columnLeadNo;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnLeadID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentRegisterDataTable() {
                this.TableName = "CustomerPaymentRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPaymentRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerPaymentRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptIDColumn {
                get {
                    return this.columnReceiptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptCodeColumn {
                get {
                    return this.columnReceiptCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptDateColumn {
                get {
                    return this.columnReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadNoColumn {
                get {
                    return this.columnLeadNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadIDColumn {
                get {
                    return this.columnLeadID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentRegisterRow this[int index] {
                get {
                    return ((CustomerPaymentRegisterRow)(this.Rows[index]));
                }
            }
            
            public event CustomerPaymentRegisterRowChangeEventHandler CustomerPaymentRegisterRowChanging;
            
            public event CustomerPaymentRegisterRowChangeEventHandler CustomerPaymentRegisterRowChanged;
            
            public event CustomerPaymentRegisterRowChangeEventHandler CustomerPaymentRegisterRowDeleting;
            
            public event CustomerPaymentRegisterRowChangeEventHandler CustomerPaymentRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerPaymentRegisterRow(CustomerPaymentRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentRegisterRow AddCustomerPaymentRegisterRow(long ReceiptID, string ReceiptCode, System.DateTime ReceiptDate, string LeadNo, string CustomerName, decimal NetAmount, string Narration, long LeadID) {
                CustomerPaymentRegisterRow rowCustomerPaymentRegisterRow = ((CustomerPaymentRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReceiptID,
                        ReceiptCode,
                        ReceiptDate,
                        LeadNo,
                        CustomerName,
                        NetAmount,
                        Narration,
                        LeadID};
                rowCustomerPaymentRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerPaymentRegisterRow);
                return rowCustomerPaymentRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerPaymentRegisterDataTable cln = ((CustomerPaymentRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerPaymentRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceiptID = base.Columns["ReceiptID"];
                this.columnReceiptCode = base.Columns["ReceiptCode"];
                this.columnReceiptDate = base.Columns["ReceiptDate"];
                this.columnLeadNo = base.Columns["LeadNo"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnNarration = base.Columns["Narration"];
                this.columnLeadID = base.Columns["LeadID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceiptID = new global::System.Data.DataColumn("ReceiptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptID);
                this.columnReceiptCode = new global::System.Data.DataColumn("ReceiptCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptCode);
                this.columnReceiptDate = new global::System.Data.DataColumn("ReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptDate);
                this.columnLeadNo = new global::System.Data.DataColumn("LeadNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadNo);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnLeadID = new global::System.Data.DataColumn("LeadID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentRegisterRow NewCustomerPaymentRegisterRow() {
                return ((CustomerPaymentRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerPaymentRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerPaymentRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerPaymentRegisterRowChanged != null)) {
                    this.CustomerPaymentRegisterRowChanged(this, new CustomerPaymentRegisterRowChangeEvent(((CustomerPaymentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerPaymentRegisterRowChanging != null)) {
                    this.CustomerPaymentRegisterRowChanging(this, new CustomerPaymentRegisterRowChangeEvent(((CustomerPaymentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerPaymentRegisterRowDeleted != null)) {
                    this.CustomerPaymentRegisterRowDeleted(this, new CustomerPaymentRegisterRowChangeEvent(((CustomerPaymentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerPaymentRegisterRowDeleting != null)) {
                    this.CustomerPaymentRegisterRowDeleting(this, new CustomerPaymentRegisterRowChangeEvent(((CustomerPaymentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerPaymentRegisterRow(CustomerPaymentRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerPaymentRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerRegisterDataTable : global::System.Data.TypedTableBase<CustomerRegisterRow> {
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCityID;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnPincode;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnTinNo;
            
            private global::System.Data.DataColumn columnCSTNo;
            
            private global::System.Data.DataColumn columnPANo;
            
            private global::System.Data.DataColumn columnEccNo;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnLeadNo;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegisterDataTable() {
                this.TableName = "CustomerRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityIDColumn {
                get {
                    return this.columnCityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PincodeColumn {
                get {
                    return this.columnPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TinNoColumn {
                get {
                    return this.columnTinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTNoColumn {
                get {
                    return this.columnCSTNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PANoColumn {
                get {
                    return this.columnPANo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EccNoColumn {
                get {
                    return this.columnEccNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadNoColumn {
                get {
                    return this.columnLeadNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegisterRow this[int index] {
                get {
                    return ((CustomerRegisterRow)(this.Rows[index]));
                }
            }
            
            public event CustomerRegisterRowChangeEventHandler CustomerRegisterRowChanging;
            
            public event CustomerRegisterRowChangeEventHandler CustomerRegisterRowChanged;
            
            public event CustomerRegisterRowChangeEventHandler CustomerRegisterRowDeleting;
            
            public event CustomerRegisterRowChangeEventHandler CustomerRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerRegisterRow(CustomerRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegisterRow AddCustomerRegisterRow(
                        long CustomerID, 
                        string Code, 
                        string CustomerName, 
                        string Address, 
                        long CityID, 
                        string City, 
                        string State, 
                        string Country, 
                        string Pincode, 
                        string Phone1, 
                        string Fax, 
                        string Mobile, 
                        string TinNo, 
                        string CSTNo, 
                        string PANo, 
                        string EccNo, 
                        string ContactName, 
                        string LeadNo, 
                        string CustomerCode) {
                CustomerRegisterRow rowCustomerRegisterRow = ((CustomerRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerID,
                        Code,
                        CustomerName,
                        Address,
                        CityID,
                        City,
                        State,
                        Country,
                        Pincode,
                        Phone1,
                        Fax,
                        Mobile,
                        TinNo,
                        CSTNo,
                        PANo,
                        EccNo,
                        ContactName,
                        LeadNo,
                        CustomerCode};
                rowCustomerRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerRegisterRow);
                return rowCustomerRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerRegisterDataTable cln = ((CustomerRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCode = base.Columns["Code"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnCityID = base.Columns["CityID"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnCountry = base.Columns["Country"];
                this.columnPincode = base.Columns["Pincode"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnFax = base.Columns["Fax"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnTinNo = base.Columns["TinNo"];
                this.columnCSTNo = base.Columns["CSTNo"];
                this.columnPANo = base.Columns["PANo"];
                this.columnEccNo = base.Columns["EccNo"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnLeadNo = base.Columns["LeadNo"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCityID = new global::System.Data.DataColumn("CityID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityID);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnPincode = new global::System.Data.DataColumn("Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPincode);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnTinNo = new global::System.Data.DataColumn("TinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTinNo);
                this.columnCSTNo = new global::System.Data.DataColumn("CSTNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTNo);
                this.columnPANo = new global::System.Data.DataColumn("PANo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPANo);
                this.columnEccNo = new global::System.Data.DataColumn("EccNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEccNo);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnLeadNo = new global::System.Data.DataColumn("LeadNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadNo);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegisterRow NewCustomerRegisterRow() {
                return ((CustomerRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerRegisterRowChanged != null)) {
                    this.CustomerRegisterRowChanged(this, new CustomerRegisterRowChangeEvent(((CustomerRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerRegisterRowChanging != null)) {
                    this.CustomerRegisterRowChanging(this, new CustomerRegisterRowChangeEvent(((CustomerRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerRegisterRowDeleted != null)) {
                    this.CustomerRegisterRowDeleted(this, new CustomerRegisterRowChangeEvent(((CustomerRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerRegisterRowDeleting != null)) {
                    this.CustomerRegisterRowDeleting(this, new CustomerRegisterRowChangeEvent(((CustomerRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerRegisterRow(CustomerRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesVoucherDataTable : global::System.Data.TypedTableBase<SalesVoucherRow> {
            
            private global::System.Data.DataColumn columnSaleID;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnDateOfJourney;
            
            private global::System.Data.DataColumn columnCarType;
            
            private global::System.Data.DataColumn columnCarNumber;
            
            private global::System.Data.DataColumn columnDriverName;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnPhoneNo;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnPlaceOfJourney;
            
            private global::System.Data.DataColumn columnClosingKms;
            
            private global::System.Data.DataColumn columnClosingDate;
            
            private global::System.Data.DataColumn columnStartingKms;
            
            private global::System.Data.DataColumn columnStartingDate;
            
            private global::System.Data.DataColumn columnTotalKms;
            
            private global::System.Data.DataColumn columnTotalDays;
            
            private global::System.Data.DataColumn columnRateType;
            
            private global::System.Data.DataColumn columnExtraKms;
            
            private global::System.Data.DataColumn columnExtraAmt;
            
            private global::System.Data.DataColumn columnExtraHrs;
            
            private global::System.Data.DataColumn columnExtraHrsAmt;
            
            private global::System.Data.DataColumn columnTollTax;
            
            private global::System.Data.DataColumn columnNightCharge;
            
            private global::System.Data.DataColumn columnDriverAllowance;
            
            private global::System.Data.DataColumn columnOtherAllowance;
            
            private global::System.Data.DataColumn columnTotalPayment;
            
            private global::System.Data.DataColumn columnAdvancePayment;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnDriverCellNo;
            
            private global::System.Data.DataColumn columnRateTypeAmt;
            
            private global::System.Data.DataColumn columnStartingTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesVoucherDataTable() {
                this.TableName = "SalesVoucher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesVoucherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesVoucherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIDColumn {
                get {
                    return this.columnSaleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfJourneyColumn {
                get {
                    return this.columnDateOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeColumn {
                get {
                    return this.columnCarType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarNumberColumn {
                get {
                    return this.columnCarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DriverNameColumn {
                get {
                    return this.columnDriverName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNoColumn {
                get {
                    return this.columnPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceOfJourneyColumn {
                get {
                    return this.columnPlaceOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosingKmsColumn {
                get {
                    return this.columnClosingKms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosingDateColumn {
                get {
                    return this.columnClosingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartingKmsColumn {
                get {
                    return this.columnStartingKms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartingDateColumn {
                get {
                    return this.columnStartingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalKmsColumn {
                get {
                    return this.columnTotalKms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDaysColumn {
                get {
                    return this.columnTotalDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateTypeColumn {
                get {
                    return this.columnRateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraKmsColumn {
                get {
                    return this.columnExtraKms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraAmtColumn {
                get {
                    return this.columnExtraAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraHrsColumn {
                get {
                    return this.columnExtraHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraHrsAmtColumn {
                get {
                    return this.columnExtraHrsAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TollTaxColumn {
                get {
                    return this.columnTollTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NightChargeColumn {
                get {
                    return this.columnNightCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DriverAllowanceColumn {
                get {
                    return this.columnDriverAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherAllowanceColumn {
                get {
                    return this.columnOtherAllowance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPaymentColumn {
                get {
                    return this.columnTotalPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvancePaymentColumn {
                get {
                    return this.columnAdvancePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DriverCellNoColumn {
                get {
                    return this.columnDriverCellNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateTypeAmtColumn {
                get {
                    return this.columnRateTypeAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartingTimeColumn {
                get {
                    return this.columnStartingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesVoucherRow this[int index] {
                get {
                    return ((SalesVoucherRow)(this.Rows[index]));
                }
            }
            
            public event SalesVoucherRowChangeEventHandler SalesVoucherRowChanging;
            
            public event SalesVoucherRowChangeEventHandler SalesVoucherRowChanged;
            
            public event SalesVoucherRowChangeEventHandler SalesVoucherRowDeleting;
            
            public event SalesVoucherRowChangeEventHandler SalesVoucherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesVoucherRow(SalesVoucherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesVoucherRow AddSalesVoucherRow(
                        long SaleID, 
                        string SalesCode, 
                        string Company, 
                        System.DateTime DateOfJourney, 
                        string CarType, 
                        string CarNumber, 
                        string DriverName, 
                        string EngagedFor, 
                        string PhoneNo, 
                        string Address, 
                        string PlaceOfJourney, 
                        decimal ClosingKms, 
                        System.DateTime ClosingDate, 
                        decimal StartingKms, 
                        System.DateTime StartingDate, 
                        decimal TotalKms, 
                        decimal TotalDays, 
                        string RateType, 
                        decimal ExtraKms, 
                        decimal ExtraAmt, 
                        decimal ExtraHrs, 
                        decimal ExtraHrsAmt, 
                        decimal TollTax, 
                        decimal NightCharge, 
                        decimal DriverAllowance, 
                        decimal OtherAllowance, 
                        decimal TotalPayment, 
                        decimal AdvancePayment, 
                        decimal Balance, 
                        string DriverCellNo, 
                        decimal RateTypeAmt, 
                        string StartingTime, 
                        string EndTime) {
                SalesVoucherRow rowSalesVoucherRow = ((SalesVoucherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SaleID,
                        SalesCode,
                        Company,
                        DateOfJourney,
                        CarType,
                        CarNumber,
                        DriverName,
                        EngagedFor,
                        PhoneNo,
                        Address,
                        PlaceOfJourney,
                        ClosingKms,
                        ClosingDate,
                        StartingKms,
                        StartingDate,
                        TotalKms,
                        TotalDays,
                        RateType,
                        ExtraKms,
                        ExtraAmt,
                        ExtraHrs,
                        ExtraHrsAmt,
                        TollTax,
                        NightCharge,
                        DriverAllowance,
                        OtherAllowance,
                        TotalPayment,
                        AdvancePayment,
                        Balance,
                        DriverCellNo,
                        RateTypeAmt,
                        StartingTime,
                        EndTime};
                rowSalesVoucherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesVoucherRow);
                return rowSalesVoucherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesVoucherDataTable cln = ((SalesVoucherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesVoucherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSaleID = base.Columns["SaleID"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnCompany = base.Columns["Company"];
                this.columnDateOfJourney = base.Columns["DateOfJourney"];
                this.columnCarType = base.Columns["CarType"];
                this.columnCarNumber = base.Columns["CarNumber"];
                this.columnDriverName = base.Columns["DriverName"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnPhoneNo = base.Columns["PhoneNo"];
                this.columnAddress = base.Columns["Address"];
                this.columnPlaceOfJourney = base.Columns["PlaceOfJourney"];
                this.columnClosingKms = base.Columns["ClosingKms"];
                this.columnClosingDate = base.Columns["ClosingDate"];
                this.columnStartingKms = base.Columns["StartingKms"];
                this.columnStartingDate = base.Columns["StartingDate"];
                this.columnTotalKms = base.Columns["TotalKms"];
                this.columnTotalDays = base.Columns["TotalDays"];
                this.columnRateType = base.Columns["RateType"];
                this.columnExtraKms = base.Columns["ExtraKms"];
                this.columnExtraAmt = base.Columns["ExtraAmt"];
                this.columnExtraHrs = base.Columns["ExtraHrs"];
                this.columnExtraHrsAmt = base.Columns["ExtraHrsAmt"];
                this.columnTollTax = base.Columns["TollTax"];
                this.columnNightCharge = base.Columns["NightCharge"];
                this.columnDriverAllowance = base.Columns["DriverAllowance"];
                this.columnOtherAllowance = base.Columns["OtherAllowance"];
                this.columnTotalPayment = base.Columns["TotalPayment"];
                this.columnAdvancePayment = base.Columns["AdvancePayment"];
                this.columnBalance = base.Columns["Balance"];
                this.columnDriverCellNo = base.Columns["DriverCellNo"];
                this.columnRateTypeAmt = base.Columns["RateTypeAmt"];
                this.columnStartingTime = base.Columns["StartingTime"];
                this.columnEndTime = base.Columns["EndTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSaleID = new global::System.Data.DataColumn("SaleID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleID);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnDateOfJourney = new global::System.Data.DataColumn("DateOfJourney", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJourney);
                this.columnCarType = new global::System.Data.DataColumn("CarType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarType);
                this.columnCarNumber = new global::System.Data.DataColumn("CarNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarNumber);
                this.columnDriverName = new global::System.Data.DataColumn("DriverName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverName);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnPhoneNo = new global::System.Data.DataColumn("PhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNo);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnPlaceOfJourney = new global::System.Data.DataColumn("PlaceOfJourney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceOfJourney);
                this.columnClosingKms = new global::System.Data.DataColumn("ClosingKms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingKms);
                this.columnClosingDate = new global::System.Data.DataColumn("ClosingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingDate);
                this.columnStartingKms = new global::System.Data.DataColumn("StartingKms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartingKms);
                this.columnStartingDate = new global::System.Data.DataColumn("StartingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartingDate);
                this.columnTotalKms = new global::System.Data.DataColumn("TotalKms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalKms);
                this.columnTotalDays = new global::System.Data.DataColumn("TotalDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDays);
                this.columnRateType = new global::System.Data.DataColumn("RateType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateType);
                this.columnExtraKms = new global::System.Data.DataColumn("ExtraKms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraKms);
                this.columnExtraAmt = new global::System.Data.DataColumn("ExtraAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraAmt);
                this.columnExtraHrs = new global::System.Data.DataColumn("ExtraHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraHrs);
                this.columnExtraHrsAmt = new global::System.Data.DataColumn("ExtraHrsAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraHrsAmt);
                this.columnTollTax = new global::System.Data.DataColumn("TollTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTollTax);
                this.columnNightCharge = new global::System.Data.DataColumn("NightCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNightCharge);
                this.columnDriverAllowance = new global::System.Data.DataColumn("DriverAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverAllowance);
                this.columnOtherAllowance = new global::System.Data.DataColumn("OtherAllowance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAllowance);
                this.columnTotalPayment = new global::System.Data.DataColumn("TotalPayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPayment);
                this.columnAdvancePayment = new global::System.Data.DataColumn("AdvancePayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancePayment);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnDriverCellNo = new global::System.Data.DataColumn("DriverCellNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDriverCellNo);
                this.columnRateTypeAmt = new global::System.Data.DataColumn("RateTypeAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateTypeAmt);
                this.columnStartingTime = new global::System.Data.DataColumn("StartingTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartingTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesVoucherRow NewSalesVoucherRow() {
                return ((SalesVoucherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesVoucherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesVoucherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesVoucherRowChanged != null)) {
                    this.SalesVoucherRowChanged(this, new SalesVoucherRowChangeEvent(((SalesVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesVoucherRowChanging != null)) {
                    this.SalesVoucherRowChanging(this, new SalesVoucherRowChangeEvent(((SalesVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesVoucherRowDeleted != null)) {
                    this.SalesVoucherRowDeleted(this, new SalesVoucherRowChangeEvent(((SalesVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesVoucherRowDeleting != null)) {
                    this.SalesVoucherRowDeleting(this, new SalesVoucherRowChangeEvent(((SalesVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesVoucherRow(SalesVoucherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesVoucherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServiceModuleRegisterDataTable : global::System.Data.TypedTableBase<ServiceModuleRegisterRow> {
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnModelNumber;
            
            private global::System.Data.DataColumn columnProblem;
            
            private global::System.Data.DataColumn columnServiceBy;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnEmail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceModuleRegisterDataTable() {
                this.TableName = "ServiceModuleRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceModuleRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ServiceModuleRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNumberColumn {
                get {
                    return this.columnModelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemColumn {
                get {
                    return this.columnProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceByColumn {
                get {
                    return this.columnServiceBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceModuleRegisterRow this[int index] {
                get {
                    return ((ServiceModuleRegisterRow)(this.Rows[index]));
                }
            }
            
            public event ServiceModuleRegisterRowChangeEventHandler ServiceModuleRegisterRowChanging;
            
            public event ServiceModuleRegisterRowChangeEventHandler ServiceModuleRegisterRowChanged;
            
            public event ServiceModuleRegisterRowChangeEventHandler ServiceModuleRegisterRowDeleting;
            
            public event ServiceModuleRegisterRowChangeEventHandler ServiceModuleRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddServiceModuleRegisterRow(ServiceModuleRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceModuleRegisterRow AddServiceModuleRegisterRow(long ServiceId, string RequestNo, System.DateTime ServiceDate, string ProductName, string ModelNumber, string Problem, string ServiceBy, string Remarks, string CustomerName, string MobileNo, string Email) {
                ServiceModuleRegisterRow rowServiceModuleRegisterRow = ((ServiceModuleRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceId,
                        RequestNo,
                        ServiceDate,
                        ProductName,
                        ModelNumber,
                        Problem,
                        ServiceBy,
                        Remarks,
                        CustomerName,
                        MobileNo,
                        Email};
                rowServiceModuleRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServiceModuleRegisterRow);
                return rowServiceModuleRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ServiceModuleRegisterDataTable cln = ((ServiceModuleRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServiceModuleRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnModelNumber = base.Columns["ModelNumber"];
                this.columnProblem = base.Columns["Problem"];
                this.columnServiceBy = base.Columns["ServiceBy"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnEmail = base.Columns["Email"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnModelNumber = new global::System.Data.DataColumn("ModelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNumber);
                this.columnProblem = new global::System.Data.DataColumn("Problem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblem);
                this.columnServiceBy = new global::System.Data.DataColumn("ServiceBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceBy);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceModuleRegisterRow NewServiceModuleRegisterRow() {
                return ((ServiceModuleRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServiceModuleRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ServiceModuleRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServiceModuleRegisterRowChanged != null)) {
                    this.ServiceModuleRegisterRowChanged(this, new ServiceModuleRegisterRowChangeEvent(((ServiceModuleRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServiceModuleRegisterRowChanging != null)) {
                    this.ServiceModuleRegisterRowChanging(this, new ServiceModuleRegisterRowChangeEvent(((ServiceModuleRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServiceModuleRegisterRowDeleted != null)) {
                    this.ServiceModuleRegisterRowDeleted(this, new ServiceModuleRegisterRowChangeEvent(((ServiceModuleRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServiceModuleRegisterRowDeleting != null)) {
                    this.ServiceModuleRegisterRowDeleting(this, new ServiceModuleRegisterRowChangeEvent(((ServiceModuleRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveServiceModuleRegisterRow(ServiceModuleRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServiceModuleRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CarTypeWiseRegisterDataTable : global::System.Data.TypedTableBase<CarTypeWiseRegisterRow> {
            
            private global::System.Data.DataColumn columnCarTypeID;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnDateOfJourney;
            
            private global::System.Data.DataColumn columnCarType;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnTotalKms;
            
            private global::System.Data.DataColumn columnTotalDays;
            
            private global::System.Data.DataColumn columnExtraKms;
            
            private global::System.Data.DataColumn columnDisealUsed;
            
            private global::System.Data.DataColumn columnTotalPayment;
            
            private global::System.Data.DataColumn columnMaintananceCharges;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarTypeWiseRegisterDataTable() {
                this.TableName = "CarTypeWiseRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CarTypeWiseRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CarTypeWiseRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeIDColumn {
                get {
                    return this.columnCarTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfJourneyColumn {
                get {
                    return this.columnDateOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeColumn {
                get {
                    return this.columnCarType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalKmsColumn {
                get {
                    return this.columnTotalKms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalDaysColumn {
                get {
                    return this.columnTotalDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraKmsColumn {
                get {
                    return this.columnExtraKms;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisealUsedColumn {
                get {
                    return this.columnDisealUsed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPaymentColumn {
                get {
                    return this.columnTotalPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaintananceChargesColumn {
                get {
                    return this.columnMaintananceCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarTypeWiseRegisterRow this[int index] {
                get {
                    return ((CarTypeWiseRegisterRow)(this.Rows[index]));
                }
            }
            
            public event CarTypeWiseRegisterRowChangeEventHandler CarTypeWiseRegisterRowChanging;
            
            public event CarTypeWiseRegisterRowChangeEventHandler CarTypeWiseRegisterRowChanged;
            
            public event CarTypeWiseRegisterRowChangeEventHandler CarTypeWiseRegisterRowDeleting;
            
            public event CarTypeWiseRegisterRowChangeEventHandler CarTypeWiseRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCarTypeWiseRegisterRow(CarTypeWiseRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarTypeWiseRegisterRow AddCarTypeWiseRegisterRow(long CarTypeID, string SalesCode, System.DateTime DateOfJourney, string CarType, string EngagedFor, decimal TotalKms, decimal TotalDays, decimal ExtraKms, string DisealUsed, decimal TotalPayment, string MaintananceCharges) {
                CarTypeWiseRegisterRow rowCarTypeWiseRegisterRow = ((CarTypeWiseRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CarTypeID,
                        SalesCode,
                        DateOfJourney,
                        CarType,
                        EngagedFor,
                        TotalKms,
                        TotalDays,
                        ExtraKms,
                        DisealUsed,
                        TotalPayment,
                        MaintananceCharges};
                rowCarTypeWiseRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCarTypeWiseRegisterRow);
                return rowCarTypeWiseRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CarTypeWiseRegisterDataTable cln = ((CarTypeWiseRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CarTypeWiseRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCarTypeID = base.Columns["CarTypeID"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnDateOfJourney = base.Columns["DateOfJourney"];
                this.columnCarType = base.Columns["CarType"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnTotalKms = base.Columns["TotalKms"];
                this.columnTotalDays = base.Columns["TotalDays"];
                this.columnExtraKms = base.Columns["ExtraKms"];
                this.columnDisealUsed = base.Columns["DisealUsed"];
                this.columnTotalPayment = base.Columns["TotalPayment"];
                this.columnMaintananceCharges = base.Columns["MaintananceCharges"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCarTypeID = new global::System.Data.DataColumn("CarTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarTypeID);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnDateOfJourney = new global::System.Data.DataColumn("DateOfJourney", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJourney);
                this.columnCarType = new global::System.Data.DataColumn("CarType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarType);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnTotalKms = new global::System.Data.DataColumn("TotalKms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalKms);
                this.columnTotalDays = new global::System.Data.DataColumn("TotalDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDays);
                this.columnExtraKms = new global::System.Data.DataColumn("ExtraKms", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraKms);
                this.columnDisealUsed = new global::System.Data.DataColumn("DisealUsed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisealUsed);
                this.columnTotalPayment = new global::System.Data.DataColumn("TotalPayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPayment);
                this.columnMaintananceCharges = new global::System.Data.DataColumn("MaintananceCharges", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintananceCharges);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarTypeWiseRegisterRow NewCarTypeWiseRegisterRow() {
                return ((CarTypeWiseRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CarTypeWiseRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CarTypeWiseRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CarTypeWiseRegisterRowChanged != null)) {
                    this.CarTypeWiseRegisterRowChanged(this, new CarTypeWiseRegisterRowChangeEvent(((CarTypeWiseRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CarTypeWiseRegisterRowChanging != null)) {
                    this.CarTypeWiseRegisterRowChanging(this, new CarTypeWiseRegisterRowChangeEvent(((CarTypeWiseRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CarTypeWiseRegisterRowDeleted != null)) {
                    this.CarTypeWiseRegisterRowDeleted(this, new CarTypeWiseRegisterRowChangeEvent(((CarTypeWiseRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CarTypeWiseRegisterRowDeleting != null)) {
                    this.CarTypeWiseRegisterRowDeleting(this, new CarTypeWiseRegisterRowChangeEvent(((CarTypeWiseRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCarTypeWiseRegisterRow(CarTypeWiseRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CarTypeWiseRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesInvoiceDataTable : global::System.Data.TypedTableBase<SalesInvoiceRow> {
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnDCNo;
            
            private global::System.Data.DataColumn columnDCDate;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnPinCode;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnExtraCharges;
            
            private global::System.Data.DataColumn columnExtraChargesType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceDataTable() {
                this.TableName = "SalesInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCNoColumn {
                get {
                    return this.columnDCNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCDateColumn {
                get {
                    return this.columnDCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinCodeColumn {
                get {
                    return this.columnPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraChargesColumn {
                get {
                    return this.columnExtraCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraChargesTypeColumn {
                get {
                    return this.columnExtraChargesType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceRow this[int index] {
                get {
                    return ((SalesInvoiceRow)(this.Rows[index]));
                }
            }
            
            public event SalesInvoiceRowChangeEventHandler SalesInvoiceRowChanging;
            
            public event SalesInvoiceRowChangeEventHandler SalesInvoiceRowChanged;
            
            public event SalesInvoiceRowChangeEventHandler SalesInvoiceRowDeleting;
            
            public event SalesInvoiceRowChangeEventHandler SalesInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesInvoiceRow(SalesInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceRow AddSalesInvoiceRow(
                        string SalesCode, 
                        System.DateTime SalesDate, 
                        string DCNo, 
                        System.DateTime DCDate, 
                        decimal TotalAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long CustomerID, 
                        string CustomerCode, 
                        string Customer, 
                        string Address1, 
                        string Address2, 
                        string Phone1, 
                        string PinCode, 
                        string City, 
                        string State, 
                        string Narration, 
                        long ItemID, 
                        string TaxClass, 
                        decimal Qty, 
                        decimal Rate, 
                        decimal Amount, 
                        string ItemName, 
                        string UOM, 
                        string ExtraCharges, 
                        string ExtraChargesType) {
                SalesInvoiceRow rowSalesInvoiceRow = ((SalesInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesCode,
                        SalesDate,
                        DCNo,
                        DCDate,
                        TotalAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        CustomerID,
                        CustomerCode,
                        Customer,
                        Address1,
                        Address2,
                        Phone1,
                        PinCode,
                        City,
                        State,
                        Narration,
                        ItemID,
                        TaxClass,
                        Qty,
                        Rate,
                        Amount,
                        ItemName,
                        UOM,
                        ExtraCharges,
                        ExtraChargesType};
                rowSalesInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesInvoiceRow);
                return rowSalesInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesInvoiceDataTable cln = ((SalesInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnDCNo = base.Columns["DCNo"];
                this.columnDCDate = base.Columns["DCDate"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPinCode = base.Columns["PinCode"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnNarration = base.Columns["Narration"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnTaxClass = base.Columns["TaxClass"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnUOM = base.Columns["UOM"];
                this.columnExtraCharges = base.Columns["ExtraCharges"];
                this.columnExtraChargesType = base.Columns["ExtraChargesType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnDCNo = new global::System.Data.DataColumn("DCNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNo);
                this.columnDCDate = new global::System.Data.DataColumn("DCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCDate);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPinCode = new global::System.Data.DataColumn("PinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinCode);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnExtraCharges = new global::System.Data.DataColumn("ExtraCharges", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraCharges);
                this.columnExtraChargesType = new global::System.Data.DataColumn("ExtraChargesType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraChargesType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceRow NewSalesInvoiceRow() {
                return ((SalesInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesInvoiceRowChanged != null)) {
                    this.SalesInvoiceRowChanged(this, new SalesInvoiceRowChangeEvent(((SalesInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesInvoiceRowChanging != null)) {
                    this.SalesInvoiceRowChanging(this, new SalesInvoiceRowChangeEvent(((SalesInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesInvoiceRowDeleted != null)) {
                    this.SalesInvoiceRowDeleted(this, new SalesInvoiceRowChangeEvent(((SalesInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesInvoiceRowDeleting != null)) {
                    this.SalesInvoiceRowDeleting(this, new SalesInvoiceRowChangeEvent(((SalesInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesInvoiceRow(SalesInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseOrderDataTable : global::System.Data.TypedTableBase<PurchaseOrderRow> {
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnDCNo;
            
            private global::System.Data.DataColumn columnDCDate;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnPinCode;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnCSTNo;
            
            private global::System.Data.DataColumn columnTinNo;
            
            private global::System.Data.DataColumn columnExcise;
            
            private global::System.Data.DataColumn columnEduCess;
            
            private global::System.Data.DataColumn columnServiceTax;
            
            private global::System.Data.DataColumn columnHEduCess;
            
            private global::System.Data.DataColumn columnCST;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnAVAT;
            
            private global::System.Data.DataColumn columnExtraCharges;
            
            private global::System.Data.DataColumn columnExtraChargesType;
            
            private global::System.Data.DataColumn columnDis;
            
            private global::System.Data.DataColumn columnName1;
            
            private global::System.Data.DataColumn columnName2;
            
            private global::System.Data.DataColumn columnName3;
            
            private global::System.Data.DataColumn columnName4;
            
            private global::System.Data.DataColumn columnName5;
            
            private global::System.Data.DataColumn columnName6;
            
            private global::System.Data.DataColumn columnValue1;
            
            private global::System.Data.DataColumn columnValue2;
            
            private global::System.Data.DataColumn columnValue3;
            
            private global::System.Data.DataColumn columnValue4;
            
            private global::System.Data.DataColumn columnValue5;
            
            private global::System.Data.DataColumn columnValue6;
            
            private global::System.Data.DataColumn columnExCharges2;
            
            private global::System.Data.DataColumn columnExChargesType2;
            
            private global::System.Data.DataColumn columnExCharges3;
            
            private global::System.Data.DataColumn columnExChargesType3;
            
            private global::System.Data.DataColumn columnItemSpec;
            
            private global::System.Data.DataColumn columnItemSSpec;
            
            private global::System.Data.DataColumn columnCustInvoiceNo;
            
            private global::System.Data.DataColumn columnHSNCode;
            
            private global::System.Data.DataColumn columnBONO;
            
            private global::System.Data.DataColumn columnBODate;
            
            private global::System.Data.DataColumn columnShippingAdd;
            
            private global::System.Data.DataColumn columnDiscountAmt;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnPONo;
            
            private global::System.Data.DataColumn columnPODate;
            
            private global::System.Data.DataColumn columnLRNo;
            
            private global::System.Data.DataColumn columnTransportName;
            
            private global::System.Data.DataColumn columnDestination;
            
            private global::System.Data.DataColumn columnRoadPerNo;
            
            private global::System.Data.DataColumn columnLRDate;
            
            private global::System.Data.DataColumn columnChallanNo;
            
            private global::System.Data.DataColumn columnImage1;
            
            private global::System.Data.DataColumn columnDocName;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            private global::System.Data.DataColumn columnSBCessAmount;
            
            private global::System.Data.DataColumn columnExtraTaxAmount;
            
            private global::System.Data.DataColumn columnExtraTaxType;
            
            private global::System.Data.DataColumn columnVendor;
            
            private global::System.Data.DataColumn columnVendorCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderDataTable() {
                this.TableName = "PurchaseOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCNoColumn {
                get {
                    return this.columnDCNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCDateColumn {
                get {
                    return this.columnDCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinCodeColumn {
                get {
                    return this.columnPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTNoColumn {
                get {
                    return this.columnCSTNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TinNoColumn {
                get {
                    return this.columnTinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseColumn {
                get {
                    return this.columnExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EduCessColumn {
                get {
                    return this.columnEduCess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceTaxColumn {
                get {
                    return this.columnServiceTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HEduCessColumn {
                get {
                    return this.columnHEduCess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTColumn {
                get {
                    return this.columnCST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATColumn {
                get {
                    return this.columnAVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraChargesColumn {
                get {
                    return this.columnExtraCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraChargesTypeColumn {
                get {
                    return this.columnExtraChargesType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisColumn {
                get {
                    return this.columnDis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name1Column {
                get {
                    return this.columnName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name2Column {
                get {
                    return this.columnName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name3Column {
                get {
                    return this.columnName3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name4Column {
                get {
                    return this.columnName4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name5Column {
                get {
                    return this.columnName5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name6Column {
                get {
                    return this.columnName6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value1Column {
                get {
                    return this.columnValue1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value2Column {
                get {
                    return this.columnValue2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value3Column {
                get {
                    return this.columnValue3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value4Column {
                get {
                    return this.columnValue4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value5Column {
                get {
                    return this.columnValue5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value6Column {
                get {
                    return this.columnValue6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExCharges2Column {
                get {
                    return this.columnExCharges2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExChargesType2Column {
                get {
                    return this.columnExChargesType2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExCharges3Column {
                get {
                    return this.columnExCharges3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExChargesType3Column {
                get {
                    return this.columnExChargesType3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemSpecColumn {
                get {
                    return this.columnItemSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemSSpecColumn {
                get {
                    return this.columnItemSSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustInvoiceNoColumn {
                get {
                    return this.columnCustInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HSNCodeColumn {
                get {
                    return this.columnHSNCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BONOColumn {
                get {
                    return this.columnBONO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BODateColumn {
                get {
                    return this.columnBODate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShippingAddColumn {
                get {
                    return this.columnShippingAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountAmtColumn {
                get {
                    return this.columnDiscountAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PONoColumn {
                get {
                    return this.columnPONo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PODateColumn {
                get {
                    return this.columnPODate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRNoColumn {
                get {
                    return this.columnLRNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransportNameColumn {
                get {
                    return this.columnTransportName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DestinationColumn {
                get {
                    return this.columnDestination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoadPerNoColumn {
                get {
                    return this.columnRoadPerNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LRDateColumn {
                get {
                    return this.columnLRDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChallanNoColumn {
                get {
                    return this.columnChallanNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Image1Column {
                get {
                    return this.columnImage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocNameColumn {
                get {
                    return this.columnDocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SBCessAmountColumn {
                get {
                    return this.columnSBCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraTaxAmountColumn {
                get {
                    return this.columnExtraTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraTaxTypeColumn {
                get {
                    return this.columnExtraTaxType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorColumn {
                get {
                    return this.columnVendor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow this[int index] {
                get {
                    return ((PurchaseOrderRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowChanging;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowChanged;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowDeleting;
            
            public event PurchaseOrderRowChangeEventHandler PurchaseOrderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseOrderRow(PurchaseOrderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow AddPurchaseOrderRow(
                        string SalesCode, 
                        System.DateTime SalesDate, 
                        string DCNo, 
                        System.DateTime DCDate, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long CustomerID, 
                        string CustomerCode, 
                        string Customer, 
                        string Address2, 
                        string Phone1, 
                        string PinCode, 
                        string City, 
                        string State, 
                        string Narration, 
                        string ItemID, 
                        string TaxClass, 
                        decimal Qty, 
                        decimal Rate, 
                        decimal Amount, 
                        string ItemName, 
                        string UOM, 
                        string CSTNo, 
                        string TinNo, 
                        decimal Excise, 
                        decimal EduCess, 
                        decimal ServiceTax, 
                        decimal HEduCess, 
                        decimal CST, 
                        decimal VAT, 
                        decimal AVAT, 
                        decimal ExtraCharges, 
                        string ExtraChargesType, 
                        decimal Dis, 
                        string Name1, 
                        string Name2, 
                        string Name3, 
                        string Name4, 
                        string Name5, 
                        string Name6, 
                        string Value1, 
                        string Value2, 
                        string Value3, 
                        string Value4, 
                        string Value5, 
                        string Value6, 
                        decimal ExCharges2, 
                        string ExChargesType2, 
                        decimal ExCharges3, 
                        string ExChargesType3, 
                        string ItemSpec, 
                        string ItemSSpec, 
                        string CustInvoiceNo, 
                        string HSNCode, 
                        float BONO, 
                        System.DateTime BODate, 
                        string ShippingAdd, 
                        decimal DiscountAmt, 
                        string Mobile, 
                        string Email, 
                        string PONo, 
                        System.DateTime PODate, 
                        string LRNo, 
                        string TransportName, 
                        string Destination, 
                        string RoadPerNo, 
                        System.DateTime LRDate, 
                        string ChallanNo, 
                        byte[] Image1, 
                        string DocName, 
                        string Address1, 
                        string Currency, 
                        string CurrencyName, 
                        decimal SBCessAmount, 
                        decimal ExtraTaxAmount, 
                        string ExtraTaxType, 
                        string Vendor, 
                        string VendorCode) {
                PurchaseOrderRow rowPurchaseOrderRow = ((PurchaseOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesCode,
                        SalesDate,
                        DCNo,
                        DCDate,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        CustomerID,
                        CustomerCode,
                        Customer,
                        Address2,
                        Phone1,
                        PinCode,
                        City,
                        State,
                        Narration,
                        ItemID,
                        TaxClass,
                        Qty,
                        Rate,
                        Amount,
                        ItemName,
                        UOM,
                        CSTNo,
                        TinNo,
                        Excise,
                        EduCess,
                        ServiceTax,
                        HEduCess,
                        CST,
                        VAT,
                        AVAT,
                        ExtraCharges,
                        ExtraChargesType,
                        Dis,
                        Name1,
                        Name2,
                        Name3,
                        Name4,
                        Name5,
                        Name6,
                        Value1,
                        Value2,
                        Value3,
                        Value4,
                        Value5,
                        Value6,
                        ExCharges2,
                        ExChargesType2,
                        ExCharges3,
                        ExChargesType3,
                        ItemSpec,
                        ItemSSpec,
                        CustInvoiceNo,
                        HSNCode,
                        BONO,
                        BODate,
                        ShippingAdd,
                        DiscountAmt,
                        Mobile,
                        Email,
                        PONo,
                        PODate,
                        LRNo,
                        TransportName,
                        Destination,
                        RoadPerNo,
                        LRDate,
                        ChallanNo,
                        Image1,
                        DocName,
                        Address1,
                        Currency,
                        CurrencyName,
                        SBCessAmount,
                        ExtraTaxAmount,
                        ExtraTaxType,
                        Vendor,
                        VendorCode};
                rowPurchaseOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchaseOrderRow);
                return rowPurchaseOrderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PurchaseOrderDataTable cln = ((PurchaseOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PurchaseOrderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnDCNo = base.Columns["DCNo"];
                this.columnDCDate = base.Columns["DCDate"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPinCode = base.Columns["PinCode"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnNarration = base.Columns["Narration"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnTaxClass = base.Columns["TaxClass"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnUOM = base.Columns["UOM"];
                this.columnCSTNo = base.Columns["CSTNo"];
                this.columnTinNo = base.Columns["TinNo"];
                this.columnExcise = base.Columns["Excise"];
                this.columnEduCess = base.Columns["EduCess"];
                this.columnServiceTax = base.Columns["ServiceTax"];
                this.columnHEduCess = base.Columns["HEduCess"];
                this.columnCST = base.Columns["CST"];
                this.columnVAT = base.Columns["VAT"];
                this.columnAVAT = base.Columns["AVAT"];
                this.columnExtraCharges = base.Columns["ExtraCharges"];
                this.columnExtraChargesType = base.Columns["ExtraChargesType"];
                this.columnDis = base.Columns["Dis"];
                this.columnName1 = base.Columns["Name1"];
                this.columnName2 = base.Columns["Name2"];
                this.columnName3 = base.Columns["Name3"];
                this.columnName4 = base.Columns["Name4"];
                this.columnName5 = base.Columns["Name5"];
                this.columnName6 = base.Columns["Name6"];
                this.columnValue1 = base.Columns["Value1"];
                this.columnValue2 = base.Columns["Value2"];
                this.columnValue3 = base.Columns["Value3"];
                this.columnValue4 = base.Columns["Value4"];
                this.columnValue5 = base.Columns["Value5"];
                this.columnValue6 = base.Columns["Value6"];
                this.columnExCharges2 = base.Columns["ExCharges2"];
                this.columnExChargesType2 = base.Columns["ExChargesType2"];
                this.columnExCharges3 = base.Columns["ExCharges3"];
                this.columnExChargesType3 = base.Columns["ExChargesType3"];
                this.columnItemSpec = base.Columns["ItemSpec"];
                this.columnItemSSpec = base.Columns["ItemSSpec"];
                this.columnCustInvoiceNo = base.Columns["CustInvoiceNo"];
                this.columnHSNCode = base.Columns["HSNCode"];
                this.columnBONO = base.Columns["BONO"];
                this.columnBODate = base.Columns["BODate"];
                this.columnShippingAdd = base.Columns["ShippingAdd"];
                this.columnDiscountAmt = base.Columns["DiscountAmt"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnEmail = base.Columns["Email"];
                this.columnPONo = base.Columns["PONo"];
                this.columnPODate = base.Columns["PODate"];
                this.columnLRNo = base.Columns["LRNo"];
                this.columnTransportName = base.Columns["TransportName"];
                this.columnDestination = base.Columns["Destination"];
                this.columnRoadPerNo = base.Columns["RoadPerNo"];
                this.columnLRDate = base.Columns["LRDate"];
                this.columnChallanNo = base.Columns["ChallanNo"];
                this.columnImage1 = base.Columns["Image1"];
                this.columnDocName = base.Columns["DocName"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
                this.columnSBCessAmount = base.Columns["SBCessAmount"];
                this.columnExtraTaxAmount = base.Columns["ExtraTaxAmount"];
                this.columnExtraTaxType = base.Columns["ExtraTaxType"];
                this.columnVendor = base.Columns["Vendor"];
                this.columnVendorCode = base.Columns["VendorCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnDCNo = new global::System.Data.DataColumn("DCNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNo);
                this.columnDCDate = new global::System.Data.DataColumn("DCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCDate);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPinCode = new global::System.Data.DataColumn("PinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinCode);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnCSTNo = new global::System.Data.DataColumn("CSTNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTNo);
                this.columnTinNo = new global::System.Data.DataColumn("TinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTinNo);
                this.columnExcise = new global::System.Data.DataColumn("Excise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcise);
                this.columnEduCess = new global::System.Data.DataColumn("EduCess", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEduCess);
                this.columnServiceTax = new global::System.Data.DataColumn("ServiceTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceTax);
                this.columnHEduCess = new global::System.Data.DataColumn("HEduCess", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEduCess);
                this.columnCST = new global::System.Data.DataColumn("CST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCST);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnAVAT = new global::System.Data.DataColumn("AVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVAT);
                this.columnExtraCharges = new global::System.Data.DataColumn("ExtraCharges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraCharges);
                this.columnExtraChargesType = new global::System.Data.DataColumn("ExtraChargesType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraChargesType);
                this.columnDis = new global::System.Data.DataColumn("Dis", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDis);
                this.columnName1 = new global::System.Data.DataColumn("Name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName1);
                this.columnName2 = new global::System.Data.DataColumn("Name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName2);
                this.columnName3 = new global::System.Data.DataColumn("Name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName3);
                this.columnName4 = new global::System.Data.DataColumn("Name4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName4);
                this.columnName5 = new global::System.Data.DataColumn("Name5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName5);
                this.columnName6 = new global::System.Data.DataColumn("Name6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName6);
                this.columnValue1 = new global::System.Data.DataColumn("Value1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue1);
                this.columnValue2 = new global::System.Data.DataColumn("Value2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue2);
                this.columnValue3 = new global::System.Data.DataColumn("Value3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue3);
                this.columnValue4 = new global::System.Data.DataColumn("Value4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue4);
                this.columnValue5 = new global::System.Data.DataColumn("Value5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue5);
                this.columnValue6 = new global::System.Data.DataColumn("Value6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue6);
                this.columnExCharges2 = new global::System.Data.DataColumn("ExCharges2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExCharges2);
                this.columnExChargesType2 = new global::System.Data.DataColumn("ExChargesType2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExChargesType2);
                this.columnExCharges3 = new global::System.Data.DataColumn("ExCharges3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExCharges3);
                this.columnExChargesType3 = new global::System.Data.DataColumn("ExChargesType3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExChargesType3);
                this.columnItemSpec = new global::System.Data.DataColumn("ItemSpec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemSpec);
                this.columnItemSSpec = new global::System.Data.DataColumn("ItemSSpec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemSSpec);
                this.columnCustInvoiceNo = new global::System.Data.DataColumn("CustInvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustInvoiceNo);
                this.columnHSNCode = new global::System.Data.DataColumn("HSNCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHSNCode);
                this.columnBONO = new global::System.Data.DataColumn("BONO", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBONO);
                this.columnBODate = new global::System.Data.DataColumn("BODate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBODate);
                this.columnShippingAdd = new global::System.Data.DataColumn("ShippingAdd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingAdd);
                this.columnDiscountAmt = new global::System.Data.DataColumn("DiscountAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmt);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnPONo = new global::System.Data.DataColumn("PONo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPONo);
                this.columnPODate = new global::System.Data.DataColumn("PODate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPODate);
                this.columnLRNo = new global::System.Data.DataColumn("LRNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRNo);
                this.columnTransportName = new global::System.Data.DataColumn("TransportName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransportName);
                this.columnDestination = new global::System.Data.DataColumn("Destination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestination);
                this.columnRoadPerNo = new global::System.Data.DataColumn("RoadPerNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoadPerNo);
                this.columnLRDate = new global::System.Data.DataColumn("LRDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRDate);
                this.columnChallanNo = new global::System.Data.DataColumn("ChallanNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChallanNo);
                this.columnImage1 = new global::System.Data.DataColumn("Image1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage1);
                this.columnDocName = new global::System.Data.DataColumn("DocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocName);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.columnSBCessAmount = new global::System.Data.DataColumn("SBCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBCessAmount);
                this.columnExtraTaxAmount = new global::System.Data.DataColumn("ExtraTaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraTaxAmount);
                this.columnExtraTaxType = new global::System.Data.DataColumn("ExtraTaxType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraTaxType);
                this.columnVendor = new global::System.Data.DataColumn("Vendor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendor);
                this.columnVendorCode = new global::System.Data.DataColumn("VendorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow NewPurchaseOrderRow() {
                return ((PurchaseOrderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PurchaseOrderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PurchaseOrderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseOrderRowChanged != null)) {
                    this.PurchaseOrderRowChanged(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseOrderRowChanging != null)) {
                    this.PurchaseOrderRowChanging(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseOrderRowDeleted != null)) {
                    this.PurchaseOrderRowDeleted(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseOrderRowDeleting != null)) {
                    this.PurchaseOrderRowDeleting(this, new PurchaseOrderRowChangeEvent(((PurchaseOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseOrderRow(PurchaseOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class salesDataTable : global::System.Data.TypedTableBase<salesRow> {
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnDCNo;
            
            private global::System.Data.DataColumn columnDCDate;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnPinCode;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnUOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public salesDataTable() {
                this.TableName = "sales";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal salesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected salesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCNoColumn {
                get {
                    return this.columnDCNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCDateColumn {
                get {
                    return this.columnDCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinCodeColumn {
                get {
                    return this.columnPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public salesRow this[int index] {
                get {
                    return ((salesRow)(this.Rows[index]));
                }
            }
            
            public event salesRowChangeEventHandler salesRowChanging;
            
            public event salesRowChangeEventHandler salesRowChanged;
            
            public event salesRowChangeEventHandler salesRowDeleting;
            
            public event salesRowChangeEventHandler salesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddsalesRow(salesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public salesRow AddsalesRow(
                        string SalesCode, 
                        System.DateTime SalesDate, 
                        string DCNo, 
                        System.DateTime DCDate, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long CustomerID, 
                        string CustomerCode, 
                        string Customer, 
                        string Address1, 
                        string Address2, 
                        string Phone1, 
                        string PinCode, 
                        string City, 
                        string State, 
                        string Narration, 
                        long ItemID, 
                        string TaxClass, 
                        decimal Qty, 
                        decimal Rate, 
                        decimal Amount, 
                        string ItemName, 
                        string UOM) {
                salesRow rowsalesRow = ((salesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesCode,
                        SalesDate,
                        DCNo,
                        DCDate,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        CustomerID,
                        CustomerCode,
                        Customer,
                        Address1,
                        Address2,
                        Phone1,
                        PinCode,
                        City,
                        State,
                        Narration,
                        ItemID,
                        TaxClass,
                        Qty,
                        Rate,
                        Amount,
                        ItemName,
                        UOM};
                rowsalesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsalesRow);
                return rowsalesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                salesDataTable cln = ((salesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new salesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnDCNo = base.Columns["DCNo"];
                this.columnDCDate = base.Columns["DCDate"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPinCode = base.Columns["PinCode"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnNarration = base.Columns["Narration"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnTaxClass = base.Columns["TaxClass"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnUOM = base.Columns["UOM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnDCNo = new global::System.Data.DataColumn("DCNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNo);
                this.columnDCDate = new global::System.Data.DataColumn("DCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCDate);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPinCode = new global::System.Data.DataColumn("PinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinCode);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public salesRow NewsalesRow() {
                return ((salesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new salesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(salesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.salesRowChanged != null)) {
                    this.salesRowChanged(this, new salesRowChangeEvent(((salesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.salesRowChanging != null)) {
                    this.salesRowChanging(this, new salesRowChangeEvent(((salesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.salesRowDeleted != null)) {
                    this.salesRowDeleted(this, new salesRowChangeEvent(((salesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.salesRowDeleting != null)) {
                    this.salesRowDeleting(this, new salesRowChangeEvent(((salesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovesalesRow(salesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "salesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesInvoicevDataTable : global::System.Data.TypedTableBase<SalesInvoicevRow> {
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnSaleID;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnDateOfJourney;
            
            private global::System.Data.DataColumn columnClosingDate;
            
            private global::System.Data.DataColumn columnVoucherNo;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnPhoneNo;
            
            private global::System.Data.DataColumn columnMin_km;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnPinCode;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnRateType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPlaceOfJourney;
            
            private global::System.Data.DataColumn columnKmPerDays;
            
            private global::System.Data.DataColumn columnRates;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnAdvancePayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevDataTable() {
                this.TableName = "SalesInvoicev";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoicevDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesInvoicevDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIDColumn {
                get {
                    return this.columnSaleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfJourneyColumn {
                get {
                    return this.columnDateOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosingDateColumn {
                get {
                    return this.columnClosingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherNoColumn {
                get {
                    return this.columnVoucherNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNoColumn {
                get {
                    return this.columnPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Min_kmColumn {
                get {
                    return this.columnMin_km;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinCodeColumn {
                get {
                    return this.columnPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateTypeColumn {
                get {
                    return this.columnRateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceOfJourneyColumn {
                get {
                    return this.columnPlaceOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KmPerDaysColumn {
                get {
                    return this.columnKmPerDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatesColumn {
                get {
                    return this.columnRates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvancePaymentColumn {
                get {
                    return this.columnAdvancePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevRow this[int index] {
                get {
                    return ((SalesInvoicevRow)(this.Rows[index]));
                }
            }
            
            public event SalesInvoicevRowChangeEventHandler SalesInvoicevRowChanging;
            
            public event SalesInvoicevRowChangeEventHandler SalesInvoicevRowChanged;
            
            public event SalesInvoicevRowChangeEventHandler SalesInvoicevRowDeleting;
            
            public event SalesInvoicevRowChangeEventHandler SalesInvoicevRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesInvoicevRow(SalesInvoicevRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevRow AddSalesInvoicevRow(
                        int SrNo, 
                        long SaleID, 
                        string SalesCode, 
                        System.DateTime DateOfJourney, 
                        System.DateTime ClosingDate, 
                        string VoucherNo, 
                        string Remarks, 
                        string EngagedFor, 
                        string Address, 
                        string PhoneNo, 
                        decimal Min_km, 
                        string Customer, 
                        string Address1, 
                        string Address2, 
                        string Phone1, 
                        string PinCode, 
                        string City, 
                        string State, 
                        string RateType, 
                        string Description, 
                        string PlaceOfJourney, 
                        decimal KmPerDays, 
                        decimal Rates, 
                        decimal TotalAmount, 
                        decimal AdvancePayment) {
                SalesInvoicevRow rowSalesInvoicevRow = ((SalesInvoicevRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SrNo,
                        SaleID,
                        SalesCode,
                        DateOfJourney,
                        ClosingDate,
                        VoucherNo,
                        Remarks,
                        EngagedFor,
                        Address,
                        PhoneNo,
                        Min_km,
                        Customer,
                        Address1,
                        Address2,
                        Phone1,
                        PinCode,
                        City,
                        State,
                        RateType,
                        Description,
                        PlaceOfJourney,
                        KmPerDays,
                        Rates,
                        TotalAmount,
                        AdvancePayment};
                rowSalesInvoicevRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesInvoicevRow);
                return rowSalesInvoicevRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesInvoicevDataTable cln = ((SalesInvoicevDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesInvoicevDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSrNo = base.Columns["SrNo"];
                this.columnSaleID = base.Columns["SaleID"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnDateOfJourney = base.Columns["DateOfJourney"];
                this.columnClosingDate = base.Columns["ClosingDate"];
                this.columnVoucherNo = base.Columns["VoucherNo"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnAddress = base.Columns["Address"];
                this.columnPhoneNo = base.Columns["PhoneNo"];
                this.columnMin_km = base.Columns["Min_km"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPinCode = base.Columns["PinCode"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnRateType = base.Columns["RateType"];
                this.columnDescription = base.Columns["Description"];
                this.columnPlaceOfJourney = base.Columns["PlaceOfJourney"];
                this.columnKmPerDays = base.Columns["KmPerDays"];
                this.columnRates = base.Columns["Rates"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnAdvancePayment = base.Columns["AdvancePayment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnSaleID = new global::System.Data.DataColumn("SaleID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleID);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnDateOfJourney = new global::System.Data.DataColumn("DateOfJourney", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJourney);
                this.columnClosingDate = new global::System.Data.DataColumn("ClosingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingDate);
                this.columnVoucherNo = new global::System.Data.DataColumn("VoucherNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherNo);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnPhoneNo = new global::System.Data.DataColumn("PhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNo);
                this.columnMin_km = new global::System.Data.DataColumn("Min_km", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMin_km);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPinCode = new global::System.Data.DataColumn("PinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinCode);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnRateType = new global::System.Data.DataColumn("RateType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPlaceOfJourney = new global::System.Data.DataColumn("PlaceOfJourney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceOfJourney);
                this.columnKmPerDays = new global::System.Data.DataColumn("KmPerDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKmPerDays);
                this.columnRates = new global::System.Data.DataColumn("Rates", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRates);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnAdvancePayment = new global::System.Data.DataColumn("AdvancePayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancePayment);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevRow NewSalesInvoicevRow() {
                return ((SalesInvoicevRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesInvoicevRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesInvoicevRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesInvoicevRowChanged != null)) {
                    this.SalesInvoicevRowChanged(this, new SalesInvoicevRowChangeEvent(((SalesInvoicevRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesInvoicevRowChanging != null)) {
                    this.SalesInvoicevRowChanging(this, new SalesInvoicevRowChangeEvent(((SalesInvoicevRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesInvoicevRowDeleted != null)) {
                    this.SalesInvoicevRowDeleted(this, new SalesInvoicevRowChangeEvent(((SalesInvoicevRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesInvoicevRowDeleting != null)) {
                    this.SalesInvoicevRowDeleting(this, new SalesInvoicevRowChangeEvent(((SalesInvoicevRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesInvoicevRow(SalesInvoicevRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesInvoicevDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesInvoicevidhiDataTable : global::System.Data.TypedTableBase<SalesInvoicevidhiRow> {
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnSaleID;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnDateOfJourney;
            
            private global::System.Data.DataColumn columnClosingDate;
            
            private global::System.Data.DataColumn columnVoucherNo;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnPhoneNo;
            
            private global::System.Data.DataColumn columnMin_km;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnPinCode;
            
            private global::System.Data.DataColumn columnCarNumber;
            
            private global::System.Data.DataColumn columnIsAC;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnRateType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPlaceOfJourney;
            
            private global::System.Data.DataColumn columnKmPerDays;
            
            private global::System.Data.DataColumn columnRates;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnAdvancePayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevidhiDataTable() {
                this.TableName = "SalesInvoicevidhi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoicevidhiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesInvoicevidhiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIDColumn {
                get {
                    return this.columnSaleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfJourneyColumn {
                get {
                    return this.columnDateOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosingDateColumn {
                get {
                    return this.columnClosingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherNoColumn {
                get {
                    return this.columnVoucherNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNoColumn {
                get {
                    return this.columnPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Min_kmColumn {
                get {
                    return this.columnMin_km;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinCodeColumn {
                get {
                    return this.columnPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarNumberColumn {
                get {
                    return this.columnCarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsACColumn {
                get {
                    return this.columnIsAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateTypeColumn {
                get {
                    return this.columnRateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceOfJourneyColumn {
                get {
                    return this.columnPlaceOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KmPerDaysColumn {
                get {
                    return this.columnKmPerDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatesColumn {
                get {
                    return this.columnRates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvancePaymentColumn {
                get {
                    return this.columnAdvancePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevidhiRow this[int index] {
                get {
                    return ((SalesInvoicevidhiRow)(this.Rows[index]));
                }
            }
            
            public event SalesInvoicevidhiRowChangeEventHandler SalesInvoicevidhiRowChanging;
            
            public event SalesInvoicevidhiRowChangeEventHandler SalesInvoicevidhiRowChanged;
            
            public event SalesInvoicevidhiRowChangeEventHandler SalesInvoicevidhiRowDeleting;
            
            public event SalesInvoicevidhiRowChangeEventHandler SalesInvoicevidhiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesInvoicevidhiRow(SalesInvoicevidhiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevidhiRow AddSalesInvoicevidhiRow(
                        int SrNo, 
                        long SaleID, 
                        string SalesCode, 
                        System.DateTime DateOfJourney, 
                        System.DateTime ClosingDate, 
                        string VoucherNo, 
                        string Remarks, 
                        string EngagedFor, 
                        string Address, 
                        string PhoneNo, 
                        decimal Min_km, 
                        string Customer, 
                        string Address1, 
                        string Address2, 
                        string Phone1, 
                        string PinCode, 
                        string CarNumber, 
                        bool IsAC, 
                        string City, 
                        string State, 
                        string RateType, 
                        string Description, 
                        string PlaceOfJourney, 
                        decimal KmPerDays, 
                        decimal Rates, 
                        decimal TotalAmount, 
                        decimal AdvancePayment) {
                SalesInvoicevidhiRow rowSalesInvoicevidhiRow = ((SalesInvoicevidhiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SrNo,
                        SaleID,
                        SalesCode,
                        DateOfJourney,
                        ClosingDate,
                        VoucherNo,
                        Remarks,
                        EngagedFor,
                        Address,
                        PhoneNo,
                        Min_km,
                        Customer,
                        Address1,
                        Address2,
                        Phone1,
                        PinCode,
                        CarNumber,
                        IsAC,
                        City,
                        State,
                        RateType,
                        Description,
                        PlaceOfJourney,
                        KmPerDays,
                        Rates,
                        TotalAmount,
                        AdvancePayment};
                rowSalesInvoicevidhiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesInvoicevidhiRow);
                return rowSalesInvoicevidhiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesInvoicevidhiDataTable cln = ((SalesInvoicevidhiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesInvoicevidhiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSrNo = base.Columns["SrNo"];
                this.columnSaleID = base.Columns["SaleID"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnDateOfJourney = base.Columns["DateOfJourney"];
                this.columnClosingDate = base.Columns["ClosingDate"];
                this.columnVoucherNo = base.Columns["VoucherNo"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnAddress = base.Columns["Address"];
                this.columnPhoneNo = base.Columns["PhoneNo"];
                this.columnMin_km = base.Columns["Min_km"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPinCode = base.Columns["PinCode"];
                this.columnCarNumber = base.Columns["CarNumber"];
                this.columnIsAC = base.Columns["IsAC"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnRateType = base.Columns["RateType"];
                this.columnDescription = base.Columns["Description"];
                this.columnPlaceOfJourney = base.Columns["PlaceOfJourney"];
                this.columnKmPerDays = base.Columns["KmPerDays"];
                this.columnRates = base.Columns["Rates"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnAdvancePayment = base.Columns["AdvancePayment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnSaleID = new global::System.Data.DataColumn("SaleID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleID);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnDateOfJourney = new global::System.Data.DataColumn("DateOfJourney", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJourney);
                this.columnClosingDate = new global::System.Data.DataColumn("ClosingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingDate);
                this.columnVoucherNo = new global::System.Data.DataColumn("VoucherNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherNo);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnPhoneNo = new global::System.Data.DataColumn("PhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNo);
                this.columnMin_km = new global::System.Data.DataColumn("Min_km", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMin_km);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPinCode = new global::System.Data.DataColumn("PinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinCode);
                this.columnCarNumber = new global::System.Data.DataColumn("CarNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarNumber);
                this.columnIsAC = new global::System.Data.DataColumn("IsAC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAC);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnRateType = new global::System.Data.DataColumn("RateType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPlaceOfJourney = new global::System.Data.DataColumn("PlaceOfJourney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceOfJourney);
                this.columnKmPerDays = new global::System.Data.DataColumn("KmPerDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKmPerDays);
                this.columnRates = new global::System.Data.DataColumn("Rates", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRates);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnAdvancePayment = new global::System.Data.DataColumn("AdvancePayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancePayment);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevidhiRow NewSalesInvoicevidhiRow() {
                return ((SalesInvoicevidhiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesInvoicevidhiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesInvoicevidhiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesInvoicevidhiRowChanged != null)) {
                    this.SalesInvoicevidhiRowChanged(this, new SalesInvoicevidhiRowChangeEvent(((SalesInvoicevidhiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesInvoicevidhiRowChanging != null)) {
                    this.SalesInvoicevidhiRowChanging(this, new SalesInvoicevidhiRowChangeEvent(((SalesInvoicevidhiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesInvoicevidhiRowDeleted != null)) {
                    this.SalesInvoicevidhiRowDeleted(this, new SalesInvoicevidhiRowChangeEvent(((SalesInvoicevidhiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesInvoicevidhiRowDeleting != null)) {
                    this.SalesInvoicevidhiRowDeleting(this, new SalesInvoicevidhiRowChangeEvent(((SalesInvoicevidhiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesInvoicevidhiRow(SalesInvoicevidhiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesInvoicevidhiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesInvoiceviDataTable : global::System.Data.TypedTableBase<SalesInvoiceviRow> {
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnSaleID;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnDateOfJourney;
            
            private global::System.Data.DataColumn columnClosingDate;
            
            private global::System.Data.DataColumn columnVoucherNo;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnPhoneNo;
            
            private global::System.Data.DataColumn columnMin_km;
            
            private global::System.Data.DataColumn columnCustomer;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnPinCode;
            
            private global::System.Data.DataColumn columnCarNumber;
            
            private global::System.Data.DataColumn columnCarType;
            
            private global::System.Data.DataColumn columnIsAC;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnRateType;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnPlaceOfJourney;
            
            private global::System.Data.DataColumn columnKmPerDays;
            
            private global::System.Data.DataColumn columnRates;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnAdvancePayment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceviDataTable() {
                this.TableName = "SalesInvoicevi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoiceviDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesInvoiceviDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIDColumn {
                get {
                    return this.columnSaleID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfJourneyColumn {
                get {
                    return this.columnDateOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosingDateColumn {
                get {
                    return this.columnClosingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherNoColumn {
                get {
                    return this.columnVoucherNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNoColumn {
                get {
                    return this.columnPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Min_kmColumn {
                get {
                    return this.columnMin_km;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerColumn {
                get {
                    return this.columnCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinCodeColumn {
                get {
                    return this.columnPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarNumberColumn {
                get {
                    return this.columnCarNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeColumn {
                get {
                    return this.columnCarType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsACColumn {
                get {
                    return this.columnIsAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateTypeColumn {
                get {
                    return this.columnRateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceOfJourneyColumn {
                get {
                    return this.columnPlaceOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KmPerDaysColumn {
                get {
                    return this.columnKmPerDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatesColumn {
                get {
                    return this.columnRates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvancePaymentColumn {
                get {
                    return this.columnAdvancePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceviRow this[int index] {
                get {
                    return ((SalesInvoiceviRow)(this.Rows[index]));
                }
            }
            
            public event SalesInvoiceviRowChangeEventHandler SalesInvoiceviRowChanging;
            
            public event SalesInvoiceviRowChangeEventHandler SalesInvoiceviRowChanged;
            
            public event SalesInvoiceviRowChangeEventHandler SalesInvoiceviRowDeleting;
            
            public event SalesInvoiceviRowChangeEventHandler SalesInvoiceviRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesInvoiceviRow(SalesInvoiceviRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceviRow AddSalesInvoiceviRow(
                        int SrNo, 
                        long SaleID, 
                        string SalesCode, 
                        System.DateTime DateOfJourney, 
                        System.DateTime ClosingDate, 
                        string VoucherNo, 
                        string Remarks, 
                        string EngagedFor, 
                        string Address, 
                        string PhoneNo, 
                        decimal Min_km, 
                        string Customer, 
                        string Address1, 
                        string Address2, 
                        string Phone1, 
                        string PinCode, 
                        string CarNumber, 
                        string CarType, 
                        bool IsAC, 
                        string City, 
                        string State, 
                        string RateType, 
                        string Description, 
                        string PlaceOfJourney, 
                        decimal KmPerDays, 
                        decimal Rates, 
                        decimal TotalAmount, 
                        decimal AdvancePayment) {
                SalesInvoiceviRow rowSalesInvoiceviRow = ((SalesInvoiceviRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SrNo,
                        SaleID,
                        SalesCode,
                        DateOfJourney,
                        ClosingDate,
                        VoucherNo,
                        Remarks,
                        EngagedFor,
                        Address,
                        PhoneNo,
                        Min_km,
                        Customer,
                        Address1,
                        Address2,
                        Phone1,
                        PinCode,
                        CarNumber,
                        CarType,
                        IsAC,
                        City,
                        State,
                        RateType,
                        Description,
                        PlaceOfJourney,
                        KmPerDays,
                        Rates,
                        TotalAmount,
                        AdvancePayment};
                rowSalesInvoiceviRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesInvoiceviRow);
                return rowSalesInvoiceviRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesInvoiceviDataTable cln = ((SalesInvoiceviDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesInvoiceviDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSrNo = base.Columns["SrNo"];
                this.columnSaleID = base.Columns["SaleID"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnDateOfJourney = base.Columns["DateOfJourney"];
                this.columnClosingDate = base.Columns["ClosingDate"];
                this.columnVoucherNo = base.Columns["VoucherNo"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnAddress = base.Columns["Address"];
                this.columnPhoneNo = base.Columns["PhoneNo"];
                this.columnMin_km = base.Columns["Min_km"];
                this.columnCustomer = base.Columns["Customer"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPinCode = base.Columns["PinCode"];
                this.columnCarNumber = base.Columns["CarNumber"];
                this.columnCarType = base.Columns["CarType"];
                this.columnIsAC = base.Columns["IsAC"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnRateType = base.Columns["RateType"];
                this.columnDescription = base.Columns["Description"];
                this.columnPlaceOfJourney = base.Columns["PlaceOfJourney"];
                this.columnKmPerDays = base.Columns["KmPerDays"];
                this.columnRates = base.Columns["Rates"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnAdvancePayment = base.Columns["AdvancePayment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnSaleID = new global::System.Data.DataColumn("SaleID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleID);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnDateOfJourney = new global::System.Data.DataColumn("DateOfJourney", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJourney);
                this.columnClosingDate = new global::System.Data.DataColumn("ClosingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingDate);
                this.columnVoucherNo = new global::System.Data.DataColumn("VoucherNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherNo);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnPhoneNo = new global::System.Data.DataColumn("PhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNo);
                this.columnMin_km = new global::System.Data.DataColumn("Min_km", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMin_km);
                this.columnCustomer = new global::System.Data.DataColumn("Customer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomer);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPinCode = new global::System.Data.DataColumn("PinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinCode);
                this.columnCarNumber = new global::System.Data.DataColumn("CarNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarNumber);
                this.columnCarType = new global::System.Data.DataColumn("CarType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarType);
                this.columnIsAC = new global::System.Data.DataColumn("IsAC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAC);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnRateType = new global::System.Data.DataColumn("RateType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateType);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnPlaceOfJourney = new global::System.Data.DataColumn("PlaceOfJourney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceOfJourney);
                this.columnKmPerDays = new global::System.Data.DataColumn("KmPerDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKmPerDays);
                this.columnRates = new global::System.Data.DataColumn("Rates", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRates);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnAdvancePayment = new global::System.Data.DataColumn("AdvancePayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancePayment);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceviRow NewSalesInvoiceviRow() {
                return ((SalesInvoiceviRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesInvoiceviRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesInvoiceviRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesInvoiceviRowChanged != null)) {
                    this.SalesInvoiceviRowChanged(this, new SalesInvoiceviRowChangeEvent(((SalesInvoiceviRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesInvoiceviRowChanging != null)) {
                    this.SalesInvoiceviRowChanging(this, new SalesInvoiceviRowChangeEvent(((SalesInvoiceviRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesInvoiceviRowDeleted != null)) {
                    this.SalesInvoiceviRowDeleted(this, new SalesInvoiceviRowChangeEvent(((SalesInvoiceviRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesInvoiceviRowDeleting != null)) {
                    this.SalesInvoiceviRowDeleting(this, new SalesInvoiceviRowChangeEvent(((SalesInvoiceviRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesInvoiceviRow(SalesInvoiceviRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesInvoiceviDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DriveDutyVoucherDataTable : global::System.Data.TypedTableBase<DriveDutyVoucherRow> {
            
            private global::System.Data.DataColumn columnBookingId;
            
            private global::System.Data.DataColumn columnBookingCode;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnPhoneNo;
            
            private global::System.Data.DataColumn columnPlaceOfJourney;
            
            private global::System.Data.DataColumn columnVoucherNo;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnCarTypeID;
            
            private global::System.Data.DataColumn columnIsAC;
            
            private global::System.Data.DataColumn columnRateType;
            
            private global::System.Data.DataColumn columnRatePerKMs;
            
            private global::System.Data.DataColumn columnRatePerHrs;
            
            private global::System.Data.DataColumn columnFixedCharge;
            
            private global::System.Data.DataColumn columnVendorRate;
            
            private global::System.Data.DataColumn columnTotalPayment;
            
            private global::System.Data.DataColumn columnAdvancePayment;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columncartype;
            
            private global::System.Data.DataColumn columnVehical;
            
            private global::System.Data.DataColumn columnSeating;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnStartingTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DriveDutyVoucherDataTable() {
                this.TableName = "DriveDutyVoucher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DriveDutyVoucherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DriveDutyVoucherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingIdColumn {
                get {
                    return this.columnBookingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingCodeColumn {
                get {
                    return this.columnBookingCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNoColumn {
                get {
                    return this.columnPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceOfJourneyColumn {
                get {
                    return this.columnPlaceOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherNoColumn {
                get {
                    return this.columnVoucherNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeIDColumn {
                get {
                    return this.columnCarTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsACColumn {
                get {
                    return this.columnIsAC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateTypeColumn {
                get {
                    return this.columnRateType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatePerKMsColumn {
                get {
                    return this.columnRatePerKMs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RatePerHrsColumn {
                get {
                    return this.columnRatePerHrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FixedChargeColumn {
                get {
                    return this.columnFixedCharge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorRateColumn {
                get {
                    return this.columnVendorRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPaymentColumn {
                get {
                    return this.columnTotalPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvancePaymentColumn {
                get {
                    return this.columnAdvancePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cartypeColumn {
                get {
                    return this.columncartype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicalColumn {
                get {
                    return this.columnVehical;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SeatingColumn {
                get {
                    return this.columnSeating;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartingTimeColumn {
                get {
                    return this.columnStartingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DriveDutyVoucherRow this[int index] {
                get {
                    return ((DriveDutyVoucherRow)(this.Rows[index]));
                }
            }
            
            public event DriveDutyVoucherRowChangeEventHandler DriveDutyVoucherRowChanging;
            
            public event DriveDutyVoucherRowChangeEventHandler DriveDutyVoucherRowChanged;
            
            public event DriveDutyVoucherRowChangeEventHandler DriveDutyVoucherRowDeleting;
            
            public event DriveDutyVoucherRowChangeEventHandler DriveDutyVoucherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDriveDutyVoucherRow(DriveDutyVoucherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DriveDutyVoucherRow AddDriveDutyVoucherRow(
                        long BookingId, 
                        string BookingCode, 
                        long CustomerID, 
                        string EngagedFor, 
                        string Address, 
                        string PhoneNo, 
                        string PlaceOfJourney, 
                        string VoucherNo, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        long VendorID, 
                        long CarTypeID, 
                        bool IsAC, 
                        int RateType, 
                        decimal RatePerKMs, 
                        decimal RatePerHrs, 
                        decimal FixedCharge, 
                        decimal VendorRate, 
                        decimal TotalPayment, 
                        decimal AdvancePayment, 
                        string Remarks, 
                        string VendorName, 
                        string CustomerName, 
                        string Phone1, 
                        string ContactPerson, 
                        string Address1, 
                        string cartype, 
                        string Vehical, 
                        string Seating, 
                        string Address2, 
                        string CityName, 
                        string StartingTime, 
                        string EndTime) {
                DriveDutyVoucherRow rowDriveDutyVoucherRow = ((DriveDutyVoucherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BookingId,
                        BookingCode,
                        CustomerID,
                        EngagedFor,
                        Address,
                        PhoneNo,
                        PlaceOfJourney,
                        VoucherNo,
                        StartDate,
                        EndDate,
                        VendorID,
                        CarTypeID,
                        IsAC,
                        RateType,
                        RatePerKMs,
                        RatePerHrs,
                        FixedCharge,
                        VendorRate,
                        TotalPayment,
                        AdvancePayment,
                        Remarks,
                        VendorName,
                        CustomerName,
                        Phone1,
                        ContactPerson,
                        Address1,
                        cartype,
                        Vehical,
                        Seating,
                        Address2,
                        CityName,
                        StartingTime,
                        EndTime};
                rowDriveDutyVoucherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDriveDutyVoucherRow);
                return rowDriveDutyVoucherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DriveDutyVoucherDataTable cln = ((DriveDutyVoucherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DriveDutyVoucherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBookingId = base.Columns["BookingId"];
                this.columnBookingCode = base.Columns["BookingCode"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnAddress = base.Columns["Address"];
                this.columnPhoneNo = base.Columns["PhoneNo"];
                this.columnPlaceOfJourney = base.Columns["PlaceOfJourney"];
                this.columnVoucherNo = base.Columns["VoucherNo"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnVendorID = base.Columns["VendorID"];
                this.columnCarTypeID = base.Columns["CarTypeID"];
                this.columnIsAC = base.Columns["IsAC"];
                this.columnRateType = base.Columns["RateType"];
                this.columnRatePerKMs = base.Columns["RatePerKMs"];
                this.columnRatePerHrs = base.Columns["RatePerHrs"];
                this.columnFixedCharge = base.Columns["FixedCharge"];
                this.columnVendorRate = base.Columns["VendorRate"];
                this.columnTotalPayment = base.Columns["TotalPayment"];
                this.columnAdvancePayment = base.Columns["AdvancePayment"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnContactPerson = base.Columns["ContactPerson"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columncartype = base.Columns["cartype"];
                this.columnVehical = base.Columns["Vehical"];
                this.columnSeating = base.Columns["Seating"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCityName = base.Columns["CityName"];
                this.columnStartingTime = base.Columns["StartingTime"];
                this.columnEndTime = base.Columns["EndTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBookingId = new global::System.Data.DataColumn("BookingId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingId);
                this.columnBookingCode = new global::System.Data.DataColumn("BookingCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingCode);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnPhoneNo = new global::System.Data.DataColumn("PhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNo);
                this.columnPlaceOfJourney = new global::System.Data.DataColumn("PlaceOfJourney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceOfJourney);
                this.columnVoucherNo = new global::System.Data.DataColumn("VoucherNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherNo);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnCarTypeID = new global::System.Data.DataColumn("CarTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarTypeID);
                this.columnIsAC = new global::System.Data.DataColumn("IsAC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAC);
                this.columnRateType = new global::System.Data.DataColumn("RateType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRateType);
                this.columnRatePerKMs = new global::System.Data.DataColumn("RatePerKMs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatePerKMs);
                this.columnRatePerHrs = new global::System.Data.DataColumn("RatePerHrs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatePerHrs);
                this.columnFixedCharge = new global::System.Data.DataColumn("FixedCharge", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixedCharge);
                this.columnVendorRate = new global::System.Data.DataColumn("VendorRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorRate);
                this.columnTotalPayment = new global::System.Data.DataColumn("TotalPayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPayment);
                this.columnAdvancePayment = new global::System.Data.DataColumn("AdvancePayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancePayment);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columncartype = new global::System.Data.DataColumn("cartype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncartype);
                this.columnVehical = new global::System.Data.DataColumn("Vehical", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehical);
                this.columnSeating = new global::System.Data.DataColumn("Seating", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeating);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnStartingTime = new global::System.Data.DataColumn("StartingTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartingTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DriveDutyVoucherRow NewDriveDutyVoucherRow() {
                return ((DriveDutyVoucherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DriveDutyVoucherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DriveDutyVoucherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DriveDutyVoucherRowChanged != null)) {
                    this.DriveDutyVoucherRowChanged(this, new DriveDutyVoucherRowChangeEvent(((DriveDutyVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DriveDutyVoucherRowChanging != null)) {
                    this.DriveDutyVoucherRowChanging(this, new DriveDutyVoucherRowChangeEvent(((DriveDutyVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DriveDutyVoucherRowDeleted != null)) {
                    this.DriveDutyVoucherRowDeleted(this, new DriveDutyVoucherRowChangeEvent(((DriveDutyVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DriveDutyVoucherRowDeleting != null)) {
                    this.DriveDutyVoucherRowDeleting(this, new DriveDutyVoucherRowChangeEvent(((DriveDutyVoucherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDriveDutyVoucherRow(DriveDutyVoucherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DriveDutyVoucherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QuotationDataTable : global::System.Data.TypedTableBase<QuotationRow> {
            
            private global::System.Data.DataColumn columnQuotationId;
            
            private global::System.Data.DataColumn columnLeadId;
            
            private global::System.Data.DataColumn columnQDate;
            
            private global::System.Data.DataColumn columnQPrice;
            
            private global::System.Data.DataColumn columnAdvAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnSubject;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnFYID;
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnRefno;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnTaxName;
            
            private global::System.Data.DataColumn columnLeadNo;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerAddr;
            
            private global::System.Data.DataColumn columnLeadDate;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnRefNo1;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnContactName;
            
            private global::System.Data.DataColumn columnNote;
            
            private global::System.Data.DataColumn columnSpecification;
            
            private global::System.Data.DataColumn columnQuotationNo;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnReference;
            
            private global::System.Data.DataColumn columnDisCount;
            
            private global::System.Data.DataColumn columnQItemDesc;
            
            private global::System.Data.DataColumn columnItemNetAmount;
            
            private global::System.Data.DataColumn columnDocName;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnImage;
            
            private global::System.Data.DataColumn columnImage1;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            private global::System.Data.DataColumn columnSBCessAmount;
            
            private global::System.Data.DataColumn columnExtraTaxAmount;
            
            private global::System.Data.DataColumn columnExtraTaxType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuotationDataTable() {
                this.TableName = "Quotation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QuotationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected QuotationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuotationIdColumn {
                get {
                    return this.columnQuotationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadIdColumn {
                get {
                    return this.columnLeadId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QDateColumn {
                get {
                    return this.columnQDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QPriceColumn {
                get {
                    return this.columnQPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvAmountColumn {
                get {
                    return this.columnAdvAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SubjectColumn {
                get {
                    return this.columnSubject;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FYIDColumn {
                get {
                    return this.columnFYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefnoColumn {
                get {
                    return this.columnRefno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxNameColumn {
                get {
                    return this.columnTaxName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadNoColumn {
                get {
                    return this.columnLeadNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerAddrColumn {
                get {
                    return this.columnCustomerAddr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadDateColumn {
                get {
                    return this.columnLeadDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RefNo1Column {
                get {
                    return this.columnRefNo1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecificationColumn {
                get {
                    return this.columnSpecification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuotationNoColumn {
                get {
                    return this.columnQuotationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisCountColumn {
                get {
                    return this.columnDisCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QItemDescColumn {
                get {
                    return this.columnQItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNetAmountColumn {
                get {
                    return this.columnItemNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocNameColumn {
                get {
                    return this.columnDocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImageColumn {
                get {
                    return this.columnImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Image1Column {
                get {
                    return this.columnImage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SBCessAmountColumn {
                get {
                    return this.columnSBCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraTaxAmountColumn {
                get {
                    return this.columnExtraTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraTaxTypeColumn {
                get {
                    return this.columnExtraTaxType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuotationRow this[int index] {
                get {
                    return ((QuotationRow)(this.Rows[index]));
                }
            }
            
            public event QuotationRowChangeEventHandler QuotationRowChanging;
            
            public event QuotationRowChangeEventHandler QuotationRowChanged;
            
            public event QuotationRowChangeEventHandler QuotationRowDeleting;
            
            public event QuotationRowChangeEventHandler QuotationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddQuotationRow(QuotationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuotationRow AddQuotationRow(
                        long QuotationId, 
                        long LeadId, 
                        System.DateTime QDate, 
                        decimal QPrice, 
                        decimal AdvAmount, 
                        decimal PaidAmount, 
                        string Subject, 
                        long CreatedBy, 
                        System.DateTime CreatedDate, 
                        long ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        long SIID, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        long FYID, 
                        int GodownID, 
                        string Refno, 
                        string ItemDesc, 
                        string ItemName, 
                        decimal Qty, 
                        decimal Rate, 
                        string TaxName, 
                        string LeadNo, 
                        string CustomerName, 
                        string CustomerAddr, 
                        System.DateTime LeadDate, 
                        string Phone1, 
                        string MobileNo, 
                        string Email, 
                        decimal Amount, 
                        string RefNo1, 
                        string UOM, 
                        string ContactName, 
                        string Note, 
                        string Specification, 
                        string QuotationNo, 
                        string Code, 
                        string Reference, 
                        decimal DisCount1, 
                        string QItemDesc, 
                        decimal ItemNetAmount, 
                        string DocName, 
                        string ItemCode, 
                        byte[] Image, 
                        byte[] Image1, 
                        string Currency, 
                        string CurrencyName, 
                        decimal SBCessAmount, 
                        decimal ExtraTaxAmount, 
                        string ExtraTaxType) {
                QuotationRow rowQuotationRow = ((QuotationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        QuotationId,
                        LeadId,
                        QDate,
                        QPrice,
                        AdvAmount,
                        PaidAmount,
                        Subject,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        SIID,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        FYID,
                        GodownID,
                        Refno,
                        ItemDesc,
                        ItemName,
                        Qty,
                        Rate,
                        TaxName,
                        LeadNo,
                        CustomerName,
                        CustomerAddr,
                        LeadDate,
                        Phone1,
                        MobileNo,
                        Email,
                        Amount,
                        RefNo1,
                        UOM,
                        ContactName,
                        Note,
                        Specification,
                        QuotationNo,
                        Code,
                        Reference,
                        DisCount1,
                        QItemDesc,
                        ItemNetAmount,
                        DocName,
                        ItemCode,
                        Image,
                        Image1,
                        Currency,
                        CurrencyName,
                        SBCessAmount,
                        ExtraTaxAmount,
                        ExtraTaxType};
                rowQuotationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQuotationRow);
                return rowQuotationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                QuotationDataTable cln = ((QuotationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QuotationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnQuotationId = base.Columns["QuotationId"];
                this.columnLeadId = base.Columns["LeadId"];
                this.columnQDate = base.Columns["QDate"];
                this.columnQPrice = base.Columns["QPrice"];
                this.columnAdvAmount = base.Columns["AdvAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnSubject = base.Columns["Subject"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnSIID = base.Columns["SIID"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnFYID = base.Columns["FYID"];
                this.columnGodownID = base.Columns["GodownID"];
                this.columnRefno = base.Columns["Refno"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnTaxName = base.Columns["TaxName"];
                this.columnLeadNo = base.Columns["LeadNo"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerAddr = base.Columns["CustomerAddr"];
                this.columnLeadDate = base.Columns["LeadDate"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnEmail = base.Columns["Email"];
                this.columnAmount = base.Columns["Amount"];
                this.columnRefNo1 = base.Columns["RefNo1"];
                this.columnUOM = base.Columns["UOM"];
                this.columnContactName = base.Columns["ContactName"];
                this.columnNote = base.Columns["Note"];
                this.columnSpecification = base.Columns["Specification"];
                this.columnQuotationNo = base.Columns["QuotationNo"];
                this.columnCode = base.Columns["Code"];
                this.columnReference = base.Columns["Reference"];
                this.columnDisCount = base.Columns["DisCount"];
                this.columnQItemDesc = base.Columns["QItemDesc"];
                this.columnItemNetAmount = base.Columns["ItemNetAmount"];
                this.columnDocName = base.Columns["DocName"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnImage = base.Columns["Image"];
                this.columnImage1 = base.Columns["Image1"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
                this.columnSBCessAmount = base.Columns["SBCessAmount"];
                this.columnExtraTaxAmount = base.Columns["ExtraTaxAmount"];
                this.columnExtraTaxType = base.Columns["ExtraTaxType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnQuotationId = new global::System.Data.DataColumn("QuotationId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotationId);
                this.columnLeadId = new global::System.Data.DataColumn("LeadId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadId);
                this.columnQDate = new global::System.Data.DataColumn("QDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQDate);
                this.columnQPrice = new global::System.Data.DataColumn("QPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQPrice);
                this.columnAdvAmount = new global::System.Data.DataColumn("AdvAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnSubject = new global::System.Data.DataColumn("Subject", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubject);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnFYID = new global::System.Data.DataColumn("FYID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFYID);
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnRefno = new global::System.Data.DataColumn("Refno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefno);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnTaxName = new global::System.Data.DataColumn("TaxName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxName);
                this.columnLeadNo = new global::System.Data.DataColumn("LeadNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadNo);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerAddr = new global::System.Data.DataColumn("CustomerAddr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAddr);
                this.columnLeadDate = new global::System.Data.DataColumn("LeadDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadDate);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnRefNo1 = new global::System.Data.DataColumn("RefNo1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefNo1);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnNote = new global::System.Data.DataColumn("Note", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnSpecification = new global::System.Data.DataColumn("Specification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecification);
                this.columnQuotationNo = new global::System.Data.DataColumn("QuotationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuotationNo);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnReference = new global::System.Data.DataColumn("Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnDisCount = new global::System.Data.DataColumn("DisCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisCount);
                this.columnQItemDesc = new global::System.Data.DataColumn("QItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQItemDesc);
                this.columnItemNetAmount = new global::System.Data.DataColumn("ItemNetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemNetAmount);
                this.columnDocName = new global::System.Data.DataColumn("DocName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocName);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnImage = new global::System.Data.DataColumn("Image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage);
                this.columnImage1 = new global::System.Data.DataColumn("Image1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage1);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.columnSBCessAmount = new global::System.Data.DataColumn("SBCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBCessAmount);
                this.columnExtraTaxAmount = new global::System.Data.DataColumn("ExtraTaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraTaxAmount);
                this.columnExtraTaxType = new global::System.Data.DataColumn("ExtraTaxType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraTaxType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuotationRow NewQuotationRow() {
                return ((QuotationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QuotationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(QuotationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QuotationRowChanged != null)) {
                    this.QuotationRowChanged(this, new QuotationRowChangeEvent(((QuotationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QuotationRowChanging != null)) {
                    this.QuotationRowChanging(this, new QuotationRowChangeEvent(((QuotationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QuotationRowDeleted != null)) {
                    this.QuotationRowDeleted(this, new QuotationRowChangeEvent(((QuotationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QuotationRowDeleting != null)) {
                    this.QuotationRowDeleting(this, new QuotationRowChangeEvent(((QuotationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveQuotationRow(QuotationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QuotationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AverageDataTable : global::System.Data.TypedTableBase<AverageRow> {
            
            private global::System.Data.DataColumn columnAvgId;
            
            private global::System.Data.DataColumn columnCarTypeId;
            
            private global::System.Data.DataColumn columnCarType;
            
            private global::System.Data.DataColumn columnLiter;
            
            private global::System.Data.DataColumn columnRs;
            
            private global::System.Data.DataColumn columnFull_Or_Not;
            
            private global::System.Data.DataColumn columnKM_Reading;
            
            private global::System.Data.DataColumn columnAvg;
            
            private global::System.Data.DataColumn columnStartDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AverageDataTable() {
                this.TableName = "Average";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AverageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AverageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvgIdColumn {
                get {
                    return this.columnAvgId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeIdColumn {
                get {
                    return this.columnCarTypeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeColumn {
                get {
                    return this.columnCarType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LiterColumn {
                get {
                    return this.columnLiter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RsColumn {
                get {
                    return this.columnRs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Full_Or_NotColumn {
                get {
                    return this.columnFull_Or_Not;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KM_ReadingColumn {
                get {
                    return this.columnKM_Reading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvgColumn {
                get {
                    return this.columnAvg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AverageRow this[int index] {
                get {
                    return ((AverageRow)(this.Rows[index]));
                }
            }
            
            public event AverageRowChangeEventHandler AverageRowChanging;
            
            public event AverageRowChangeEventHandler AverageRowChanged;
            
            public event AverageRowChangeEventHandler AverageRowDeleting;
            
            public event AverageRowChangeEventHandler AverageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAverageRow(AverageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AverageRow AddAverageRow(long AvgId, long CarTypeId, string CarType, decimal Liter, decimal Rs, string Full_Or_Not, decimal KM_Reading, string Avg, System.DateTime StartDate) {
                AverageRow rowAverageRow = ((AverageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AvgId,
                        CarTypeId,
                        CarType,
                        Liter,
                        Rs,
                        Full_Or_Not,
                        KM_Reading,
                        Avg,
                        StartDate};
                rowAverageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAverageRow);
                return rowAverageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AverageDataTable cln = ((AverageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AverageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAvgId = base.Columns["AvgId"];
                this.columnCarTypeId = base.Columns["CarTypeId"];
                this.columnCarType = base.Columns["CarType"];
                this.columnLiter = base.Columns["Liter"];
                this.columnRs = base.Columns["Rs"];
                this.columnFull_Or_Not = base.Columns["Full_Or_Not"];
                this.columnKM_Reading = base.Columns["KM_Reading"];
                this.columnAvg = base.Columns["Avg"];
                this.columnStartDate = base.Columns["StartDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAvgId = new global::System.Data.DataColumn("AvgId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvgId);
                this.columnCarTypeId = new global::System.Data.DataColumn("CarTypeId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarTypeId);
                this.columnCarType = new global::System.Data.DataColumn("CarType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarType);
                this.columnLiter = new global::System.Data.DataColumn("Liter", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiter);
                this.columnRs = new global::System.Data.DataColumn("Rs", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRs);
                this.columnFull_Or_Not = new global::System.Data.DataColumn("Full_Or_Not", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFull_Or_Not);
                this.columnKM_Reading = new global::System.Data.DataColumn("KM_Reading", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKM_Reading);
                this.columnAvg = new global::System.Data.DataColumn("Avg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvg);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AverageRow NewAverageRow() {
                return ((AverageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AverageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AverageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AverageRowChanged != null)) {
                    this.AverageRowChanged(this, new AverageRowChangeEvent(((AverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AverageRowChanging != null)) {
                    this.AverageRowChanging(this, new AverageRowChangeEvent(((AverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AverageRowDeleted != null)) {
                    this.AverageRowDeleted(this, new AverageRowChangeEvent(((AverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AverageRowDeleting != null)) {
                    this.AverageRowDeleting(this, new AverageRowChangeEvent(((AverageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAverageRow(AverageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AverageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DepartmentRegisterDataTable : global::System.Data.TypedTableBase<DepartmentRegisterRow> {
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRegisterDataTable() {
                this.TableName = "DepartmentRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DepartmentRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRegisterRow this[int index] {
                get {
                    return ((DepartmentRegisterRow)(this.Rows[index]));
                }
            }
            
            public event DepartmentRegisterRowChangeEventHandler DepartmentRegisterRowChanging;
            
            public event DepartmentRegisterRowChangeEventHandler DepartmentRegisterRowChanged;
            
            public event DepartmentRegisterRowChangeEventHandler DepartmentRegisterRowDeleting;
            
            public event DepartmentRegisterRowChangeEventHandler DepartmentRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDepartmentRegisterRow(DepartmentRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRegisterRow AddDepartmentRegisterRow(int DeptID, string Dept_Name, string Remarks, long CreatedBy, System.DateTime CreatedDate, long ModifiedBy, System.DateTime ModifiedDate) {
                DepartmentRegisterRow rowDepartmentRegisterRow = ((DepartmentRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeptID,
                        Dept_Name,
                        Remarks,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate};
                rowDepartmentRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDepartmentRegisterRow);
                return rowDepartmentRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DepartmentRegisterDataTable cln = ((DepartmentRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DepartmentRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDeptID = base.Columns["DeptID"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRegisterRow NewDepartmentRegisterRow() {
                return ((DepartmentRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DepartmentRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DepartmentRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DepartmentRegisterRowChanged != null)) {
                    this.DepartmentRegisterRowChanged(this, new DepartmentRegisterRowChangeEvent(((DepartmentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DepartmentRegisterRowChanging != null)) {
                    this.DepartmentRegisterRowChanging(this, new DepartmentRegisterRowChangeEvent(((DepartmentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DepartmentRegisterRowDeleted != null)) {
                    this.DepartmentRegisterRowDeleted(this, new DepartmentRegisterRowChangeEvent(((DepartmentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DepartmentRegisterRowDeleting != null)) {
                    this.DepartmentRegisterRowDeleting(this, new DepartmentRegisterRowChangeEvent(((DepartmentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDepartmentRegisterRow(DepartmentRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DepartmentRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContractTypeRegisterDataTable : global::System.Data.TypedTableBase<ContractTypeRegisterRow> {
            
            private global::System.Data.DataColumn columnConTypeID;
            
            private global::System.Data.DataColumn columnCon_Name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContractTypeRegisterDataTable() {
                this.TableName = "ContractTypeRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContractTypeRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContractTypeRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConTypeIDColumn {
                get {
                    return this.columnConTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Con_NameColumn {
                get {
                    return this.columnCon_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContractTypeRegisterRow this[int index] {
                get {
                    return ((ContractTypeRegisterRow)(this.Rows[index]));
                }
            }
            
            public event ContractTypeRegisterRowChangeEventHandler ContractTypeRegisterRowChanging;
            
            public event ContractTypeRegisterRowChangeEventHandler ContractTypeRegisterRowChanged;
            
            public event ContractTypeRegisterRowChangeEventHandler ContractTypeRegisterRowDeleting;
            
            public event ContractTypeRegisterRowChangeEventHandler ContractTypeRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContractTypeRegisterRow(ContractTypeRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContractTypeRegisterRow AddContractTypeRegisterRow(int ConTypeID, string Con_Name, string Description, long CreatedBy, System.DateTime CreatedDate, long ModifiedBy, System.DateTime ModifiedDate) {
                ContractTypeRegisterRow rowContractTypeRegisterRow = ((ContractTypeRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ConTypeID,
                        Con_Name,
                        Description,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate};
                rowContractTypeRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContractTypeRegisterRow);
                return rowContractTypeRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ContractTypeRegisterDataTable cln = ((ContractTypeRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContractTypeRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnConTypeID = base.Columns["ConTypeID"];
                this.columnCon_Name = base.Columns["Con_Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnConTypeID = new global::System.Data.DataColumn("ConTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConTypeID);
                this.columnCon_Name = new global::System.Data.DataColumn("Con_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCon_Name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContractTypeRegisterRow NewContractTypeRegisterRow() {
                return ((ContractTypeRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContractTypeRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ContractTypeRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContractTypeRegisterRowChanged != null)) {
                    this.ContractTypeRegisterRowChanged(this, new ContractTypeRegisterRowChangeEvent(((ContractTypeRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContractTypeRegisterRowChanging != null)) {
                    this.ContractTypeRegisterRowChanging(this, new ContractTypeRegisterRowChangeEvent(((ContractTypeRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContractTypeRegisterRowDeleted != null)) {
                    this.ContractTypeRegisterRowDeleted(this, new ContractTypeRegisterRowChangeEvent(((ContractTypeRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContractTypeRegisterRowDeleting != null)) {
                    this.ContractTypeRegisterRowDeleting(this, new ContractTypeRegisterRowChangeEvent(((ContractTypeRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContractTypeRegisterRow(ContractTypeRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContractTypeRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CallTypeRegisterDataTable : global::System.Data.TypedTableBase<CallTypeRegisterRow> {
            
            private global::System.Data.DataColumn columnCallID;
            
            private global::System.Data.DataColumn columnCall_Name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallTypeRegisterDataTable() {
                this.TableName = "CallTypeRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CallTypeRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CallTypeRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallIDColumn {
                get {
                    return this.columnCallID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Call_NameColumn {
                get {
                    return this.columnCall_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallTypeRegisterRow this[int index] {
                get {
                    return ((CallTypeRegisterRow)(this.Rows[index]));
                }
            }
            
            public event CallTypeRegisterRowChangeEventHandler CallTypeRegisterRowChanging;
            
            public event CallTypeRegisterRowChangeEventHandler CallTypeRegisterRowChanged;
            
            public event CallTypeRegisterRowChangeEventHandler CallTypeRegisterRowDeleting;
            
            public event CallTypeRegisterRowChangeEventHandler CallTypeRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCallTypeRegisterRow(CallTypeRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallTypeRegisterRow AddCallTypeRegisterRow(int CallID, string Call_Name, string Description, long CreatedBy, System.DateTime CreatedDate, long ModifiedBy, System.DateTime ModifiedDate) {
                CallTypeRegisterRow rowCallTypeRegisterRow = ((CallTypeRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CallID,
                        Call_Name,
                        Description,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate};
                rowCallTypeRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCallTypeRegisterRow);
                return rowCallTypeRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CallTypeRegisterDataTable cln = ((CallTypeRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CallTypeRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCallID = base.Columns["CallID"];
                this.columnCall_Name = base.Columns["Call_Name"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCallID = new global::System.Data.DataColumn("CallID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallID);
                this.columnCall_Name = new global::System.Data.DataColumn("Call_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallTypeRegisterRow NewCallTypeRegisterRow() {
                return ((CallTypeRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CallTypeRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CallTypeRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CallTypeRegisterRowChanged != null)) {
                    this.CallTypeRegisterRowChanged(this, new CallTypeRegisterRowChangeEvent(((CallTypeRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CallTypeRegisterRowChanging != null)) {
                    this.CallTypeRegisterRowChanging(this, new CallTypeRegisterRowChangeEvent(((CallTypeRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CallTypeRegisterRowDeleted != null)) {
                    this.CallTypeRegisterRowDeleted(this, new CallTypeRegisterRowChangeEvent(((CallTypeRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CallTypeRegisterRowDeleting != null)) {
                    this.CallTypeRegisterRowDeleting(this, new CallTypeRegisterRowChangeEvent(((CallTypeRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCallTypeRegisterRow(CallTypeRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CallTypeRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ZoneRegisterDataTable : global::System.Data.TypedTableBase<ZoneRegisterRow> {
            
            private global::System.Data.DataColumn columnZoneID;
            
            private global::System.Data.DataColumn columnZone_name;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneRegisterDataTable() {
                this.TableName = "ZoneRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ZoneRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ZoneRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneIDColumn {
                get {
                    return this.columnZoneID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Zone_nameColumn {
                get {
                    return this.columnZone_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneRegisterRow this[int index] {
                get {
                    return ((ZoneRegisterRow)(this.Rows[index]));
                }
            }
            
            public event ZoneRegisterRowChangeEventHandler ZoneRegisterRowChanging;
            
            public event ZoneRegisterRowChangeEventHandler ZoneRegisterRowChanged;
            
            public event ZoneRegisterRowChangeEventHandler ZoneRegisterRowDeleting;
            
            public event ZoneRegisterRowChangeEventHandler ZoneRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddZoneRegisterRow(ZoneRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneRegisterRow AddZoneRegisterRow(int ZoneID, string Zone_name, string Description, long CreatedBy, System.DateTime CreatedDate, long ModifiedBy, System.DateTime ModifiedDate) {
                ZoneRegisterRow rowZoneRegisterRow = ((ZoneRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ZoneID,
                        Zone_name,
                        Description,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate};
                rowZoneRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowZoneRegisterRow);
                return rowZoneRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ZoneRegisterDataTable cln = ((ZoneRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ZoneRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnZoneID = base.Columns["ZoneID"];
                this.columnZone_name = base.Columns["Zone_name"];
                this.columnDescription = base.Columns["Description"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnZoneID = new global::System.Data.DataColumn("ZoneID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneID);
                this.columnZone_name = new global::System.Data.DataColumn("Zone_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone_name);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneRegisterRow NewZoneRegisterRow() {
                return ((ZoneRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ZoneRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ZoneRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZoneRegisterRowChanged != null)) {
                    this.ZoneRegisterRowChanged(this, new ZoneRegisterRowChangeEvent(((ZoneRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZoneRegisterRowChanging != null)) {
                    this.ZoneRegisterRowChanging(this, new ZoneRegisterRowChangeEvent(((ZoneRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZoneRegisterRowDeleted != null)) {
                    this.ZoneRegisterRowDeleted(this, new ZoneRegisterRowChangeEvent(((ZoneRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZoneRegisterRowDeleting != null)) {
                    this.ZoneRegisterRowDeleting(this, new ZoneRegisterRowChangeEvent(((ZoneRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveZoneRegisterRow(ZoneRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ZoneRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductRegisterDataTable : global::System.Data.TypedTableBase<ProductRegisterRow> {
            
            private global::System.Data.DataColumn columnNameOfProduct;
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnModelNo;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnPartNo;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUsedIn;
            
            private global::System.Data.DataColumn columnMoving;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnProID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRegisterDataTable() {
                this.TableName = "ProductRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameOfProductColumn {
                get {
                    return this.columnNameOfProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNoColumn {
                get {
                    return this.columnModelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartNoColumn {
                get {
                    return this.columnPartNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UsedInColumn {
                get {
                    return this.columnUsedIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MovingColumn {
                get {
                    return this.columnMoving;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProIDColumn {
                get {
                    return this.columnProID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRegisterRow this[int index] {
                get {
                    return ((ProductRegisterRow)(this.Rows[index]));
                }
            }
            
            public event ProductRegisterRowChangeEventHandler ProductRegisterRowChanging;
            
            public event ProductRegisterRowChangeEventHandler ProductRegisterRowChanged;
            
            public event ProductRegisterRowChangeEventHandler ProductRegisterRowDeleting;
            
            public event ProductRegisterRowChangeEventHandler ProductRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductRegisterRow(ProductRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRegisterRow AddProductRegisterRow(string NameOfProduct, string SrNo, string ModelNo, string Category, string Brand, string PartNo, string Description, string UsedIn, string Moving, long CreatedBy, System.DateTime CreatedDate, long ModifiedBy, System.DateTime ModifiedDate, int ProID) {
                ProductRegisterRow rowProductRegisterRow = ((ProductRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NameOfProduct,
                        SrNo,
                        ModelNo,
                        Category,
                        Brand,
                        PartNo,
                        Description,
                        UsedIn,
                        Moving,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        ProID};
                rowProductRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProductRegisterRow);
                return rowProductRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProductRegisterDataTable cln = ((ProductRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProductRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNameOfProduct = base.Columns["NameOfProduct"];
                this.columnSrNo = base.Columns["SrNo"];
                this.columnModelNo = base.Columns["ModelNo"];
                this.columnCategory = base.Columns["Category"];
                this.columnBrand = base.Columns["Brand"];
                this.columnPartNo = base.Columns["PartNo"];
                this.columnDescription = base.Columns["Description"];
                this.columnUsedIn = base.Columns["UsedIn"];
                this.columnMoving = base.Columns["Moving"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnProID = base.Columns["ProID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNameOfProduct = new global::System.Data.DataColumn("NameOfProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOfProduct);
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnModelNo = new global::System.Data.DataColumn("ModelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNo);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnPartNo = new global::System.Data.DataColumn("PartNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartNo);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUsedIn = new global::System.Data.DataColumn("UsedIn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsedIn);
                this.columnMoving = new global::System.Data.DataColumn("Moving", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoving);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnProID = new global::System.Data.DataColumn("ProID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRegisterRow NewProductRegisterRow() {
                return ((ProductRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProductRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProductRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRegisterRowChanged != null)) {
                    this.ProductRegisterRowChanged(this, new ProductRegisterRowChangeEvent(((ProductRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRegisterRowChanging != null)) {
                    this.ProductRegisterRowChanging(this, new ProductRegisterRowChangeEvent(((ProductRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRegisterRowDeleted != null)) {
                    this.ProductRegisterRowDeleted(this, new ProductRegisterRowChangeEvent(((ProductRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRegisterRowDeleting != null)) {
                    this.ProductRegisterRowDeleting(this, new ProductRegisterRowChangeEvent(((ProductRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductRegisterRow(ProductRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GodownRegisterDataTable : global::System.Data.TypedTableBase<GodownRegisterRow> {
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnGodown_name;
            
            private global::System.Data.DataColumn columnGodown_addr;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnCityID;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnGodownType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GodownRegisterDataTable() {
                this.TableName = "GodownRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GodownRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GodownRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Godown_nameColumn {
                get {
                    return this.columnGodown_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Godown_addrColumn {
                get {
                    return this.columnGodown_addr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityIDColumn {
                get {
                    return this.columnCityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownTypeColumn {
                get {
                    return this.columnGodownType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GodownRegisterRow this[int index] {
                get {
                    return ((GodownRegisterRow)(this.Rows[index]));
                }
            }
            
            public event GodownRegisterRowChangeEventHandler GodownRegisterRowChanging;
            
            public event GodownRegisterRowChangeEventHandler GodownRegisterRowChanged;
            
            public event GodownRegisterRowChangeEventHandler GodownRegisterRowDeleting;
            
            public event GodownRegisterRowChangeEventHandler GodownRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGodownRegisterRow(GodownRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GodownRegisterRow AddGodownRegisterRow(int GodownID, string Godown_name, string Godown_addr, long CreatedBy, System.DateTime CreatedDate, long ModifiedBy, System.DateTime ModifiedDate, int CityID, string CityName, string Email, string Phone, string GodownType) {
                GodownRegisterRow rowGodownRegisterRow = ((GodownRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GodownID,
                        Godown_name,
                        Godown_addr,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        CityID,
                        CityName,
                        Email,
                        Phone,
                        GodownType};
                rowGodownRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGodownRegisterRow);
                return rowGodownRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GodownRegisterDataTable cln = ((GodownRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GodownRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGodownID = base.Columns["GodownID"];
                this.columnGodown_name = base.Columns["Godown_name"];
                this.columnGodown_addr = base.Columns["Godown_addr"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnCityID = base.Columns["CityID"];
                this.columnCityName = base.Columns["CityName"];
                this.columnEmail = base.Columns["Email"];
                this.columnPhone = base.Columns["Phone"];
                this.columnGodownType = base.Columns["GodownType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnGodown_name = new global::System.Data.DataColumn("Godown_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodown_name);
                this.columnGodown_addr = new global::System.Data.DataColumn("Godown_addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodown_addr);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnCityID = new global::System.Data.DataColumn("CityID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityID);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnGodownType = new global::System.Data.DataColumn("GodownType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GodownRegisterRow NewGodownRegisterRow() {
                return ((GodownRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GodownRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GodownRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GodownRegisterRowChanged != null)) {
                    this.GodownRegisterRowChanged(this, new GodownRegisterRowChangeEvent(((GodownRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GodownRegisterRowChanging != null)) {
                    this.GodownRegisterRowChanging(this, new GodownRegisterRowChangeEvent(((GodownRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GodownRegisterRowDeleted != null)) {
                    this.GodownRegisterRowDeleted(this, new GodownRegisterRowChangeEvent(((GodownRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GodownRegisterRowDeleting != null)) {
                    this.GodownRegisterRowDeleting(this, new GodownRegisterRowChangeEvent(((GodownRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGodownRegisterRow(GodownRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GodownRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BookingRegisterDataTable : global::System.Data.TypedTableBase<BookingRegisterRow> {
            
            private global::System.Data.DataColumn columnCarTypeID;
            
            private global::System.Data.DataColumn columnCarType;
            
            private global::System.Data.DataColumn columnDay1;
            
            private global::System.Data.DataColumn columnDay2;
            
            private global::System.Data.DataColumn columnDay3;
            
            private global::System.Data.DataColumn columnDay4;
            
            private global::System.Data.DataColumn columnDay5;
            
            private global::System.Data.DataColumn columnDay6;
            
            private global::System.Data.DataColumn columnDay7;
            
            private global::System.Data.DataColumn columnDay8;
            
            private global::System.Data.DataColumn columnDay9;
            
            private global::System.Data.DataColumn columnDay10;
            
            private global::System.Data.DataColumn columnDay11;
            
            private global::System.Data.DataColumn columnDay12;
            
            private global::System.Data.DataColumn columnDay13;
            
            private global::System.Data.DataColumn columnDay14;
            
            private global::System.Data.DataColumn columnDay15;
            
            private global::System.Data.DataColumn columnDay16;
            
            private global::System.Data.DataColumn columnDay17;
            
            private global::System.Data.DataColumn columnDay18;
            
            private global::System.Data.DataColumn columnDay19;
            
            private global::System.Data.DataColumn columnDay20;
            
            private global::System.Data.DataColumn columnDay21;
            
            private global::System.Data.DataColumn columnDay22;
            
            private global::System.Data.DataColumn columnDay23;
            
            private global::System.Data.DataColumn columnDay24;
            
            private global::System.Data.DataColumn columnDay25;
            
            private global::System.Data.DataColumn columnDay26;
            
            private global::System.Data.DataColumn columnDay27;
            
            private global::System.Data.DataColumn columnDay28;
            
            private global::System.Data.DataColumn columnDay29;
            
            private global::System.Data.DataColumn columnDay30;
            
            private global::System.Data.DataColumn columnDay31;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegisterDataTable() {
                this.TableName = "BookingRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BookingRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BookingRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeIDColumn {
                get {
                    return this.columnCarTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeColumn {
                get {
                    return this.columnCarType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day1Column {
                get {
                    return this.columnDay1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day2Column {
                get {
                    return this.columnDay2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day3Column {
                get {
                    return this.columnDay3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day4Column {
                get {
                    return this.columnDay4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day5Column {
                get {
                    return this.columnDay5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day6Column {
                get {
                    return this.columnDay6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day7Column {
                get {
                    return this.columnDay7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day8Column {
                get {
                    return this.columnDay8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day9Column {
                get {
                    return this.columnDay9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day10Column {
                get {
                    return this.columnDay10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day11Column {
                get {
                    return this.columnDay11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day12Column {
                get {
                    return this.columnDay12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day13Column {
                get {
                    return this.columnDay13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day14Column {
                get {
                    return this.columnDay14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day15Column {
                get {
                    return this.columnDay15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day16Column {
                get {
                    return this.columnDay16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day17Column {
                get {
                    return this.columnDay17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day18Column {
                get {
                    return this.columnDay18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day19Column {
                get {
                    return this.columnDay19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day20Column {
                get {
                    return this.columnDay20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day21Column {
                get {
                    return this.columnDay21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day22Column {
                get {
                    return this.columnDay22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day23Column {
                get {
                    return this.columnDay23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day24Column {
                get {
                    return this.columnDay24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day25Column {
                get {
                    return this.columnDay25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day26Column {
                get {
                    return this.columnDay26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day27Column {
                get {
                    return this.columnDay27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day28Column {
                get {
                    return this.columnDay28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day29Column {
                get {
                    return this.columnDay29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day30Column {
                get {
                    return this.columnDay30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Day31Column {
                get {
                    return this.columnDay31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegisterRow this[int index] {
                get {
                    return ((BookingRegisterRow)(this.Rows[index]));
                }
            }
            
            public event BookingRegisterRowChangeEventHandler BookingRegisterRowChanging;
            
            public event BookingRegisterRowChangeEventHandler BookingRegisterRowChanged;
            
            public event BookingRegisterRowChangeEventHandler BookingRegisterRowDeleting;
            
            public event BookingRegisterRowChangeEventHandler BookingRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBookingRegisterRow(BookingRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegisterRow AddBookingRegisterRow(
                        long CarTypeID, 
                        string CarType, 
                        string Day1, 
                        string Day2, 
                        string Day3, 
                        string Day4, 
                        string Day5, 
                        string Day6, 
                        string Day7, 
                        string Day8, 
                        string Day9, 
                        string Day10, 
                        string Day11, 
                        string Day12, 
                        string Day13, 
                        string Day14, 
                        string Day15, 
                        string Day16, 
                        string Day17, 
                        string Day18, 
                        string Day19, 
                        string Day20, 
                        string Day21, 
                        string Day22, 
                        string Day23, 
                        string Day24, 
                        string Day25, 
                        string Day26, 
                        string Day27, 
                        string Day28, 
                        string Day29, 
                        string Day30, 
                        string Day31) {
                BookingRegisterRow rowBookingRegisterRow = ((BookingRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CarTypeID,
                        CarType,
                        Day1,
                        Day2,
                        Day3,
                        Day4,
                        Day5,
                        Day6,
                        Day7,
                        Day8,
                        Day9,
                        Day10,
                        Day11,
                        Day12,
                        Day13,
                        Day14,
                        Day15,
                        Day16,
                        Day17,
                        Day18,
                        Day19,
                        Day20,
                        Day21,
                        Day22,
                        Day23,
                        Day24,
                        Day25,
                        Day26,
                        Day27,
                        Day28,
                        Day29,
                        Day30,
                        Day31};
                rowBookingRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBookingRegisterRow);
                return rowBookingRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BookingRegisterDataTable cln = ((BookingRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BookingRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCarTypeID = base.Columns["CarTypeID"];
                this.columnCarType = base.Columns["CarType"];
                this.columnDay1 = base.Columns["Day1"];
                this.columnDay2 = base.Columns["Day2"];
                this.columnDay3 = base.Columns["Day3"];
                this.columnDay4 = base.Columns["Day4"];
                this.columnDay5 = base.Columns["Day5"];
                this.columnDay6 = base.Columns["Day6"];
                this.columnDay7 = base.Columns["Day7"];
                this.columnDay8 = base.Columns["Day8"];
                this.columnDay9 = base.Columns["Day9"];
                this.columnDay10 = base.Columns["Day10"];
                this.columnDay11 = base.Columns["Day11"];
                this.columnDay12 = base.Columns["Day12"];
                this.columnDay13 = base.Columns["Day13"];
                this.columnDay14 = base.Columns["Day14"];
                this.columnDay15 = base.Columns["Day15"];
                this.columnDay16 = base.Columns["Day16"];
                this.columnDay17 = base.Columns["Day17"];
                this.columnDay18 = base.Columns["Day18"];
                this.columnDay19 = base.Columns["Day19"];
                this.columnDay20 = base.Columns["Day20"];
                this.columnDay21 = base.Columns["Day21"];
                this.columnDay22 = base.Columns["Day22"];
                this.columnDay23 = base.Columns["Day23"];
                this.columnDay24 = base.Columns["Day24"];
                this.columnDay25 = base.Columns["Day25"];
                this.columnDay26 = base.Columns["Day26"];
                this.columnDay27 = base.Columns["Day27"];
                this.columnDay28 = base.Columns["Day28"];
                this.columnDay29 = base.Columns["Day29"];
                this.columnDay30 = base.Columns["Day30"];
                this.columnDay31 = base.Columns["Day31"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCarTypeID = new global::System.Data.DataColumn("CarTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarTypeID);
                this.columnCarType = new global::System.Data.DataColumn("CarType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarType);
                this.columnDay1 = new global::System.Data.DataColumn("Day1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay1);
                this.columnDay2 = new global::System.Data.DataColumn("Day2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay2);
                this.columnDay3 = new global::System.Data.DataColumn("Day3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay3);
                this.columnDay4 = new global::System.Data.DataColumn("Day4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay4);
                this.columnDay5 = new global::System.Data.DataColumn("Day5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay5);
                this.columnDay6 = new global::System.Data.DataColumn("Day6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay6);
                this.columnDay7 = new global::System.Data.DataColumn("Day7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay7);
                this.columnDay8 = new global::System.Data.DataColumn("Day8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay8);
                this.columnDay9 = new global::System.Data.DataColumn("Day9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay9);
                this.columnDay10 = new global::System.Data.DataColumn("Day10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay10);
                this.columnDay11 = new global::System.Data.DataColumn("Day11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay11);
                this.columnDay12 = new global::System.Data.DataColumn("Day12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay12);
                this.columnDay13 = new global::System.Data.DataColumn("Day13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay13);
                this.columnDay14 = new global::System.Data.DataColumn("Day14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay14);
                this.columnDay15 = new global::System.Data.DataColumn("Day15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay15);
                this.columnDay16 = new global::System.Data.DataColumn("Day16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay16);
                this.columnDay17 = new global::System.Data.DataColumn("Day17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay17);
                this.columnDay18 = new global::System.Data.DataColumn("Day18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay18);
                this.columnDay19 = new global::System.Data.DataColumn("Day19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay19);
                this.columnDay20 = new global::System.Data.DataColumn("Day20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay20);
                this.columnDay21 = new global::System.Data.DataColumn("Day21", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay21);
                this.columnDay22 = new global::System.Data.DataColumn("Day22", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay22);
                this.columnDay23 = new global::System.Data.DataColumn("Day23", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay23);
                this.columnDay24 = new global::System.Data.DataColumn("Day24", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay24);
                this.columnDay25 = new global::System.Data.DataColumn("Day25", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay25);
                this.columnDay26 = new global::System.Data.DataColumn("Day26", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay26);
                this.columnDay27 = new global::System.Data.DataColumn("Day27", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay27);
                this.columnDay28 = new global::System.Data.DataColumn("Day28", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay28);
                this.columnDay29 = new global::System.Data.DataColumn("Day29", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay29);
                this.columnDay30 = new global::System.Data.DataColumn("Day30", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay30);
                this.columnDay31 = new global::System.Data.DataColumn("Day31", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDay31);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegisterRow NewBookingRegisterRow() {
                return ((BookingRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BookingRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BookingRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BookingRegisterRowChanged != null)) {
                    this.BookingRegisterRowChanged(this, new BookingRegisterRowChangeEvent(((BookingRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BookingRegisterRowChanging != null)) {
                    this.BookingRegisterRowChanging(this, new BookingRegisterRowChangeEvent(((BookingRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BookingRegisterRowDeleted != null)) {
                    this.BookingRegisterRowDeleted(this, new BookingRegisterRowChangeEvent(((BookingRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BookingRegisterRowDeleting != null)) {
                    this.BookingRegisterRowDeleting(this, new BookingRegisterRowChangeEvent(((BookingRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBookingRegisterRow(BookingRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BookingRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BookingRegDataTable : global::System.Data.TypedTableBase<BookingRegRow> {
            
            private global::System.Data.DataColumn columnBookingId;
            
            private global::System.Data.DataColumn columnBookingCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnPhoneNo;
            
            private global::System.Data.DataColumn columnPlaceOfJourney;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnVendorname;
            
            private global::System.Data.DataColumn columnCarType;
            
            private global::System.Data.DataColumn columnVehical;
            
            private global::System.Data.DataColumn columnStartingTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegDataTable() {
                this.TableName = "BookingReg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BookingRegDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BookingRegDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingIdColumn {
                get {
                    return this.columnBookingId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BookingCodeColumn {
                get {
                    return this.columnBookingCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneNoColumn {
                get {
                    return this.columnPhoneNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceOfJourneyColumn {
                get {
                    return this.columnPlaceOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendornameColumn {
                get {
                    return this.columnVendorname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CarTypeColumn {
                get {
                    return this.columnCarType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicalColumn {
                get {
                    return this.columnVehical;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartingTimeColumn {
                get {
                    return this.columnStartingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegRow this[int index] {
                get {
                    return ((BookingRegRow)(this.Rows[index]));
                }
            }
            
            public event BookingRegRowChangeEventHandler BookingRegRowChanging;
            
            public event BookingRegRowChangeEventHandler BookingRegRowChanged;
            
            public event BookingRegRowChangeEventHandler BookingRegRowDeleting;
            
            public event BookingRegRowChangeEventHandler BookingRegRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBookingRegRow(BookingRegRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegRow AddBookingRegRow(long BookingId, string BookingCode, string CustomerName, string EngagedFor, string PhoneNo, string PlaceOfJourney, System.DateTime StartDate, System.DateTime EndDate, string Vendorname, string CarType, string Vehical, string StartingTime) {
                BookingRegRow rowBookingRegRow = ((BookingRegRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BookingId,
                        BookingCode,
                        CustomerName,
                        EngagedFor,
                        PhoneNo,
                        PlaceOfJourney,
                        StartDate,
                        EndDate,
                        Vendorname,
                        CarType,
                        Vehical,
                        StartingTime};
                rowBookingRegRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBookingRegRow);
                return rowBookingRegRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BookingRegDataTable cln = ((BookingRegDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BookingRegDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBookingId = base.Columns["BookingId"];
                this.columnBookingCode = base.Columns["BookingCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnPhoneNo = base.Columns["PhoneNo"];
                this.columnPlaceOfJourney = base.Columns["PlaceOfJourney"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnVendorname = base.Columns["Vendorname"];
                this.columnCarType = base.Columns["CarType"];
                this.columnVehical = base.Columns["Vehical"];
                this.columnStartingTime = base.Columns["StartingTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBookingId = new global::System.Data.DataColumn("BookingId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingId);
                this.columnBookingCode = new global::System.Data.DataColumn("BookingCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBookingCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnPhoneNo = new global::System.Data.DataColumn("PhoneNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoneNo);
                this.columnPlaceOfJourney = new global::System.Data.DataColumn("PlaceOfJourney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceOfJourney);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnVendorname = new global::System.Data.DataColumn("Vendorname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorname);
                this.columnCarType = new global::System.Data.DataColumn("CarType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarType);
                this.columnVehical = new global::System.Data.DataColumn("Vehical", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehical);
                this.columnStartingTime = new global::System.Data.DataColumn("StartingTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartingTime);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegRow NewBookingRegRow() {
                return ((BookingRegRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BookingRegRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BookingRegRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BookingRegRowChanged != null)) {
                    this.BookingRegRowChanged(this, new BookingRegRowChangeEvent(((BookingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BookingRegRowChanging != null)) {
                    this.BookingRegRowChanging(this, new BookingRegRowChangeEvent(((BookingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BookingRegRowDeleted != null)) {
                    this.BookingRegRowDeleted(this, new BookingRegRowChangeEvent(((BookingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BookingRegRowDeleting != null)) {
                    this.BookingRegRowDeleting(this, new BookingRegRowChangeEvent(((BookingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBookingRegRow(BookingRegRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BookingRegDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VendorRegDataTable : global::System.Data.TypedTableBase<VendorRegRow> {
            
            private global::System.Data.DataColumn columnPaymentID;
            
            private global::System.Data.DataColumn columnPaymentCode;
            
            private global::System.Data.DataColumn columnPaymentDate;
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnVendorCode;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnAddrs;
            
            private global::System.Data.DataColumn columnPhone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRegDataTable() {
                this.TableName = "VendorReg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VendorRegDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VendorRegDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentIDColumn {
                get {
                    return this.columnPaymentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentCodeColumn {
                get {
                    return this.columnPaymentCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentDateColumn {
                get {
                    return this.columnPaymentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddrsColumn {
                get {
                    return this.columnAddrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRegRow this[int index] {
                get {
                    return ((VendorRegRow)(this.Rows[index]));
                }
            }
            
            public event VendorRegRowChangeEventHandler VendorRegRowChanging;
            
            public event VendorRegRowChangeEventHandler VendorRegRowChanged;
            
            public event VendorRegRowChangeEventHandler VendorRegRowDeleting;
            
            public event VendorRegRowChangeEventHandler VendorRegRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVendorRegRow(VendorRegRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRegRow AddVendorRegRow(long PaymentID, string PaymentCode, System.DateTime PaymentDate, long VendorID, string VendorCode, string VendorName, decimal NetAmount, string Narration, string Addrs, string Phone) {
                VendorRegRow rowVendorRegRow = ((VendorRegRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PaymentID,
                        PaymentCode,
                        PaymentDate,
                        VendorID,
                        VendorCode,
                        VendorName,
                        NetAmount,
                        Narration,
                        Addrs,
                        Phone};
                rowVendorRegRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVendorRegRow);
                return rowVendorRegRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VendorRegDataTable cln = ((VendorRegDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VendorRegDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPaymentID = base.Columns["PaymentID"];
                this.columnPaymentCode = base.Columns["PaymentCode"];
                this.columnPaymentDate = base.Columns["PaymentDate"];
                this.columnVendorID = base.Columns["VendorID"];
                this.columnVendorCode = base.Columns["VendorCode"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnNarration = base.Columns["Narration"];
                this.columnAddrs = base.Columns["Addrs"];
                this.columnPhone = base.Columns["Phone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPaymentID = new global::System.Data.DataColumn("PaymentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentID);
                this.columnPaymentCode = new global::System.Data.DataColumn("PaymentCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentCode);
                this.columnPaymentDate = new global::System.Data.DataColumn("PaymentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentDate);
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnVendorCode = new global::System.Data.DataColumn("VendorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnAddrs = new global::System.Data.DataColumn("Addrs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrs);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRegRow NewVendorRegRow() {
                return ((VendorRegRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VendorRegRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VendorRegRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VendorRegRowChanged != null)) {
                    this.VendorRegRowChanged(this, new VendorRegRowChangeEvent(((VendorRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VendorRegRowChanging != null)) {
                    this.VendorRegRowChanging(this, new VendorRegRowChangeEvent(((VendorRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VendorRegRowDeleted != null)) {
                    this.VendorRegRowDeleted(this, new VendorRegRowChangeEvent(((VendorRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VendorRegRowDeleting != null)) {
                    this.VendorRegRowDeleting(this, new VendorRegRowChangeEvent(((VendorRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVendorRegRow(VendorRegRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VendorRegDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerRegDataTable : global::System.Data.TypedTableBase<CustomerRegRow> {
            
            private global::System.Data.DataColumn columnReceiptID;
            
            private global::System.Data.DataColumn columnReceiptCode;
            
            private global::System.Data.DataColumn columnReceiptDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnAddrs;
            
            private global::System.Data.DataColumn columnPhone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegDataTable() {
                this.TableName = "CustomerReg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerRegDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerRegDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptIDColumn {
                get {
                    return this.columnReceiptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptCodeColumn {
                get {
                    return this.columnReceiptCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptDateColumn {
                get {
                    return this.columnReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddrsColumn {
                get {
                    return this.columnAddrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegRow this[int index] {
                get {
                    return ((CustomerRegRow)(this.Rows[index]));
                }
            }
            
            public event CustomerRegRowChangeEventHandler CustomerRegRowChanging;
            
            public event CustomerRegRowChangeEventHandler CustomerRegRowChanged;
            
            public event CustomerRegRowChangeEventHandler CustomerRegRowDeleting;
            
            public event CustomerRegRowChangeEventHandler CustomerRegRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerRegRow(CustomerRegRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegRow AddCustomerRegRow(long ReceiptID, string ReceiptCode, System.DateTime ReceiptDate, string CustomerName, decimal NetAmount, string Narration, string Addrs, string Phone) {
                CustomerRegRow rowCustomerRegRow = ((CustomerRegRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReceiptID,
                        ReceiptCode,
                        ReceiptDate,
                        CustomerName,
                        NetAmount,
                        Narration,
                        Addrs,
                        Phone};
                rowCustomerRegRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerRegRow);
                return rowCustomerRegRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerRegDataTable cln = ((CustomerRegDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerRegDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceiptID = base.Columns["ReceiptID"];
                this.columnReceiptCode = base.Columns["ReceiptCode"];
                this.columnReceiptDate = base.Columns["ReceiptDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnNarration = base.Columns["Narration"];
                this.columnAddrs = base.Columns["Addrs"];
                this.columnPhone = base.Columns["Phone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceiptID = new global::System.Data.DataColumn("ReceiptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptID);
                this.columnReceiptCode = new global::System.Data.DataColumn("ReceiptCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptCode);
                this.columnReceiptDate = new global::System.Data.DataColumn("ReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnAddrs = new global::System.Data.DataColumn("Addrs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrs);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegRow NewCustomerRegRow() {
                return ((CustomerRegRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerRegRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerRegRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerRegRowChanged != null)) {
                    this.CustomerRegRowChanged(this, new CustomerRegRowChangeEvent(((CustomerRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerRegRowChanging != null)) {
                    this.CustomerRegRowChanging(this, new CustomerRegRowChangeEvent(((CustomerRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerRegRowDeleted != null)) {
                    this.CustomerRegRowDeleted(this, new CustomerRegRowChangeEvent(((CustomerRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerRegRowDeleting != null)) {
                    this.CustomerRegRowDeleting(this, new CustomerRegRowChangeEvent(((CustomerRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerRegRow(CustomerRegRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerRegDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerPendingRegDataTable : global::System.Data.TypedTableBase<CustomerPendingRegRow> {
            
            private global::System.Data.DataColumn columnSaleId;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnDateOfJourney;
            
            private global::System.Data.DataColumn columnTotalPayment;
            
            private global::System.Data.DataColumn columnCustomerPaidAmount;
            
            private global::System.Data.DataColumn columnPayment;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnPlaceOfJourney;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            private global::System.Data.DataColumn columnAdvancePayment;
            
            private global::System.Data.DataColumn columnAdvanceToDriver;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPendingRegDataTable() {
                this.TableName = "CustomerPendingReg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPendingRegDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerPendingRegDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIdColumn {
                get {
                    return this.columnSaleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfJourneyColumn {
                get {
                    return this.columnDateOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPaymentColumn {
                get {
                    return this.columnTotalPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerPaidAmountColumn {
                get {
                    return this.columnCustomerPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentColumn {
                get {
                    return this.columnPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlaceOfJourneyColumn {
                get {
                    return this.columnPlaceOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvancePaymentColumn {
                get {
                    return this.columnAdvancePayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdvanceToDriverColumn {
                get {
                    return this.columnAdvanceToDriver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPendingRegRow this[int index] {
                get {
                    return ((CustomerPendingRegRow)(this.Rows[index]));
                }
            }
            
            public event CustomerPendingRegRowChangeEventHandler CustomerPendingRegRowChanging;
            
            public event CustomerPendingRegRowChangeEventHandler CustomerPendingRegRowChanged;
            
            public event CustomerPendingRegRowChangeEventHandler CustomerPendingRegRowDeleting;
            
            public event CustomerPendingRegRowChangeEventHandler CustomerPendingRegRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerPendingRegRow(CustomerPendingRegRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPendingRegRow AddCustomerPendingRegRow(
                        long SaleId, 
                        string CustomerName, 
                        string Phone1, 
                        System.DateTime DateOfJourney, 
                        decimal TotalPayment, 
                        decimal CustomerPaidAmount, 
                        decimal Payment, 
                        string EngagedFor, 
                        string Mobile, 
                        string PlaceOfJourney, 
                        long CustomerID, 
                        string CustomerCode, 
                        string Address1, 
                        string ContactPerson, 
                        decimal AdvancePayment, 
                        decimal AdvanceToDriver) {
                CustomerPendingRegRow rowCustomerPendingRegRow = ((CustomerPendingRegRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SaleId,
                        CustomerName,
                        Phone1,
                        DateOfJourney,
                        TotalPayment,
                        CustomerPaidAmount,
                        Payment,
                        EngagedFor,
                        Mobile,
                        PlaceOfJourney,
                        CustomerID,
                        CustomerCode,
                        Address1,
                        ContactPerson,
                        AdvancePayment,
                        AdvanceToDriver};
                rowCustomerPendingRegRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerPendingRegRow);
                return rowCustomerPendingRegRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerPendingRegDataTable cln = ((CustomerPendingRegDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerPendingRegDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSaleId = base.Columns["SaleId"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnDateOfJourney = base.Columns["DateOfJourney"];
                this.columnTotalPayment = base.Columns["TotalPayment"];
                this.columnCustomerPaidAmount = base.Columns["CustomerPaidAmount"];
                this.columnPayment = base.Columns["Payment"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnPlaceOfJourney = base.Columns["PlaceOfJourney"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnContactPerson = base.Columns["ContactPerson"];
                this.columnAdvancePayment = base.Columns["AdvancePayment"];
                this.columnAdvanceToDriver = base.Columns["AdvanceToDriver"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSaleId = new global::System.Data.DataColumn("SaleId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleId);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnDateOfJourney = new global::System.Data.DataColumn("DateOfJourney", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJourney);
                this.columnTotalPayment = new global::System.Data.DataColumn("TotalPayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPayment);
                this.columnCustomerPaidAmount = new global::System.Data.DataColumn("CustomerPaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerPaidAmount);
                this.columnPayment = new global::System.Data.DataColumn("Payment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnPlaceOfJourney = new global::System.Data.DataColumn("PlaceOfJourney", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaceOfJourney);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.columnAdvancePayment = new global::System.Data.DataColumn("AdvancePayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvancePayment);
                this.columnAdvanceToDriver = new global::System.Data.DataColumn("AdvanceToDriver", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvanceToDriver);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPendingRegRow NewCustomerPendingRegRow() {
                return ((CustomerPendingRegRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerPendingRegRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerPendingRegRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerPendingRegRowChanged != null)) {
                    this.CustomerPendingRegRowChanged(this, new CustomerPendingRegRowChangeEvent(((CustomerPendingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerPendingRegRowChanging != null)) {
                    this.CustomerPendingRegRowChanging(this, new CustomerPendingRegRowChangeEvent(((CustomerPendingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerPendingRegRowDeleted != null)) {
                    this.CustomerPendingRegRowDeleted(this, new CustomerPendingRegRowChangeEvent(((CustomerPendingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerPendingRegRowDeleting != null)) {
                    this.CustomerPendingRegRowDeleting(this, new CustomerPendingRegRowChangeEvent(((CustomerPendingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerPendingRegRow(CustomerPendingRegRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerPendingRegDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VendorPendingRegDataTable : global::System.Data.TypedTableBase<VendorPendingRegRow> {
            
            private global::System.Data.DataColumn columnSaleId;
            
            private global::System.Data.DataColumn columnVendorCode;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnDateOfJourney;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnTotalPayment;
            
            private global::System.Data.DataColumn columnVendorPaidAmount;
            
            private global::System.Data.DataColumn columnPendingAmount;
            
            private global::System.Data.DataColumn columnEngagedFor;
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnAddrs;
            
            private global::System.Data.DataColumn columnPhone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorPendingRegDataTable() {
                this.TableName = "VendorPendingReg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VendorPendingRegDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VendorPendingRegDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SaleIdColumn {
                get {
                    return this.columnSaleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOfJourneyColumn {
                get {
                    return this.columnDateOfJourney;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPaymentColumn {
                get {
                    return this.columnTotalPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorPaidAmountColumn {
                get {
                    return this.columnVendorPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PendingAmountColumn {
                get {
                    return this.columnPendingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EngagedForColumn {
                get {
                    return this.columnEngagedFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddrsColumn {
                get {
                    return this.columnAddrs;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorPendingRegRow this[int index] {
                get {
                    return ((VendorPendingRegRow)(this.Rows[index]));
                }
            }
            
            public event VendorPendingRegRowChangeEventHandler VendorPendingRegRowChanging;
            
            public event VendorPendingRegRowChangeEventHandler VendorPendingRegRowChanged;
            
            public event VendorPendingRegRowChangeEventHandler VendorPendingRegRowDeleting;
            
            public event VendorPendingRegRowChangeEventHandler VendorPendingRegRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVendorPendingRegRow(VendorPendingRegRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorPendingRegRow AddVendorPendingRegRow(long SaleId, string VendorCode, string VendorName, System.DateTime DateOfJourney, string SalesCode, decimal TotalPayment, decimal VendorPaidAmount, decimal PendingAmount, string EngagedFor, long VendorID, string Addrs, string Phone) {
                VendorPendingRegRow rowVendorPendingRegRow = ((VendorPendingRegRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SaleId,
                        VendorCode,
                        VendorName,
                        DateOfJourney,
                        SalesCode,
                        TotalPayment,
                        VendorPaidAmount,
                        PendingAmount,
                        EngagedFor,
                        VendorID,
                        Addrs,
                        Phone};
                rowVendorPendingRegRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVendorPendingRegRow);
                return rowVendorPendingRegRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VendorPendingRegDataTable cln = ((VendorPendingRegDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VendorPendingRegDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSaleId = base.Columns["SaleId"];
                this.columnVendorCode = base.Columns["VendorCode"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnDateOfJourney = base.Columns["DateOfJourney"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnTotalPayment = base.Columns["TotalPayment"];
                this.columnVendorPaidAmount = base.Columns["VendorPaidAmount"];
                this.columnPendingAmount = base.Columns["PendingAmount"];
                this.columnEngagedFor = base.Columns["EngagedFor"];
                this.columnVendorID = base.Columns["VendorID"];
                this.columnAddrs = base.Columns["Addrs"];
                this.columnPhone = base.Columns["Phone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSaleId = new global::System.Data.DataColumn("SaleId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSaleId);
                this.columnVendorCode = new global::System.Data.DataColumn("VendorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnDateOfJourney = new global::System.Data.DataColumn("DateOfJourney", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOfJourney);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnTotalPayment = new global::System.Data.DataColumn("TotalPayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPayment);
                this.columnVendorPaidAmount = new global::System.Data.DataColumn("VendorPaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorPaidAmount);
                this.columnPendingAmount = new global::System.Data.DataColumn("PendingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPendingAmount);
                this.columnEngagedFor = new global::System.Data.DataColumn("EngagedFor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEngagedFor);
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnAddrs = new global::System.Data.DataColumn("Addrs", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddrs);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorPendingRegRow NewVendorPendingRegRow() {
                return ((VendorPendingRegRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VendorPendingRegRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VendorPendingRegRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VendorPendingRegRowChanged != null)) {
                    this.VendorPendingRegRowChanged(this, new VendorPendingRegRowChangeEvent(((VendorPendingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VendorPendingRegRowChanging != null)) {
                    this.VendorPendingRegRowChanging(this, new VendorPendingRegRowChangeEvent(((VendorPendingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VendorPendingRegRowDeleted != null)) {
                    this.VendorPendingRegRowDeleted(this, new VendorPendingRegRowChangeEvent(((VendorPendingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VendorPendingRegRowDeleting != null)) {
                    this.VendorPendingRegRowDeleting(this, new VendorPendingRegRowChangeEvent(((VendorPendingRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVendorPendingRegRow(VendorPendingRegRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VendorPendingRegDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServiceRegisterDataTable : global::System.Data.TypedTableBase<ServiceRegisterRow> {
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnModelNumber;
            
            private global::System.Data.DataColumn columnProblem;
            
            private global::System.Data.DataColumn columnJobComputed;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnOtherRequirement;
            
            private global::System.Data.DataColumn columnCharges;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnFYID;
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnConTypeID;
            
            private global::System.Data.DataColumn columnProID;
            
            private global::System.Data.DataColumn columnZoneID;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnWarrantyDate;
            
            private global::System.Data.DataColumn columnTakenBy;
            
            private global::System.Data.DataColumn columnCallID;
            
            private global::System.Data.DataColumn columnTotalHours;
            
            private global::System.Data.DataColumn columnCall_Status;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnServicebill;
            
            private global::System.Data.DataColumn columnContactpersonName;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnAttendedBy;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCon_Name;
            
            private global::System.Data.DataColumn columnZone_name;
            
            private global::System.Data.DataColumn columnCall_Name;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnCounterReading;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceRegisterDataTable() {
                this.TableName = "ServiceRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ServiceRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNumberColumn {
                get {
                    return this.columnModelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemColumn {
                get {
                    return this.columnProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobComputedColumn {
                get {
                    return this.columnJobComputed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherRequirementColumn {
                get {
                    return this.columnOtherRequirement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesColumn {
                get {
                    return this.columnCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FYIDColumn {
                get {
                    return this.columnFYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConTypeIDColumn {
                get {
                    return this.columnConTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProIDColumn {
                get {
                    return this.columnProID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneIDColumn {
                get {
                    return this.columnZoneID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarrantyDateColumn {
                get {
                    return this.columnWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TakenByColumn {
                get {
                    return this.columnTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallIDColumn {
                get {
                    return this.columnCallID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalHoursColumn {
                get {
                    return this.columnTotalHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Call_StatusColumn {
                get {
                    return this.columnCall_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServicebillColumn {
                get {
                    return this.columnServicebill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactpersonNameColumn {
                get {
                    return this.columnContactpersonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendedByColumn {
                get {
                    return this.columnAttendedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Con_NameColumn {
                get {
                    return this.columnCon_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Zone_nameColumn {
                get {
                    return this.columnZone_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Call_NameColumn {
                get {
                    return this.columnCall_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CounterReadingColumn {
                get {
                    return this.columnCounterReading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceRegisterRow this[int index] {
                get {
                    return ((ServiceRegisterRow)(this.Rows[index]));
                }
            }
            
            public event ServiceRegisterRowChangeEventHandler ServiceRegisterRowChanging;
            
            public event ServiceRegisterRowChangeEventHandler ServiceRegisterRowChanged;
            
            public event ServiceRegisterRowChangeEventHandler ServiceRegisterRowDeleting;
            
            public event ServiceRegisterRowChangeEventHandler ServiceRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddServiceRegisterRow(ServiceRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceRegisterRow AddServiceRegisterRow(
                        long ServiceId, 
                        string RequestNo, 
                        System.DateTime ServiceDate, 
                        string CustomerName, 
                        string Address, 
                        string MobileNo, 
                        string ModelNumber, 
                        string Problem, 
                        string JobComputed, 
                        string Remarks, 
                        string OtherRequirement, 
                        decimal Charges, 
                        long CreatedBy, 
                        System.DateTime CreatedDate, 
                        long ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        long SIID, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long FYID, 
                        int GodownID, 
                        long CustomerID, 
                        int DeptID, 
                        int ConTypeID, 
                        int ProID, 
                        int ZoneID, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        System.DateTime WarrantyDate, 
                        long TakenBy, 
                        int CallID, 
                        string TotalHours, 
                        string Call_Status, 
                        string Description, 
                        string Servicebill, 
                        string ContactpersonName, 
                        string StartTime, 
                        string EndTime, 
                        string AttendedBy, 
                        string Dept_Name, 
                        string Con_Name, 
                        string Zone_name, 
                        string Call_Name, 
                        string ProductName, 
                        string SrNo, 
                        decimal CounterReading) {
                ServiceRegisterRow rowServiceRegisterRow = ((ServiceRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceId,
                        RequestNo,
                        ServiceDate,
                        CustomerName,
                        Address,
                        MobileNo,
                        ModelNumber,
                        Problem,
                        JobComputed,
                        Remarks,
                        OtherRequirement,
                        Charges,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        SIID,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        FYID,
                        GodownID,
                        CustomerID,
                        DeptID,
                        ConTypeID,
                        ProID,
                        ZoneID,
                        StartDate,
                        EndDate,
                        WarrantyDate,
                        TakenBy,
                        CallID,
                        TotalHours,
                        Call_Status,
                        Description,
                        Servicebill,
                        ContactpersonName,
                        StartTime,
                        EndTime,
                        AttendedBy,
                        Dept_Name,
                        Con_Name,
                        Zone_name,
                        Call_Name,
                        ProductName,
                        SrNo,
                        CounterReading};
                rowServiceRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServiceRegisterRow);
                return rowServiceRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ServiceRegisterDataTable cln = ((ServiceRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServiceRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnModelNumber = base.Columns["ModelNumber"];
                this.columnProblem = base.Columns["Problem"];
                this.columnJobComputed = base.Columns["JobComputed"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnOtherRequirement = base.Columns["OtherRequirement"];
                this.columnCharges = base.Columns["Charges"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnSIID = base.Columns["SIID"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnFYID = base.Columns["FYID"];
                this.columnGodownID = base.Columns["GodownID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnConTypeID = base.Columns["ConTypeID"];
                this.columnProID = base.Columns["ProID"];
                this.columnZoneID = base.Columns["ZoneID"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnWarrantyDate = base.Columns["WarrantyDate"];
                this.columnTakenBy = base.Columns["TakenBy"];
                this.columnCallID = base.Columns["CallID"];
                this.columnTotalHours = base.Columns["TotalHours"];
                this.columnCall_Status = base.Columns["Call_Status"];
                this.columnDescription = base.Columns["Description"];
                this.columnServicebill = base.Columns["Servicebill"];
                this.columnContactpersonName = base.Columns["ContactpersonName"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnAttendedBy = base.Columns["AttendedBy"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCon_Name = base.Columns["Con_Name"];
                this.columnZone_name = base.Columns["Zone_name"];
                this.columnCall_Name = base.Columns["Call_Name"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnSrNo = base.Columns["SrNo"];
                this.columnCounterReading = base.Columns["CounterReading"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnModelNumber = new global::System.Data.DataColumn("ModelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNumber);
                this.columnProblem = new global::System.Data.DataColumn("Problem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblem);
                this.columnJobComputed = new global::System.Data.DataColumn("JobComputed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobComputed);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnOtherRequirement = new global::System.Data.DataColumn("OtherRequirement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherRequirement);
                this.columnCharges = new global::System.Data.DataColumn("Charges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCharges);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnFYID = new global::System.Data.DataColumn("FYID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFYID);
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnConTypeID = new global::System.Data.DataColumn("ConTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConTypeID);
                this.columnProID = new global::System.Data.DataColumn("ProID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProID);
                this.columnZoneID = new global::System.Data.DataColumn("ZoneID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneID);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnWarrantyDate = new global::System.Data.DataColumn("WarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarrantyDate);
                this.columnTakenBy = new global::System.Data.DataColumn("TakenBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenBy);
                this.columnCallID = new global::System.Data.DataColumn("CallID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallID);
                this.columnTotalHours = new global::System.Data.DataColumn("TotalHours", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHours);
                this.columnCall_Status = new global::System.Data.DataColumn("Call_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Status);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnServicebill = new global::System.Data.DataColumn("Servicebill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServicebill);
                this.columnContactpersonName = new global::System.Data.DataColumn("ContactpersonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactpersonName);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnAttendedBy = new global::System.Data.DataColumn("AttendedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendedBy);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCon_Name = new global::System.Data.DataColumn("Con_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCon_Name);
                this.columnZone_name = new global::System.Data.DataColumn("Zone_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone_name);
                this.columnCall_Name = new global::System.Data.DataColumn("Call_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Name);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnCounterReading = new global::System.Data.DataColumn("CounterReading", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounterReading);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceRegisterRow NewServiceRegisterRow() {
                return ((ServiceRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServiceRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ServiceRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServiceRegisterRowChanged != null)) {
                    this.ServiceRegisterRowChanged(this, new ServiceRegisterRowChangeEvent(((ServiceRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServiceRegisterRowChanging != null)) {
                    this.ServiceRegisterRowChanging(this, new ServiceRegisterRowChangeEvent(((ServiceRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServiceRegisterRowDeleted != null)) {
                    this.ServiceRegisterRowDeleted(this, new ServiceRegisterRowChangeEvent(((ServiceRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServiceRegisterRowDeleting != null)) {
                    this.ServiceRegisterRowDeleting(this, new ServiceRegisterRowChangeEvent(((ServiceRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveServiceRegisterRow(ServiceRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServiceRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Service_Item_ListDataTable : global::System.Data.TypedTableBase<Service_Item_ListRow> {
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnITEM_NAME;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_Item_ListDataTable() {
                this.TableName = "Service_Item_List";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Service_Item_ListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Service_Item_ListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_NAMEColumn {
                get {
                    return this.columnITEM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_Item_ListRow this[int index] {
                get {
                    return ((Service_Item_ListRow)(this.Rows[index]));
                }
            }
            
            public event Service_Item_ListRowChangeEventHandler Service_Item_ListRowChanging;
            
            public event Service_Item_ListRowChangeEventHandler Service_Item_ListRowChanged;
            
            public event Service_Item_ListRowChangeEventHandler Service_Item_ListRowDeleting;
            
            public event Service_Item_ListRowChangeEventHandler Service_Item_ListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddService_Item_ListRow(Service_Item_ListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_Item_ListRow AddService_Item_ListRow(long ServiceId, string ItemDesc, string ITEM_NAME, string Qty, string UOM, string Rate) {
                Service_Item_ListRow rowService_Item_ListRow = ((Service_Item_ListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceId,
                        ItemDesc,
                        ITEM_NAME,
                        Qty,
                        UOM,
                        Rate};
                rowService_Item_ListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowService_Item_ListRow);
                return rowService_Item_ListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Service_Item_ListDataTable cln = ((Service_Item_ListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Service_Item_ListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnITEM_NAME = base.Columns["ITEM_NAME"];
                this.columnQty = base.Columns["Qty"];
                this.columnUOM = base.Columns["UOM"];
                this.columnRate = base.Columns["Rate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnITEM_NAME = new global::System.Data.DataColumn("ITEM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_NAME);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_Item_ListRow NewService_Item_ListRow() {
                return ((Service_Item_ListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Service_Item_ListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Service_Item_ListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Service_Item_ListRowChanged != null)) {
                    this.Service_Item_ListRowChanged(this, new Service_Item_ListRowChangeEvent(((Service_Item_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Service_Item_ListRowChanging != null)) {
                    this.Service_Item_ListRowChanging(this, new Service_Item_ListRowChangeEvent(((Service_Item_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Service_Item_ListRowDeleted != null)) {
                    this.Service_Item_ListRowDeleted(this, new Service_Item_ListRowChangeEvent(((Service_Item_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Service_Item_ListRowDeleting != null)) {
                    this.Service_Item_ListRowDeleting(this, new Service_Item_ListRowChangeEvent(((Service_Item_ListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveService_Item_ListRow(Service_Item_ListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Service_Item_ListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InvoiceAllDataTable : global::System.Data.TypedTableBase<InvoiceAllRow> {
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnModelNumber;
            
            private global::System.Data.DataColumn columnProblem;
            
            private global::System.Data.DataColumn columnJobComputed;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnOtherRequirement;
            
            private global::System.Data.DataColumn columnCharges;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnFYID;
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnConTypeID;
            
            private global::System.Data.DataColumn columnProID;
            
            private global::System.Data.DataColumn columnZoneID;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnWarrantyDate;
            
            private global::System.Data.DataColumn columnTakenBy;
            
            private global::System.Data.DataColumn columnCallID;
            
            private global::System.Data.DataColumn columnTotalHours;
            
            private global::System.Data.DataColumn columnCall_Status;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnServicebill;
            
            private global::System.Data.DataColumn columnContactpersonName;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnAttendedBy;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCon_Name;
            
            private global::System.Data.DataColumn columnZone_name;
            
            private global::System.Data.DataColumn columnCall_Name;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnCounterReading;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceAllDataTable() {
                this.TableName = "InvoiceAll";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoiceAllDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InvoiceAllDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNumberColumn {
                get {
                    return this.columnModelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemColumn {
                get {
                    return this.columnProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobComputedColumn {
                get {
                    return this.columnJobComputed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherRequirementColumn {
                get {
                    return this.columnOtherRequirement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesColumn {
                get {
                    return this.columnCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FYIDColumn {
                get {
                    return this.columnFYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConTypeIDColumn {
                get {
                    return this.columnConTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProIDColumn {
                get {
                    return this.columnProID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneIDColumn {
                get {
                    return this.columnZoneID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarrantyDateColumn {
                get {
                    return this.columnWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TakenByColumn {
                get {
                    return this.columnTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallIDColumn {
                get {
                    return this.columnCallID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalHoursColumn {
                get {
                    return this.columnTotalHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Call_StatusColumn {
                get {
                    return this.columnCall_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServicebillColumn {
                get {
                    return this.columnServicebill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactpersonNameColumn {
                get {
                    return this.columnContactpersonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendedByColumn {
                get {
                    return this.columnAttendedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Con_NameColumn {
                get {
                    return this.columnCon_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Zone_nameColumn {
                get {
                    return this.columnZone_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Call_NameColumn {
                get {
                    return this.columnCall_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CounterReadingColumn {
                get {
                    return this.columnCounterReading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceAllRow this[int index] {
                get {
                    return ((InvoiceAllRow)(this.Rows[index]));
                }
            }
            
            public event InvoiceAllRowChangeEventHandler InvoiceAllRowChanging;
            
            public event InvoiceAllRowChangeEventHandler InvoiceAllRowChanged;
            
            public event InvoiceAllRowChangeEventHandler InvoiceAllRowDeleting;
            
            public event InvoiceAllRowChangeEventHandler InvoiceAllRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInvoiceAllRow(InvoiceAllRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceAllRow AddInvoiceAllRow(
                        long ServiceId, 
                        string RequestNo, 
                        System.DateTime ServiceDate, 
                        string CustomerName, 
                        string Address, 
                        string MobileNo, 
                        string ModelNumber, 
                        string Problem, 
                        string JobComputed, 
                        string Remarks, 
                        string OtherRequirement, 
                        decimal Charges, 
                        long CreatedBy, 
                        System.DateTime CreatedDate, 
                        long ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        long SIID, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long FYID, 
                        int GodownID, 
                        long CustomerID, 
                        int DeptID, 
                        int ConTypeID, 
                        int ProID, 
                        int ZoneID, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        System.DateTime WarrantyDate, 
                        long TakenBy, 
                        int CallID, 
                        string TotalHours, 
                        string Call_Status, 
                        string Description, 
                        string Servicebill, 
                        string ContactpersonName, 
                        string StartTime, 
                        string EndTime, 
                        string AttendedBy, 
                        string Dept_Name, 
                        string Con_Name, 
                        string Zone_name, 
                        string Call_Name, 
                        string ProductName, 
                        string SrNo, 
                        string CounterReading) {
                InvoiceAllRow rowInvoiceAllRow = ((InvoiceAllRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceId,
                        RequestNo,
                        ServiceDate,
                        CustomerName,
                        Address,
                        MobileNo,
                        ModelNumber,
                        Problem,
                        JobComputed,
                        Remarks,
                        OtherRequirement,
                        Charges,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        SIID,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        FYID,
                        GodownID,
                        CustomerID,
                        DeptID,
                        ConTypeID,
                        ProID,
                        ZoneID,
                        StartDate,
                        EndDate,
                        WarrantyDate,
                        TakenBy,
                        CallID,
                        TotalHours,
                        Call_Status,
                        Description,
                        Servicebill,
                        ContactpersonName,
                        StartTime,
                        EndTime,
                        AttendedBy,
                        Dept_Name,
                        Con_Name,
                        Zone_name,
                        Call_Name,
                        ProductName,
                        SrNo,
                        CounterReading};
                rowInvoiceAllRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoiceAllRow);
                return rowInvoiceAllRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InvoiceAllDataTable cln = ((InvoiceAllDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InvoiceAllDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnModelNumber = base.Columns["ModelNumber"];
                this.columnProblem = base.Columns["Problem"];
                this.columnJobComputed = base.Columns["JobComputed"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnOtherRequirement = base.Columns["OtherRequirement"];
                this.columnCharges = base.Columns["Charges"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnSIID = base.Columns["SIID"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnFYID = base.Columns["FYID"];
                this.columnGodownID = base.Columns["GodownID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnConTypeID = base.Columns["ConTypeID"];
                this.columnProID = base.Columns["ProID"];
                this.columnZoneID = base.Columns["ZoneID"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnWarrantyDate = base.Columns["WarrantyDate"];
                this.columnTakenBy = base.Columns["TakenBy"];
                this.columnCallID = base.Columns["CallID"];
                this.columnTotalHours = base.Columns["TotalHours"];
                this.columnCall_Status = base.Columns["Call_Status"];
                this.columnDescription = base.Columns["Description"];
                this.columnServicebill = base.Columns["Servicebill"];
                this.columnContactpersonName = base.Columns["ContactpersonName"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnAttendedBy = base.Columns["AttendedBy"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCon_Name = base.Columns["Con_Name"];
                this.columnZone_name = base.Columns["Zone_name"];
                this.columnCall_Name = base.Columns["Call_Name"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnSrNo = base.Columns["SrNo"];
                this.columnCounterReading = base.Columns["CounterReading"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnModelNumber = new global::System.Data.DataColumn("ModelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNumber);
                this.columnProblem = new global::System.Data.DataColumn("Problem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblem);
                this.columnJobComputed = new global::System.Data.DataColumn("JobComputed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobComputed);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnOtherRequirement = new global::System.Data.DataColumn("OtherRequirement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherRequirement);
                this.columnCharges = new global::System.Data.DataColumn("Charges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCharges);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnFYID = new global::System.Data.DataColumn("FYID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFYID);
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnConTypeID = new global::System.Data.DataColumn("ConTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConTypeID);
                this.columnProID = new global::System.Data.DataColumn("ProID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProID);
                this.columnZoneID = new global::System.Data.DataColumn("ZoneID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneID);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnWarrantyDate = new global::System.Data.DataColumn("WarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarrantyDate);
                this.columnTakenBy = new global::System.Data.DataColumn("TakenBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenBy);
                this.columnCallID = new global::System.Data.DataColumn("CallID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallID);
                this.columnTotalHours = new global::System.Data.DataColumn("TotalHours", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHours);
                this.columnCall_Status = new global::System.Data.DataColumn("Call_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Status);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnServicebill = new global::System.Data.DataColumn("Servicebill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServicebill);
                this.columnContactpersonName = new global::System.Data.DataColumn("ContactpersonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactpersonName);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnAttendedBy = new global::System.Data.DataColumn("AttendedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendedBy);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCon_Name = new global::System.Data.DataColumn("Con_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCon_Name);
                this.columnZone_name = new global::System.Data.DataColumn("Zone_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone_name);
                this.columnCall_Name = new global::System.Data.DataColumn("Call_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Name);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnCounterReading = new global::System.Data.DataColumn("CounterReading", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounterReading);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceAllRow NewInvoiceAllRow() {
                return ((InvoiceAllRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InvoiceAllRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InvoiceAllRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InvoiceAllRowChanged != null)) {
                    this.InvoiceAllRowChanged(this, new InvoiceAllRowChangeEvent(((InvoiceAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InvoiceAllRowChanging != null)) {
                    this.InvoiceAllRowChanging(this, new InvoiceAllRowChangeEvent(((InvoiceAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InvoiceAllRowDeleted != null)) {
                    this.InvoiceAllRowDeleted(this, new InvoiceAllRowChangeEvent(((InvoiceAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InvoiceAllRowDeleting != null)) {
                    this.InvoiceAllRowDeleting(this, new InvoiceAllRowChangeEvent(((InvoiceAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInvoiceAllRow(InvoiceAllRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InvoiceAllDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InvoicePageDataTable : global::System.Data.TypedTableBase<InvoicePageRow> {
            
            private global::System.Data.DataColumn columnClosingCounter;
            
            private global::System.Data.DataColumn columnOpeningCounter;
            
            private global::System.Data.DataColumn columnTotalCopies;
            
            private global::System.Data.DataColumn columnMinCopies;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnPageDesc;
            
            private global::System.Data.DataColumn columnServiceId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoicePageDataTable() {
                this.TableName = "InvoicePage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoicePageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InvoicePageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClosingCounterColumn {
                get {
                    return this.columnClosingCounter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OpeningCounterColumn {
                get {
                    return this.columnOpeningCounter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalCopiesColumn {
                get {
                    return this.columnTotalCopies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MinCopiesColumn {
                get {
                    return this.columnMinCopies;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageDescColumn {
                get {
                    return this.columnPageDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoicePageRow this[int index] {
                get {
                    return ((InvoicePageRow)(this.Rows[index]));
                }
            }
            
            public event InvoicePageRowChangeEventHandler InvoicePageRowChanging;
            
            public event InvoicePageRowChangeEventHandler InvoicePageRowChanged;
            
            public event InvoicePageRowChangeEventHandler InvoicePageRowDeleting;
            
            public event InvoicePageRowChangeEventHandler InvoicePageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInvoicePageRow(InvoicePageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoicePageRow AddInvoicePageRow(decimal ClosingCounter, decimal OpeningCounter, decimal TotalCopies, decimal MinCopies, decimal Rate, decimal Total, string PageDesc, long ServiceId) {
                InvoicePageRow rowInvoicePageRow = ((InvoicePageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClosingCounter,
                        OpeningCounter,
                        TotalCopies,
                        MinCopies,
                        Rate,
                        Total,
                        PageDesc,
                        ServiceId};
                rowInvoicePageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoicePageRow);
                return rowInvoicePageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InvoicePageDataTable cln = ((InvoicePageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InvoicePageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnClosingCounter = base.Columns["ClosingCounter"];
                this.columnOpeningCounter = base.Columns["OpeningCounter"];
                this.columnTotalCopies = base.Columns["TotalCopies"];
                this.columnMinCopies = base.Columns["MinCopies"];
                this.columnRate = base.Columns["Rate"];
                this.columnTotal = base.Columns["Total"];
                this.columnPageDesc = base.Columns["PageDesc"];
                this.columnServiceId = base.Columns["ServiceId"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnClosingCounter = new global::System.Data.DataColumn("ClosingCounter", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClosingCounter);
                this.columnOpeningCounter = new global::System.Data.DataColumn("OpeningCounter", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpeningCounter);
                this.columnTotalCopies = new global::System.Data.DataColumn("TotalCopies", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalCopies);
                this.columnMinCopies = new global::System.Data.DataColumn("MinCopies", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinCopies);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnPageDesc = new global::System.Data.DataColumn("PageDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageDesc);
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoicePageRow NewInvoicePageRow() {
                return ((InvoicePageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InvoicePageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InvoicePageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InvoicePageRowChanged != null)) {
                    this.InvoicePageRowChanged(this, new InvoicePageRowChangeEvent(((InvoicePageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InvoicePageRowChanging != null)) {
                    this.InvoicePageRowChanging(this, new InvoicePageRowChangeEvent(((InvoicePageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InvoicePageRowDeleted != null)) {
                    this.InvoicePageRowDeleted(this, new InvoicePageRowChangeEvent(((InvoicePageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InvoicePageRowDeleting != null)) {
                    this.InvoicePageRowDeleting(this, new InvoicePageRowChangeEvent(((InvoicePageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInvoicePageRow(InvoicePageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InvoicePageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesInvoice_NewDataTable : global::System.Data.TypedTableBase<SalesInvoice_NewRow> {
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnModelNumber;
            
            private global::System.Data.DataColumn columnProblem;
            
            private global::System.Data.DataColumn columnJobComputed;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnOtherRequirement;
            
            private global::System.Data.DataColumn columnCharges;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnFYID;
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnConTypeID;
            
            private global::System.Data.DataColumn columnProID;
            
            private global::System.Data.DataColumn columnZoneID;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnWarrantyDate;
            
            private global::System.Data.DataColumn columnTakenBy;
            
            private global::System.Data.DataColumn columnCallID;
            
            private global::System.Data.DataColumn columnTotalHours;
            
            private global::System.Data.DataColumn columnCall_Status;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnServicebill;
            
            private global::System.Data.DataColumn columnContactpersonName;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnAttendedBy;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCon_Name;
            
            private global::System.Data.DataColumn columnZone_name;
            
            private global::System.Data.DataColumn columnCall_Name;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnCounterReading;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_NewDataTable() {
                this.TableName = "SalesInvoice_New";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoice_NewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesInvoice_NewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNumberColumn {
                get {
                    return this.columnModelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemColumn {
                get {
                    return this.columnProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobComputedColumn {
                get {
                    return this.columnJobComputed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherRequirementColumn {
                get {
                    return this.columnOtherRequirement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesColumn {
                get {
                    return this.columnCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FYIDColumn {
                get {
                    return this.columnFYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConTypeIDColumn {
                get {
                    return this.columnConTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProIDColumn {
                get {
                    return this.columnProID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneIDColumn {
                get {
                    return this.columnZoneID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarrantyDateColumn {
                get {
                    return this.columnWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TakenByColumn {
                get {
                    return this.columnTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallIDColumn {
                get {
                    return this.columnCallID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalHoursColumn {
                get {
                    return this.columnTotalHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Call_StatusColumn {
                get {
                    return this.columnCall_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServicebillColumn {
                get {
                    return this.columnServicebill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactpersonNameColumn {
                get {
                    return this.columnContactpersonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendedByColumn {
                get {
                    return this.columnAttendedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Con_NameColumn {
                get {
                    return this.columnCon_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Zone_nameColumn {
                get {
                    return this.columnZone_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Call_NameColumn {
                get {
                    return this.columnCall_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CounterReadingColumn {
                get {
                    return this.columnCounterReading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_NewRow this[int index] {
                get {
                    return ((SalesInvoice_NewRow)(this.Rows[index]));
                }
            }
            
            public event SalesInvoice_NewRowChangeEventHandler SalesInvoice_NewRowChanging;
            
            public event SalesInvoice_NewRowChangeEventHandler SalesInvoice_NewRowChanged;
            
            public event SalesInvoice_NewRowChangeEventHandler SalesInvoice_NewRowDeleting;
            
            public event SalesInvoice_NewRowChangeEventHandler SalesInvoice_NewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesInvoice_NewRow(SalesInvoice_NewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_NewRow AddSalesInvoice_NewRow(
                        long ServiceId, 
                        string RequestNo, 
                        System.DateTime ServiceDate, 
                        string CustomerName, 
                        string Address, 
                        string MobileNo, 
                        string ModelNumber, 
                        string Problem, 
                        string JobComputed, 
                        string Remarks, 
                        string OtherRequirement, 
                        decimal Charges, 
                        long CreatedBy, 
                        System.DateTime CreatedDate, 
                        long ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        long SIID, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long FYID, 
                        int GodownID, 
                        long CustomerID, 
                        int DeptID, 
                        int ConTypeID, 
                        int ProID, 
                        int ZoneID, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        System.DateTime WarrantyDate, 
                        long TakenBy, 
                        int CallID, 
                        string TotalHours, 
                        string Call_Status, 
                        string Description, 
                        string Servicebill, 
                        string ContactpersonName, 
                        string StartTime, 
                        string EndTime, 
                        string AttendedBy, 
                        string Dept_Name, 
                        string Con_Name, 
                        string Zone_name, 
                        string Call_Name, 
                        string ProductName, 
                        string SrNo, 
                        string CounterReading) {
                SalesInvoice_NewRow rowSalesInvoice_NewRow = ((SalesInvoice_NewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceId,
                        RequestNo,
                        ServiceDate,
                        CustomerName,
                        Address,
                        MobileNo,
                        ModelNumber,
                        Problem,
                        JobComputed,
                        Remarks,
                        OtherRequirement,
                        Charges,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        SIID,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        FYID,
                        GodownID,
                        CustomerID,
                        DeptID,
                        ConTypeID,
                        ProID,
                        ZoneID,
                        StartDate,
                        EndDate,
                        WarrantyDate,
                        TakenBy,
                        CallID,
                        TotalHours,
                        Call_Status,
                        Description,
                        Servicebill,
                        ContactpersonName,
                        StartTime,
                        EndTime,
                        AttendedBy,
                        Dept_Name,
                        Con_Name,
                        Zone_name,
                        Call_Name,
                        ProductName,
                        SrNo,
                        CounterReading};
                rowSalesInvoice_NewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesInvoice_NewRow);
                return rowSalesInvoice_NewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesInvoice_NewDataTable cln = ((SalesInvoice_NewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesInvoice_NewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnModelNumber = base.Columns["ModelNumber"];
                this.columnProblem = base.Columns["Problem"];
                this.columnJobComputed = base.Columns["JobComputed"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnOtherRequirement = base.Columns["OtherRequirement"];
                this.columnCharges = base.Columns["Charges"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnSIID = base.Columns["SIID"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnFYID = base.Columns["FYID"];
                this.columnGodownID = base.Columns["GodownID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnConTypeID = base.Columns["ConTypeID"];
                this.columnProID = base.Columns["ProID"];
                this.columnZoneID = base.Columns["ZoneID"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnWarrantyDate = base.Columns["WarrantyDate"];
                this.columnTakenBy = base.Columns["TakenBy"];
                this.columnCallID = base.Columns["CallID"];
                this.columnTotalHours = base.Columns["TotalHours"];
                this.columnCall_Status = base.Columns["Call_Status"];
                this.columnDescription = base.Columns["Description"];
                this.columnServicebill = base.Columns["Servicebill"];
                this.columnContactpersonName = base.Columns["ContactpersonName"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnAttendedBy = base.Columns["AttendedBy"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCon_Name = base.Columns["Con_Name"];
                this.columnZone_name = base.Columns["Zone_name"];
                this.columnCall_Name = base.Columns["Call_Name"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnSrNo = base.Columns["SrNo"];
                this.columnCounterReading = base.Columns["CounterReading"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnModelNumber = new global::System.Data.DataColumn("ModelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNumber);
                this.columnProblem = new global::System.Data.DataColumn("Problem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblem);
                this.columnJobComputed = new global::System.Data.DataColumn("JobComputed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobComputed);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnOtherRequirement = new global::System.Data.DataColumn("OtherRequirement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherRequirement);
                this.columnCharges = new global::System.Data.DataColumn("Charges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCharges);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnFYID = new global::System.Data.DataColumn("FYID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFYID);
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnConTypeID = new global::System.Data.DataColumn("ConTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConTypeID);
                this.columnProID = new global::System.Data.DataColumn("ProID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProID);
                this.columnZoneID = new global::System.Data.DataColumn("ZoneID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneID);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnWarrantyDate = new global::System.Data.DataColumn("WarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarrantyDate);
                this.columnTakenBy = new global::System.Data.DataColumn("TakenBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenBy);
                this.columnCallID = new global::System.Data.DataColumn("CallID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallID);
                this.columnTotalHours = new global::System.Data.DataColumn("TotalHours", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHours);
                this.columnCall_Status = new global::System.Data.DataColumn("Call_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Status);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnServicebill = new global::System.Data.DataColumn("Servicebill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServicebill);
                this.columnContactpersonName = new global::System.Data.DataColumn("ContactpersonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactpersonName);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnAttendedBy = new global::System.Data.DataColumn("AttendedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendedBy);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCon_Name = new global::System.Data.DataColumn("Con_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCon_Name);
                this.columnZone_name = new global::System.Data.DataColumn("Zone_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone_name);
                this.columnCall_Name = new global::System.Data.DataColumn("Call_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Name);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnCounterReading = new global::System.Data.DataColumn("CounterReading", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounterReading);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_NewRow NewSalesInvoice_NewRow() {
                return ((SalesInvoice_NewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesInvoice_NewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesInvoice_NewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesInvoice_NewRowChanged != null)) {
                    this.SalesInvoice_NewRowChanged(this, new SalesInvoice_NewRowChangeEvent(((SalesInvoice_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesInvoice_NewRowChanging != null)) {
                    this.SalesInvoice_NewRowChanging(this, new SalesInvoice_NewRowChangeEvent(((SalesInvoice_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesInvoice_NewRowDeleted != null)) {
                    this.SalesInvoice_NewRowDeleted(this, new SalesInvoice_NewRowChangeEvent(((SalesInvoice_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesInvoice_NewRowDeleting != null)) {
                    this.SalesInvoice_NewRowDeleting(this, new SalesInvoice_NewRowChangeEvent(((SalesInvoice_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesInvoice_NewRow(SalesInvoice_NewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesInvoice_NewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesInvoice_PageDataTable : global::System.Data.TypedTableBase<SalesInvoice_PageRow> {
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnPageDesc;
            
            private global::System.Data.DataColumn columnPageID;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnTax;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnPageDescDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_PageDataTable() {
                this.TableName = "SalesInvoice_Page";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoice_PageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesInvoice_PageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageDescColumn {
                get {
                    return this.columnPageDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageIDColumn {
                get {
                    return this.columnPageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxColumn {
                get {
                    return this.columnTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageDescDetailColumn {
                get {
                    return this.columnPageDescDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_PageRow this[int index] {
                get {
                    return ((SalesInvoice_PageRow)(this.Rows[index]));
                }
            }
            
            public event SalesInvoice_PageRowChangeEventHandler SalesInvoice_PageRowChanging;
            
            public event SalesInvoice_PageRowChangeEventHandler SalesInvoice_PageRowChanged;
            
            public event SalesInvoice_PageRowChangeEventHandler SalesInvoice_PageRowDeleting;
            
            public event SalesInvoice_PageRowChangeEventHandler SalesInvoice_PageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesInvoice_PageRow(SalesInvoice_PageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_PageRow AddSalesInvoice_PageRow(long SIID, string PageDesc, long PageID, decimal Rate, decimal Tax, decimal Total, string PageDescDetail) {
                SalesInvoice_PageRow rowSalesInvoice_PageRow = ((SalesInvoice_PageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SIID,
                        PageDesc,
                        PageID,
                        Rate,
                        Tax,
                        Total,
                        PageDescDetail};
                rowSalesInvoice_PageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesInvoice_PageRow);
                return rowSalesInvoice_PageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesInvoice_PageDataTable cln = ((SalesInvoice_PageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesInvoice_PageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSIID = base.Columns["SIID"];
                this.columnPageDesc = base.Columns["PageDesc"];
                this.columnPageID = base.Columns["PageID"];
                this.columnRate = base.Columns["Rate"];
                this.columnTax = base.Columns["Tax"];
                this.columnTotal = base.Columns["Total"];
                this.columnPageDescDetail = base.Columns["PageDescDetail"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnPageDesc = new global::System.Data.DataColumn("PageDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageDesc);
                this.columnPageID = new global::System.Data.DataColumn("PageID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageID);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnTax = new global::System.Data.DataColumn("Tax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnPageDescDetail = new global::System.Data.DataColumn("PageDescDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageDescDetail);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_PageRow NewSalesInvoice_PageRow() {
                return ((SalesInvoice_PageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesInvoice_PageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesInvoice_PageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesInvoice_PageRowChanged != null)) {
                    this.SalesInvoice_PageRowChanged(this, new SalesInvoice_PageRowChangeEvent(((SalesInvoice_PageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesInvoice_PageRowChanging != null)) {
                    this.SalesInvoice_PageRowChanging(this, new SalesInvoice_PageRowChangeEvent(((SalesInvoice_PageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesInvoice_PageRowDeleted != null)) {
                    this.SalesInvoice_PageRowDeleted(this, new SalesInvoice_PageRowChangeEvent(((SalesInvoice_PageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesInvoice_PageRowDeleting != null)) {
                    this.SalesInvoice_PageRowDeleting(this, new SalesInvoice_PageRowChangeEvent(((SalesInvoice_PageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesInvoice_PageRow(SalesInvoice_PageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesInvoice_PageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Invoice_NewDataTable : global::System.Data.TypedTableBase<Invoice_NewRow> {
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnProID;
            
            private global::System.Data.DataColumn columnZoneID;
            
            private global::System.Data.DataColumn columnWarrantyDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnConTypeID;
            
            private global::System.Data.DataColumn columnDept_Name;
            
            private global::System.Data.DataColumn columnCon_Name;
            
            private global::System.Data.DataColumn columnNameOfProduct;
            
            private global::System.Data.DataColumn columnZone_name;
            
            private global::System.Data.DataColumn columnGodown_name;
            
            private global::System.Data.DataColumn columnEmpname;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnContactPersonName;
            
            private global::System.Data.DataColumn columnContactPersonPhno;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnModelNo;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_NewDataTable() {
                this.TableName = "Invoice_New";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Invoice_NewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Invoice_NewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProIDColumn {
                get {
                    return this.columnProID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneIDColumn {
                get {
                    return this.columnZoneID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarrantyDateColumn {
                get {
                    return this.columnWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConTypeIDColumn {
                get {
                    return this.columnConTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Dept_NameColumn {
                get {
                    return this.columnDept_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Con_NameColumn {
                get {
                    return this.columnCon_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameOfProductColumn {
                get {
                    return this.columnNameOfProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Zone_nameColumn {
                get {
                    return this.columnZone_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Godown_nameColumn {
                get {
                    return this.columnGodown_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpnameColumn {
                get {
                    return this.columnEmpname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersonNameColumn {
                get {
                    return this.columnContactPersonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersonPhnoColumn {
                get {
                    return this.columnContactPersonPhno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNoColumn {
                get {
                    return this.columnModelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_NewRow this[int index] {
                get {
                    return ((Invoice_NewRow)(this.Rows[index]));
                }
            }
            
            public event Invoice_NewRowChangeEventHandler Invoice_NewRowChanging;
            
            public event Invoice_NewRowChangeEventHandler Invoice_NewRowChanged;
            
            public event Invoice_NewRowChangeEventHandler Invoice_NewRowDeleting;
            
            public event Invoice_NewRowChangeEventHandler Invoice_NewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInvoice_NewRow(Invoice_NewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_NewRow AddInvoice_NewRow(
                        long SIID, 
                        string SalesCode, 
                        System.DateTime SalesDate, 
                        long CustomerID, 
                        string Code, 
                        string CustomerName, 
                        int GodownID, 
                        int ProID, 
                        int ZoneID, 
                        System.DateTime WarrantyDate, 
                        System.DateTime EndDate, 
                        System.DateTime StartDate, 
                        int DeptID, 
                        int ConTypeID, 
                        string Dept_Name, 
                        string Con_Name, 
                        string NameOfProduct, 
                        string Zone_name, 
                        string Godown_name, 
                        string Empname, 
                        string Category, 
                        string Brand, 
                        string ContactPersonName, 
                        string ContactPersonPhno, 
                        string Address1, 
                        string SrNo, 
                        string ModelNo, 
                        System.DateTime CreatedDate) {
                Invoice_NewRow rowInvoice_NewRow = ((Invoice_NewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SIID,
                        SalesCode,
                        SalesDate,
                        CustomerID,
                        Code,
                        CustomerName,
                        GodownID,
                        ProID,
                        ZoneID,
                        WarrantyDate,
                        EndDate,
                        StartDate,
                        DeptID,
                        ConTypeID,
                        Dept_Name,
                        Con_Name,
                        NameOfProduct,
                        Zone_name,
                        Godown_name,
                        Empname,
                        Category,
                        Brand,
                        ContactPersonName,
                        ContactPersonPhno,
                        Address1,
                        SrNo,
                        ModelNo,
                        CreatedDate};
                rowInvoice_NewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoice_NewRow);
                return rowInvoice_NewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Invoice_NewDataTable cln = ((Invoice_NewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Invoice_NewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSIID = base.Columns["SIID"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCode = base.Columns["Code"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnGodownID = base.Columns["GodownID"];
                this.columnProID = base.Columns["ProID"];
                this.columnZoneID = base.Columns["ZoneID"];
                this.columnWarrantyDate = base.Columns["WarrantyDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnConTypeID = base.Columns["ConTypeID"];
                this.columnDept_Name = base.Columns["Dept_Name"];
                this.columnCon_Name = base.Columns["Con_Name"];
                this.columnNameOfProduct = base.Columns["NameOfProduct"];
                this.columnZone_name = base.Columns["Zone_name"];
                this.columnGodown_name = base.Columns["Godown_name"];
                this.columnEmpname = base.Columns["Empname"];
                this.columnCategory = base.Columns["Category"];
                this.columnBrand = base.Columns["Brand"];
                this.columnContactPersonName = base.Columns["ContactPersonName"];
                this.columnContactPersonPhno = base.Columns["ContactPersonPhno"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnSrNo = base.Columns["SrNo"];
                this.columnModelNo = base.Columns["ModelNo"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnProID = new global::System.Data.DataColumn("ProID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProID);
                this.columnZoneID = new global::System.Data.DataColumn("ZoneID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneID);
                this.columnWarrantyDate = new global::System.Data.DataColumn("WarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarrantyDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnConTypeID = new global::System.Data.DataColumn("ConTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConTypeID);
                this.columnDept_Name = new global::System.Data.DataColumn("Dept_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDept_Name);
                this.columnCon_Name = new global::System.Data.DataColumn("Con_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCon_Name);
                this.columnNameOfProduct = new global::System.Data.DataColumn("NameOfProduct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameOfProduct);
                this.columnZone_name = new global::System.Data.DataColumn("Zone_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone_name);
                this.columnGodown_name = new global::System.Data.DataColumn("Godown_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodown_name);
                this.columnEmpname = new global::System.Data.DataColumn("Empname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpname);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnContactPersonName = new global::System.Data.DataColumn("ContactPersonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPersonName);
                this.columnContactPersonPhno = new global::System.Data.DataColumn("ContactPersonPhno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPersonPhno);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnModelNo = new global::System.Data.DataColumn("ModelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNo);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_NewRow NewInvoice_NewRow() {
                return ((Invoice_NewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Invoice_NewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Invoice_NewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Invoice_NewRowChanged != null)) {
                    this.Invoice_NewRowChanged(this, new Invoice_NewRowChangeEvent(((Invoice_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Invoice_NewRowChanging != null)) {
                    this.Invoice_NewRowChanging(this, new Invoice_NewRowChangeEvent(((Invoice_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Invoice_NewRowDeleted != null)) {
                    this.Invoice_NewRowDeleted(this, new Invoice_NewRowChangeEvent(((Invoice_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Invoice_NewRowDeleting != null)) {
                    this.Invoice_NewRowDeleting(this, new Invoice_NewRowChangeEvent(((Invoice_NewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInvoice_NewRow(Invoice_NewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Invoice_NewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Invoice_New_ItemDataTable : global::System.Data.TypedTableBase<Invoice_New_ItemRow> {
            
            private global::System.Data.DataColumn columnServiceDetailID;
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnExpr1;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnAVAT;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnCST;
            
            private global::System.Data.DataColumn columnServiceTax;
            
            private global::System.Data.DataColumn columnHEduCess;
            
            private global::System.Data.DataColumn columnEduCess;
            
            private global::System.Data.DataColumn columnExcise;
            
            private global::System.Data.DataColumn columnItem_Name;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_New_ItemDataTable() {
                this.TableName = "Invoice_New_Item";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Invoice_New_ItemDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Invoice_New_ItemDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDetailIDColumn {
                get {
                    return this.columnServiceDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATColumn {
                get {
                    return this.columnAVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTColumn {
                get {
                    return this.columnCST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceTaxColumn {
                get {
                    return this.columnServiceTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HEduCessColumn {
                get {
                    return this.columnHEduCess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EduCessColumn {
                get {
                    return this.columnEduCess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseColumn {
                get {
                    return this.columnExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_NameColumn {
                get {
                    return this.columnItem_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_New_ItemRow this[int index] {
                get {
                    return ((Invoice_New_ItemRow)(this.Rows[index]));
                }
            }
            
            public event Invoice_New_ItemRowChangeEventHandler Invoice_New_ItemRowChanging;
            
            public event Invoice_New_ItemRowChangeEventHandler Invoice_New_ItemRowChanged;
            
            public event Invoice_New_ItemRowChangeEventHandler Invoice_New_ItemRowDeleting;
            
            public event Invoice_New_ItemRowChangeEventHandler Invoice_New_ItemRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInvoice_New_ItemRow(Invoice_New_ItemRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_New_ItemRow AddInvoice_New_ItemRow(
                        long ServiceDetailID, 
                        long ServiceId, 
                        long ItemID, 
                        string ItemDesc, 
                        decimal NetAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Expr1, 
                        decimal Discount, 
                        decimal PaidAmount, 
                        decimal AVAT, 
                        decimal VAT, 
                        decimal CST, 
                        decimal ServiceTax, 
                        decimal HEduCess, 
                        decimal EduCess, 
                        decimal Excise, 
                        string Item_Name, 
                        decimal Qty, 
                        decimal Rate, 
                        decimal Amount) {
                Invoice_New_ItemRow rowInvoice_New_ItemRow = ((Invoice_New_ItemRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceDetailID,
                        ServiceId,
                        ItemID,
                        ItemDesc,
                        NetAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Expr1,
                        Discount,
                        PaidAmount,
                        AVAT,
                        VAT,
                        CST,
                        ServiceTax,
                        HEduCess,
                        EduCess,
                        Excise,
                        Item_Name,
                        Qty,
                        Rate,
                        Amount};
                rowInvoice_New_ItemRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoice_New_ItemRow);
                return rowInvoice_New_ItemRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Invoice_New_ItemDataTable cln = ((Invoice_New_ItemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Invoice_New_ItemDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceDetailID = base.Columns["ServiceDetailID"];
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnExpr1 = base.Columns["Expr1"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnAVAT = base.Columns["AVAT"];
                this.columnVAT = base.Columns["VAT"];
                this.columnCST = base.Columns["CST"];
                this.columnServiceTax = base.Columns["ServiceTax"];
                this.columnHEduCess = base.Columns["HEduCess"];
                this.columnEduCess = base.Columns["EduCess"];
                this.columnExcise = base.Columns["Excise"];
                this.columnItem_Name = base.Columns["Item_Name"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceDetailID = new global::System.Data.DataColumn("ServiceDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDetailID);
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnExpr1 = new global::System.Data.DataColumn("Expr1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnAVAT = new global::System.Data.DataColumn("AVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVAT);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnCST = new global::System.Data.DataColumn("CST", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCST);
                this.columnServiceTax = new global::System.Data.DataColumn("ServiceTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceTax);
                this.columnHEduCess = new global::System.Data.DataColumn("HEduCess", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHEduCess);
                this.columnEduCess = new global::System.Data.DataColumn("EduCess", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEduCess);
                this.columnExcise = new global::System.Data.DataColumn("Excise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExcise);
                this.columnItem_Name = new global::System.Data.DataColumn("Item_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_Name);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_New_ItemRow NewInvoice_New_ItemRow() {
                return ((Invoice_New_ItemRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Invoice_New_ItemRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Invoice_New_ItemRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Invoice_New_ItemRowChanged != null)) {
                    this.Invoice_New_ItemRowChanged(this, new Invoice_New_ItemRowChangeEvent(((Invoice_New_ItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Invoice_New_ItemRowChanging != null)) {
                    this.Invoice_New_ItemRowChanging(this, new Invoice_New_ItemRowChangeEvent(((Invoice_New_ItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Invoice_New_ItemRowDeleted != null)) {
                    this.Invoice_New_ItemRowDeleted(this, new Invoice_New_ItemRowChangeEvent(((Invoice_New_ItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Invoice_New_ItemRowDeleting != null)) {
                    this.Invoice_New_ItemRowDeleting(this, new Invoice_New_ItemRowChangeEvent(((Invoice_New_ItemRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInvoice_New_ItemRow(Invoice_New_ItemRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Invoice_New_ItemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CompanyInfoDataTable : global::System.Data.TypedTableBase<CompanyInfoRow> {
            
            private global::System.Data.DataColumn columnCompId;
            
            private global::System.Data.DataColumn columnCompanyCode;
            
            private global::System.Data.DataColumn columnCompanyName;
            
            private global::System.Data.DataColumn columnBusinessLine;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCityName;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPincode;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnPhone2;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnReportPath;
            
            private global::System.Data.DataColumn columnDocPath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyInfoDataTable() {
                this.TableName = "CompanyInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CompanyInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompIdColumn {
                get {
                    return this.columnCompId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyCodeColumn {
                get {
                    return this.columnCompanyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyNameColumn {
                get {
                    return this.columnCompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BusinessLineColumn {
                get {
                    return this.columnBusinessLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityNameColumn {
                get {
                    return this.columnCityName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PincodeColumn {
                get {
                    return this.columnPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone2Column {
                get {
                    return this.columnPhone2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReportPathColumn {
                get {
                    return this.columnReportPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocPathColumn {
                get {
                    return this.columnDocPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyInfoRow this[int index] {
                get {
                    return ((CompanyInfoRow)(this.Rows[index]));
                }
            }
            
            public event CompanyInfoRowChangeEventHandler CompanyInfoRowChanging;
            
            public event CompanyInfoRowChangeEventHandler CompanyInfoRowChanged;
            
            public event CompanyInfoRowChangeEventHandler CompanyInfoRowDeleting;
            
            public event CompanyInfoRowChangeEventHandler CompanyInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCompanyInfoRow(CompanyInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyInfoRow AddCompanyInfoRow(
                        long CompId, 
                        string CompanyCode, 
                        string CompanyName, 
                        string BusinessLine, 
                        string Address1, 
                        string Address2, 
                        string CityName, 
                        string State, 
                        string Pincode, 
                        string Phone1, 
                        string Phone2, 
                        string Mobile, 
                        string Fax, 
                        string Email, 
                        string ReportPath, 
                        string DocPath) {
                CompanyInfoRow rowCompanyInfoRow = ((CompanyInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CompId,
                        CompanyCode,
                        CompanyName,
                        BusinessLine,
                        Address1,
                        Address2,
                        CityName,
                        State,
                        Pincode,
                        Phone1,
                        Phone2,
                        Mobile,
                        Fax,
                        Email,
                        ReportPath,
                        DocPath};
                rowCompanyInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCompanyInfoRow);
                return rowCompanyInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CompanyInfoDataTable cln = ((CompanyInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CompanyInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompId = base.Columns["CompId"];
                this.columnCompanyCode = base.Columns["CompanyCode"];
                this.columnCompanyName = base.Columns["CompanyName"];
                this.columnBusinessLine = base.Columns["BusinessLine"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCityName = base.Columns["CityName"];
                this.columnState = base.Columns["State"];
                this.columnPincode = base.Columns["Pincode"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnPhone2 = base.Columns["Phone2"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnFax = base.Columns["Fax"];
                this.columnEmail = base.Columns["Email"];
                this.columnReportPath = base.Columns["ReportPath"];
                this.columnDocPath = base.Columns["DocPath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompId = new global::System.Data.DataColumn("CompId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompId);
                this.columnCompanyCode = new global::System.Data.DataColumn("CompanyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyCode);
                this.columnCompanyName = new global::System.Data.DataColumn("CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyName);
                this.columnBusinessLine = new global::System.Data.DataColumn("BusinessLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusinessLine);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCityName = new global::System.Data.DataColumn("CityName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityName);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPincode = new global::System.Data.DataColumn("Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPincode);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnPhone2 = new global::System.Data.DataColumn("Phone2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone2);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnReportPath = new global::System.Data.DataColumn("ReportPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportPath);
                this.columnDocPath = new global::System.Data.DataColumn("DocPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocPath);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyInfoRow NewCompanyInfoRow() {
                return ((CompanyInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CompanyInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CompanyInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CompanyInfoRowChanged != null)) {
                    this.CompanyInfoRowChanged(this, new CompanyInfoRowChangeEvent(((CompanyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CompanyInfoRowChanging != null)) {
                    this.CompanyInfoRowChanging(this, new CompanyInfoRowChangeEvent(((CompanyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CompanyInfoRowDeleted != null)) {
                    this.CompanyInfoRowDeleted(this, new CompanyInfoRowChangeEvent(((CompanyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CompanyInfoRowDeleting != null)) {
                    this.CompanyInfoRowDeleting(this, new CompanyInfoRowChangeEvent(((CompanyInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCompanyInfoRow(CompanyInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CompanyInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Customer_ServiceDataTable : global::System.Data.TypedTableBase<Customer_ServiceRow> {
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnModelNumber;
            
            private global::System.Data.DataColumn columnProblem;
            
            private global::System.Data.DataColumn columnAttendedBy;
            
            private global::System.Data.DataColumn columnJobComputed;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnOtherRequirement;
            
            private global::System.Data.DataColumn columnCharges;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnFYID;
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnConTypeID;
            
            private global::System.Data.DataColumn columnProID;
            
            private global::System.Data.DataColumn columnZoneID;
            
            private global::System.Data.DataColumn columnStartDate;
            
            private global::System.Data.DataColumn columnEndDate;
            
            private global::System.Data.DataColumn columnWarrantyDate;
            
            private global::System.Data.DataColumn columnTakenBy;
            
            private global::System.Data.DataColumn columnCallID;
            
            private global::System.Data.DataColumn columnTotalHours;
            
            private global::System.Data.DataColumn columnCall_Status;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnServicebill;
            
            private global::System.Data.DataColumn columnContactpersonName;
            
            private global::System.Data.DataColumn columnStartTime;
            
            private global::System.Data.DataColumn columnEndTime;
            
            private global::System.Data.DataColumn columnCounterReading;
            
            private global::System.Data.DataColumn columnPONo;
            
            private global::System.Data.DataColumn columnModelNo;
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnCategory;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnCallType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Customer_ServiceDataTable() {
                this.TableName = "Customer Service";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Customer_ServiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Customer_ServiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNumberColumn {
                get {
                    return this.columnModelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemColumn {
                get {
                    return this.columnProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendedByColumn {
                get {
                    return this.columnAttendedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobComputedColumn {
                get {
                    return this.columnJobComputed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherRequirementColumn {
                get {
                    return this.columnOtherRequirement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesColumn {
                get {
                    return this.columnCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FYIDColumn {
                get {
                    return this.columnFYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConTypeIDColumn {
                get {
                    return this.columnConTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProIDColumn {
                get {
                    return this.columnProID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneIDColumn {
                get {
                    return this.columnZoneID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartDateColumn {
                get {
                    return this.columnStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndDateColumn {
                get {
                    return this.columnEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WarrantyDateColumn {
                get {
                    return this.columnWarrantyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TakenByColumn {
                get {
                    return this.columnTakenBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallIDColumn {
                get {
                    return this.columnCallID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalHoursColumn {
                get {
                    return this.columnTotalHours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Call_StatusColumn {
                get {
                    return this.columnCall_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServicebillColumn {
                get {
                    return this.columnServicebill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactpersonNameColumn {
                get {
                    return this.columnContactpersonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CounterReadingColumn {
                get {
                    return this.columnCounterReading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PONoColumn {
                get {
                    return this.columnPONo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNoColumn {
                get {
                    return this.columnModelNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CallTypeColumn {
                get {
                    return this.columnCallType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Customer_ServiceRow this[int index] {
                get {
                    return ((Customer_ServiceRow)(this.Rows[index]));
                }
            }
            
            public event Customer_ServiceRowChangeEventHandler Customer_ServiceRowChanging;
            
            public event Customer_ServiceRowChangeEventHandler Customer_ServiceRowChanged;
            
            public event Customer_ServiceRowChangeEventHandler Customer_ServiceRowDeleting;
            
            public event Customer_ServiceRowChangeEventHandler Customer_ServiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomer_ServiceRow(Customer_ServiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Customer_ServiceRow AddCustomer_ServiceRow(
                        long ServiceId, 
                        string RequestNo, 
                        System.DateTime ServiceDate, 
                        string CustomerName, 
                        string Address, 
                        string MobileNo, 
                        string ModelNumber, 
                        string Problem, 
                        long AttendedBy, 
                        string JobComputed, 
                        string Remarks, 
                        string OtherRequirement, 
                        decimal Charges, 
                        long CreatedBy, 
                        System.DateTime CreatedDate, 
                        long ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        long SIID, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long FYID, 
                        int GodownID, 
                        long CustomerID, 
                        int DeptID, 
                        int ConTypeID, 
                        int ProID, 
                        int ZoneID, 
                        System.DateTime StartDate, 
                        System.DateTime EndDate, 
                        System.DateTime WarrantyDate, 
                        long TakenBy, 
                        int CallID, 
                        string TotalHours, 
                        string Call_Status, 
                        string Description, 
                        string Servicebill, 
                        string ContactpersonName, 
                        string StartTime, 
                        string EndTime, 
                        string CounterReading, 
                        string PONo, 
                        string ModelNo, 
                        string SrNo, 
                        string Category, 
                        string Brand, 
                        string CallType) {
                Customer_ServiceRow rowCustomer_ServiceRow = ((Customer_ServiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceId,
                        RequestNo,
                        ServiceDate,
                        CustomerName,
                        Address,
                        MobileNo,
                        ModelNumber,
                        Problem,
                        AttendedBy,
                        JobComputed,
                        Remarks,
                        OtherRequirement,
                        Charges,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        SIID,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        FYID,
                        GodownID,
                        CustomerID,
                        DeptID,
                        ConTypeID,
                        ProID,
                        ZoneID,
                        StartDate,
                        EndDate,
                        WarrantyDate,
                        TakenBy,
                        CallID,
                        TotalHours,
                        Call_Status,
                        Description,
                        Servicebill,
                        ContactpersonName,
                        StartTime,
                        EndTime,
                        CounterReading,
                        PONo,
                        ModelNo,
                        SrNo,
                        Category,
                        Brand,
                        CallType};
                rowCustomer_ServiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomer_ServiceRow);
                return rowCustomer_ServiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Customer_ServiceDataTable cln = ((Customer_ServiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Customer_ServiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnModelNumber = base.Columns["ModelNumber"];
                this.columnProblem = base.Columns["Problem"];
                this.columnAttendedBy = base.Columns["AttendedBy"];
                this.columnJobComputed = base.Columns["JobComputed"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnOtherRequirement = base.Columns["OtherRequirement"];
                this.columnCharges = base.Columns["Charges"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnSIID = base.Columns["SIID"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnFYID = base.Columns["FYID"];
                this.columnGodownID = base.Columns["GodownID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnConTypeID = base.Columns["ConTypeID"];
                this.columnProID = base.Columns["ProID"];
                this.columnZoneID = base.Columns["ZoneID"];
                this.columnStartDate = base.Columns["StartDate"];
                this.columnEndDate = base.Columns["EndDate"];
                this.columnWarrantyDate = base.Columns["WarrantyDate"];
                this.columnTakenBy = base.Columns["TakenBy"];
                this.columnCallID = base.Columns["CallID"];
                this.columnTotalHours = base.Columns["TotalHours"];
                this.columnCall_Status = base.Columns["Call_Status"];
                this.columnDescription = base.Columns["Description"];
                this.columnServicebill = base.Columns["Servicebill"];
                this.columnContactpersonName = base.Columns["ContactpersonName"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnCounterReading = base.Columns["CounterReading"];
                this.columnPONo = base.Columns["PONo"];
                this.columnModelNo = base.Columns["ModelNo"];
                this.columnSrNo = base.Columns["SrNo"];
                this.columnCategory = base.Columns["Category"];
                this.columnBrand = base.Columns["Brand"];
                this.columnCallType = base.Columns["CallType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnModelNumber = new global::System.Data.DataColumn("ModelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNumber);
                this.columnProblem = new global::System.Data.DataColumn("Problem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblem);
                this.columnAttendedBy = new global::System.Data.DataColumn("AttendedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendedBy);
                this.columnJobComputed = new global::System.Data.DataColumn("JobComputed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobComputed);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnOtherRequirement = new global::System.Data.DataColumn("OtherRequirement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherRequirement);
                this.columnCharges = new global::System.Data.DataColumn("Charges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCharges);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnFYID = new global::System.Data.DataColumn("FYID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFYID);
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnConTypeID = new global::System.Data.DataColumn("ConTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConTypeID);
                this.columnProID = new global::System.Data.DataColumn("ProID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProID);
                this.columnZoneID = new global::System.Data.DataColumn("ZoneID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZoneID);
                this.columnStartDate = new global::System.Data.DataColumn("StartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartDate);
                this.columnEndDate = new global::System.Data.DataColumn("EndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndDate);
                this.columnWarrantyDate = new global::System.Data.DataColumn("WarrantyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarrantyDate);
                this.columnTakenBy = new global::System.Data.DataColumn("TakenBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTakenBy);
                this.columnCallID = new global::System.Data.DataColumn("CallID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallID);
                this.columnTotalHours = new global::System.Data.DataColumn("TotalHours", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHours);
                this.columnCall_Status = new global::System.Data.DataColumn("Call_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCall_Status);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnServicebill = new global::System.Data.DataColumn("Servicebill", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServicebill);
                this.columnContactpersonName = new global::System.Data.DataColumn("ContactpersonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactpersonName);
                this.columnStartTime = new global::System.Data.DataColumn("StartTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new global::System.Data.DataColumn("EndTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnCounterReading = new global::System.Data.DataColumn("CounterReading", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounterReading);
                this.columnPONo = new global::System.Data.DataColumn("PONo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPONo);
                this.columnModelNo = new global::System.Data.DataColumn("ModelNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNo);
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnCategory = new global::System.Data.DataColumn("Category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnCallType = new global::System.Data.DataColumn("CallType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCallType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Customer_ServiceRow NewCustomer_ServiceRow() {
                return ((Customer_ServiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Customer_ServiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Customer_ServiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Customer_ServiceRowChanged != null)) {
                    this.Customer_ServiceRowChanged(this, new Customer_ServiceRowChangeEvent(((Customer_ServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Customer_ServiceRowChanging != null)) {
                    this.Customer_ServiceRowChanging(this, new Customer_ServiceRowChangeEvent(((Customer_ServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Customer_ServiceRowDeleted != null)) {
                    this.Customer_ServiceRowDeleted(this, new Customer_ServiceRowChangeEvent(((Customer_ServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Customer_ServiceRowDeleting != null)) {
                    this.Customer_ServiceRowDeleting(this, new Customer_ServiceRowChangeEvent(((Customer_ServiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomer_ServiceRow(Customer_ServiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Customer_ServiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TNCDataTable : global::System.Data.TypedTableBase<TNCRow> {
            
            private global::System.Data.DataColumn columnTNC_Desc;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TNCDataTable() {
                this.TableName = "TNC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TNCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TNCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TNC_DescColumn {
                get {
                    return this.columnTNC_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TNCRow this[int index] {
                get {
                    return ((TNCRow)(this.Rows[index]));
                }
            }
            
            public event TNCRowChangeEventHandler TNCRowChanging;
            
            public event TNCRowChangeEventHandler TNCRowChanged;
            
            public event TNCRowChangeEventHandler TNCRowDeleting;
            
            public event TNCRowChangeEventHandler TNCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTNCRow(TNCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TNCRow AddTNCRow(string TNC_Desc) {
                TNCRow rowTNCRow = ((TNCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TNC_Desc};
                rowTNCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTNCRow);
                return rowTNCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TNCDataTable cln = ((TNCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TNCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTNC_Desc = base.Columns["TNC_Desc"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTNC_Desc = new global::System.Data.DataColumn("TNC_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTNC_Desc);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TNCRow NewTNCRow() {
                return ((TNCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TNCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TNCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TNCRowChanged != null)) {
                    this.TNCRowChanged(this, new TNCRowChangeEvent(((TNCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TNCRowChanging != null)) {
                    this.TNCRowChanging(this, new TNCRowChangeEvent(((TNCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TNCRowDeleted != null)) {
                    this.TNCRowDeleted(this, new TNCRowChangeEvent(((TNCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TNCRowDeleting != null)) {
                    this.TNCRowDeleting(this, new TNCRowChangeEvent(((TNCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTNCRow(TNCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TNCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Service_ToyoDataTable : global::System.Data.TypedTableBase<Service_ToyoRow> {
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnProductName;
            
            private global::System.Data.DataColumn columnModelNumber;
            
            private global::System.Data.DataColumn columnProblem;
            
            private global::System.Data.DataColumn columnAttendedBy;
            
            private global::System.Data.DataColumn columnJobComputed;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnOtherRequirement;
            
            private global::System.Data.DataColumn columnCharges;
            
            private global::System.Data.DataColumn columnCreatedBy;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnModifiedBy;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnFYID;
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnITEM_NAME;
            
            private global::System.Data.DataColumn columnUOM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_ToyoDataTable() {
                this.TableName = "Service_Toyo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Service_ToyoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Service_ToyoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductNameColumn {
                get {
                    return this.columnProductName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModelNumberColumn {
                get {
                    return this.columnModelNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProblemColumn {
                get {
                    return this.columnProblem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AttendedByColumn {
                get {
                    return this.columnAttendedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JobComputedColumn {
                get {
                    return this.columnJobComputed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OtherRequirementColumn {
                get {
                    return this.columnOtherRequirement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChargesColumn {
                get {
                    return this.columnCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedByColumn {
                get {
                    return this.columnCreatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedByColumn {
                get {
                    return this.columnModifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FYIDColumn {
                get {
                    return this.columnFYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEM_NAMEColumn {
                get {
                    return this.columnITEM_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_ToyoRow this[int index] {
                get {
                    return ((Service_ToyoRow)(this.Rows[index]));
                }
            }
            
            public event Service_ToyoRowChangeEventHandler Service_ToyoRowChanging;
            
            public event Service_ToyoRowChangeEventHandler Service_ToyoRowChanged;
            
            public event Service_ToyoRowChangeEventHandler Service_ToyoRowDeleting;
            
            public event Service_ToyoRowChangeEventHandler Service_ToyoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddService_ToyoRow(Service_ToyoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_ToyoRow AddService_ToyoRow(
                        string RequestNo, 
                        System.DateTime ServiceDate, 
                        string CustomerName, 
                        string Address, 
                        string MobileNo, 
                        string ProductName, 
                        string ModelNumber, 
                        string Problem, 
                        long AttendedBy, 
                        string JobComputed, 
                        string Remarks, 
                        string OtherRequirement, 
                        decimal Charges, 
                        long CreatedBy, 
                        System.DateTime CreatedDate, 
                        long ModifiedBy, 
                        System.DateTime ModifiedDate, 
                        long SIID, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long FYID, 
                        int GodownID, 
                        long ServiceId, 
                        long ItemID, 
                        string ItemDesc, 
                        decimal Qty, 
                        decimal Rate, 
                        string Code, 
                        string ITEM_NAME, 
                        string UOM) {
                Service_ToyoRow rowService_ToyoRow = ((Service_ToyoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RequestNo,
                        ServiceDate,
                        CustomerName,
                        Address,
                        MobileNo,
                        ProductName,
                        ModelNumber,
                        Problem,
                        AttendedBy,
                        JobComputed,
                        Remarks,
                        OtherRequirement,
                        Charges,
                        CreatedBy,
                        CreatedDate,
                        ModifiedBy,
                        ModifiedDate,
                        SIID,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        FYID,
                        GodownID,
                        ServiceId,
                        ItemID,
                        ItemDesc,
                        Qty,
                        Rate,
                        Code,
                        ITEM_NAME,
                        UOM};
                rowService_ToyoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowService_ToyoRow);
                return rowService_ToyoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Service_ToyoDataTable cln = ((Service_ToyoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Service_ToyoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnProductName = base.Columns["ProductName"];
                this.columnModelNumber = base.Columns["ModelNumber"];
                this.columnProblem = base.Columns["Problem"];
                this.columnAttendedBy = base.Columns["AttendedBy"];
                this.columnJobComputed = base.Columns["JobComputed"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnOtherRequirement = base.Columns["OtherRequirement"];
                this.columnCharges = base.Columns["Charges"];
                this.columnCreatedBy = base.Columns["CreatedBy"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnModifiedBy = base.Columns["ModifiedBy"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnSIID = base.Columns["SIID"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnFYID = base.Columns["FYID"];
                this.columnGodownID = base.Columns["GodownID"];
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnCode = base.Columns["Code"];
                this.columnITEM_NAME = base.Columns["ITEM_NAME"];
                this.columnUOM = base.Columns["UOM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnProductName = new global::System.Data.DataColumn("ProductName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductName);
                this.columnModelNumber = new global::System.Data.DataColumn("ModelNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModelNumber);
                this.columnProblem = new global::System.Data.DataColumn("Problem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProblem);
                this.columnAttendedBy = new global::System.Data.DataColumn("AttendedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAttendedBy);
                this.columnJobComputed = new global::System.Data.DataColumn("JobComputed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobComputed);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnOtherRequirement = new global::System.Data.DataColumn("OtherRequirement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherRequirement);
                this.columnCharges = new global::System.Data.DataColumn("Charges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCharges);
                this.columnCreatedBy = new global::System.Data.DataColumn("CreatedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedBy);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnModifiedBy = new global::System.Data.DataColumn("ModifiedBy", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedBy);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnFYID = new global::System.Data.DataColumn("FYID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFYID);
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnITEM_NAME = new global::System.Data.DataColumn("ITEM_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM_NAME);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_ToyoRow NewService_ToyoRow() {
                return ((Service_ToyoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Service_ToyoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Service_ToyoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Service_ToyoRowChanged != null)) {
                    this.Service_ToyoRowChanged(this, new Service_ToyoRowChangeEvent(((Service_ToyoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Service_ToyoRowChanging != null)) {
                    this.Service_ToyoRowChanging(this, new Service_ToyoRowChangeEvent(((Service_ToyoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Service_ToyoRowDeleted != null)) {
                    this.Service_ToyoRowDeleted(this, new Service_ToyoRowChangeEvent(((Service_ToyoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Service_ToyoRowDeleting != null)) {
                    this.Service_ToyoRowDeleting(this, new Service_ToyoRowChangeEvent(((Service_ToyoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveService_ToyoRow(Service_ToyoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Service_ToyoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemStockRegisterHozifaDataTable : global::System.Data.TypedTableBase<ItemStockRegisterHozifaRow> {
            
            private global::System.Data.DataColumn columnStockID;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnRackNo;
            
            private global::System.Data.DataColumn columnGodownID;
            
            private global::System.Data.DataColumn columnQOH;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnWeigth;
            
            private global::System.Data.DataColumn columnSF;
            
            private global::System.Data.DataColumn columnSM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemStockRegisterHozifaDataTable() {
                this.TableName = "ItemStockRegisterHozifa";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemStockRegisterHozifaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemStockRegisterHozifaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StockIDColumn {
                get {
                    return this.columnStockID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RackNoColumn {
                get {
                    return this.columnRackNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownIDColumn {
                get {
                    return this.columnGodownID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QOHColumn {
                get {
                    return this.columnQOH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WeigthColumn {
                get {
                    return this.columnWeigth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SFColumn {
                get {
                    return this.columnSF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMColumn {
                get {
                    return this.columnSM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemStockRegisterHozifaRow this[int index] {
                get {
                    return ((ItemStockRegisterHozifaRow)(this.Rows[index]));
                }
            }
            
            public event ItemStockRegisterHozifaRowChangeEventHandler ItemStockRegisterHozifaRowChanging;
            
            public event ItemStockRegisterHozifaRowChangeEventHandler ItemStockRegisterHozifaRowChanged;
            
            public event ItemStockRegisterHozifaRowChangeEventHandler ItemStockRegisterHozifaRowDeleting;
            
            public event ItemStockRegisterHozifaRowChangeEventHandler ItemStockRegisterHozifaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemStockRegisterHozifaRow(ItemStockRegisterHozifaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemStockRegisterHozifaRow AddItemStockRegisterHozifaRow(long StockID, long ItemID, string ItemCode, string ItemName, string Location, string RackNo, int GodownID, decimal QOH, decimal Roll, decimal Weigth, decimal SF, decimal SM) {
                ItemStockRegisterHozifaRow rowItemStockRegisterHozifaRow = ((ItemStockRegisterHozifaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StockID,
                        ItemID,
                        ItemCode,
                        ItemName,
                        Location,
                        RackNo,
                        GodownID,
                        QOH,
                        Roll,
                        Weigth,
                        SF,
                        SM};
                rowItemStockRegisterHozifaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemStockRegisterHozifaRow);
                return rowItemStockRegisterHozifaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemStockRegisterHozifaDataTable cln = ((ItemStockRegisterHozifaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemStockRegisterHozifaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnStockID = base.Columns["StockID"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnLocation = base.Columns["Location"];
                this.columnRackNo = base.Columns["RackNo"];
                this.columnGodownID = base.Columns["GodownID"];
                this.columnQOH = base.Columns["QOH"];
                this.columnRoll = base.Columns["Roll"];
                this.columnWeigth = base.Columns["Weigth"];
                this.columnSF = base.Columns["SF"];
                this.columnSM = base.Columns["SM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnStockID = new global::System.Data.DataColumn("StockID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStockID);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnRackNo = new global::System.Data.DataColumn("RackNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRackNo);
                this.columnGodownID = new global::System.Data.DataColumn("GodownID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownID);
                this.columnQOH = new global::System.Data.DataColumn("QOH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQOH);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnWeigth = new global::System.Data.DataColumn("Weigth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeigth);
                this.columnSF = new global::System.Data.DataColumn("SF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSF);
                this.columnSM = new global::System.Data.DataColumn("SM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSM);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemStockRegisterHozifaRow NewItemStockRegisterHozifaRow() {
                return ((ItemStockRegisterHozifaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemStockRegisterHozifaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemStockRegisterHozifaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemStockRegisterHozifaRowChanged != null)) {
                    this.ItemStockRegisterHozifaRowChanged(this, new ItemStockRegisterHozifaRowChangeEvent(((ItemStockRegisterHozifaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemStockRegisterHozifaRowChanging != null)) {
                    this.ItemStockRegisterHozifaRowChanging(this, new ItemStockRegisterHozifaRowChangeEvent(((ItemStockRegisterHozifaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemStockRegisterHozifaRowDeleted != null)) {
                    this.ItemStockRegisterHozifaRowDeleted(this, new ItemStockRegisterHozifaRowChangeEvent(((ItemStockRegisterHozifaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemStockRegisterHozifaRowDeleting != null)) {
                    this.ItemStockRegisterHozifaRowDeleting(this, new ItemStockRegisterHozifaRowChangeEvent(((ItemStockRegisterHozifaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemStockRegisterHozifaRow(ItemStockRegisterHozifaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemStockRegisterHozifaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseInvoiceRegisterWithDetailDataTable : global::System.Data.TypedTableBase<PurchaseInvoiceRegisterWithDetailRow> {
            
            private global::System.Data.DataColumn columnPIID;
            
            private global::System.Data.DataColumn columnPurchaseCode;
            
            private global::System.Data.DataColumn columnPurchaseDate;
            
            private global::System.Data.DataColumn columnVoucherNo;
            
            private global::System.Data.DataColumn columnVoucherDate;
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnDueDays;
            
            private global::System.Data.DataColumn columnDueDate;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            private global::System.Data.DataColumn columnExciseRate;
            
            private global::System.Data.DataColumn columnDetExciseAmount;
            
            private global::System.Data.DataColumn columnCessRate;
            
            private global::System.Data.DataColumn columnDetCessAmount;
            
            private global::System.Data.DataColumn columnHCessRate;
            
            private global::System.Data.DataColumn columnDetHCessAmount;
            
            private global::System.Data.DataColumn columnDetAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTRate;
            
            private global::System.Data.DataColumn columnDetCSTAmount;
            
            private global::System.Data.DataColumn columnVATRate;
            
            private global::System.Data.DataColumn columnDetVATAmount;
            
            private global::System.Data.DataColumn columnAVATRate;
            
            private global::System.Data.DataColumn columnDetAVATAmount;
            
            private global::System.Data.DataColumn columnDetNEtAMount;
            
            private global::System.Data.DataColumn columnTaxClassID;
            
            private global::System.Data.DataColumn columnPIDetailID;
            
            private global::System.Data.DataColumn columnQuantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseInvoiceRegisterWithDetailDataTable() {
                this.TableName = "PurchaseInvoiceRegisterWithDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseInvoiceRegisterWithDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseInvoiceRegisterWithDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PIIDColumn {
                get {
                    return this.columnPIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseCodeColumn {
                get {
                    return this.columnPurchaseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseDateColumn {
                get {
                    return this.columnPurchaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherNoColumn {
                get {
                    return this.columnVoucherNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherDateColumn {
                get {
                    return this.columnVoucherDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDaysColumn {
                get {
                    return this.columnDueDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateColumn {
                get {
                    return this.columnDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseRateColumn {
                get {
                    return this.columnExciseRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetExciseAmountColumn {
                get {
                    return this.columnDetExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessRateColumn {
                get {
                    return this.columnCessRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetCessAmountColumn {
                get {
                    return this.columnDetCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessRateColumn {
                get {
                    return this.columnHCessRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetHCessAmountColumn {
                get {
                    return this.columnDetHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetAmountAfterExciseColumn {
                get {
                    return this.columnDetAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTRateColumn {
                get {
                    return this.columnCSTRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetCSTAmountColumn {
                get {
                    return this.columnDetCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATRateColumn {
                get {
                    return this.columnVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetVATAmountColumn {
                get {
                    return this.columnDetVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATRateColumn {
                get {
                    return this.columnAVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetAVATAmountColumn {
                get {
                    return this.columnDetAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetNEtAMountColumn {
                get {
                    return this.columnDetNEtAMount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassIDColumn {
                get {
                    return this.columnTaxClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PIDetailIDColumn {
                get {
                    return this.columnPIDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseInvoiceRegisterWithDetailRow this[int index] {
                get {
                    return ((PurchaseInvoiceRegisterWithDetailRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseInvoiceRegisterWithDetailRowChangeEventHandler PurchaseInvoiceRegisterWithDetailRowChanging;
            
            public event PurchaseInvoiceRegisterWithDetailRowChangeEventHandler PurchaseInvoiceRegisterWithDetailRowChanged;
            
            public event PurchaseInvoiceRegisterWithDetailRowChangeEventHandler PurchaseInvoiceRegisterWithDetailRowDeleting;
            
            public event PurchaseInvoiceRegisterWithDetailRowChangeEventHandler PurchaseInvoiceRegisterWithDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseInvoiceRegisterWithDetailRow(PurchaseInvoiceRegisterWithDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseInvoiceRegisterWithDetailRow AddPurchaseInvoiceRegisterWithDetailRow(
                        long PIID, 
                        string PurchaseCode, 
                        System.DateTime PurchaseDate, 
                        string VoucherNo, 
                        System.DateTime VoucherDate, 
                        long VendorID, 
                        string Code, 
                        string VendorName, 
                        long DueDays, 
                        System.DateTime DueDate, 
                        decimal TotalAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        string Narration, 
                        long ItemID, 
                        decimal Qty, 
                        decimal Rate, 
                        decimal Amount, 
                        string ItemName, 
                        string UOM, 
                        string TaxClass, 
                        decimal ExciseRate, 
                        decimal DetExciseAmount, 
                        decimal CessRate, 
                        decimal DetCessAmount, 
                        decimal HCessRate, 
                        decimal DetHCessAmount, 
                        decimal DetAmountAfterExcise, 
                        decimal CSTRate, 
                        decimal DetCSTAmount, 
                        decimal VATRate, 
                        decimal DetVATAmount, 
                        decimal AVATRate, 
                        decimal DetAVATAmount, 
                        decimal DetNEtAMount, 
                        long TaxClassID, 
                        long PIDetailID, 
                        decimal Quantity) {
                PurchaseInvoiceRegisterWithDetailRow rowPurchaseInvoiceRegisterWithDetailRow = ((PurchaseInvoiceRegisterWithDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PIID,
                        PurchaseCode,
                        PurchaseDate,
                        VoucherNo,
                        VoucherDate,
                        VendorID,
                        Code,
                        VendorName,
                        DueDays,
                        DueDate,
                        TotalAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        Narration,
                        ItemID,
                        Qty,
                        Rate,
                        Amount,
                        ItemName,
                        UOM,
                        TaxClass,
                        ExciseRate,
                        DetExciseAmount,
                        CessRate,
                        DetCessAmount,
                        HCessRate,
                        DetHCessAmount,
                        DetAmountAfterExcise,
                        CSTRate,
                        DetCSTAmount,
                        VATRate,
                        DetVATAmount,
                        AVATRate,
                        DetAVATAmount,
                        DetNEtAMount,
                        TaxClassID,
                        PIDetailID,
                        Quantity};
                rowPurchaseInvoiceRegisterWithDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchaseInvoiceRegisterWithDetailRow);
                return rowPurchaseInvoiceRegisterWithDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PurchaseInvoiceRegisterWithDetailDataTable cln = ((PurchaseInvoiceRegisterWithDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PurchaseInvoiceRegisterWithDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPIID = base.Columns["PIID"];
                this.columnPurchaseCode = base.Columns["PurchaseCode"];
                this.columnPurchaseDate = base.Columns["PurchaseDate"];
                this.columnVoucherNo = base.Columns["VoucherNo"];
                this.columnVoucherDate = base.Columns["VoucherDate"];
                this.columnVendorID = base.Columns["VendorID"];
                this.columnCode = base.Columns["Code"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnDueDays = base.Columns["DueDays"];
                this.columnDueDate = base.Columns["DueDate"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnNarration = base.Columns["Narration"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnUOM = base.Columns["UOM"];
                this.columnTaxClass = base.Columns["TaxClass"];
                this.columnExciseRate = base.Columns["ExciseRate"];
                this.columnDetExciseAmount = base.Columns["DetExciseAmount"];
                this.columnCessRate = base.Columns["CessRate"];
                this.columnDetCessAmount = base.Columns["DetCessAmount"];
                this.columnHCessRate = base.Columns["HCessRate"];
                this.columnDetHCessAmount = base.Columns["DetHCessAmount"];
                this.columnDetAmountAfterExcise = base.Columns["DetAmountAfterExcise"];
                this.columnCSTRate = base.Columns["CSTRate"];
                this.columnDetCSTAmount = base.Columns["DetCSTAmount"];
                this.columnVATRate = base.Columns["VATRate"];
                this.columnDetVATAmount = base.Columns["DetVATAmount"];
                this.columnAVATRate = base.Columns["AVATRate"];
                this.columnDetAVATAmount = base.Columns["DetAVATAmount"];
                this.columnDetNEtAMount = base.Columns["DetNEtAMount"];
                this.columnTaxClassID = base.Columns["TaxClassID"];
                this.columnPIDetailID = base.Columns["PIDetailID"];
                this.columnQuantity = base.Columns["Quantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPIID = new global::System.Data.DataColumn("PIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIID);
                this.columnPurchaseCode = new global::System.Data.DataColumn("PurchaseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseCode);
                this.columnPurchaseDate = new global::System.Data.DataColumn("PurchaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseDate);
                this.columnVoucherNo = new global::System.Data.DataColumn("VoucherNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherNo);
                this.columnVoucherDate = new global::System.Data.DataColumn("VoucherDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherDate);
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnDueDays = new global::System.Data.DataColumn("DueDays", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDays);
                this.columnDueDate = new global::System.Data.DataColumn("DueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDate);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
                this.columnExciseRate = new global::System.Data.DataColumn("ExciseRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseRate);
                this.columnDetExciseAmount = new global::System.Data.DataColumn("DetExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetExciseAmount);
                this.columnCessRate = new global::System.Data.DataColumn("CessRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessRate);
                this.columnDetCessAmount = new global::System.Data.DataColumn("DetCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetCessAmount);
                this.columnHCessRate = new global::System.Data.DataColumn("HCessRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessRate);
                this.columnDetHCessAmount = new global::System.Data.DataColumn("DetHCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetHCessAmount);
                this.columnDetAmountAfterExcise = new global::System.Data.DataColumn("DetAmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetAmountAfterExcise);
                this.columnCSTRate = new global::System.Data.DataColumn("CSTRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTRate);
                this.columnDetCSTAmount = new global::System.Data.DataColumn("DetCSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetCSTAmount);
                this.columnVATRate = new global::System.Data.DataColumn("VATRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATRate);
                this.columnDetVATAmount = new global::System.Data.DataColumn("DetVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetVATAmount);
                this.columnAVATRate = new global::System.Data.DataColumn("AVATRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATRate);
                this.columnDetAVATAmount = new global::System.Data.DataColumn("DetAVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetAVATAmount);
                this.columnDetNEtAMount = new global::System.Data.DataColumn("DetNEtAMount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetNEtAMount);
                this.columnTaxClassID = new global::System.Data.DataColumn("TaxClassID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClassID);
                this.columnPIDetailID = new global::System.Data.DataColumn("PIDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIDetailID);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseInvoiceRegisterWithDetailRow NewPurchaseInvoiceRegisterWithDetailRow() {
                return ((PurchaseInvoiceRegisterWithDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PurchaseInvoiceRegisterWithDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PurchaseInvoiceRegisterWithDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseInvoiceRegisterWithDetailRowChanged != null)) {
                    this.PurchaseInvoiceRegisterWithDetailRowChanged(this, new PurchaseInvoiceRegisterWithDetailRowChangeEvent(((PurchaseInvoiceRegisterWithDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseInvoiceRegisterWithDetailRowChanging != null)) {
                    this.PurchaseInvoiceRegisterWithDetailRowChanging(this, new PurchaseInvoiceRegisterWithDetailRowChangeEvent(((PurchaseInvoiceRegisterWithDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseInvoiceRegisterWithDetailRowDeleted != null)) {
                    this.PurchaseInvoiceRegisterWithDetailRowDeleted(this, new PurchaseInvoiceRegisterWithDetailRowChangeEvent(((PurchaseInvoiceRegisterWithDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseInvoiceRegisterWithDetailRowDeleting != null)) {
                    this.PurchaseInvoiceRegisterWithDetailRowDeleting(this, new PurchaseInvoiceRegisterWithDetailRowChangeEvent(((PurchaseInvoiceRegisterWithDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseInvoiceRegisterWithDetailRow(PurchaseInvoiceRegisterWithDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseInvoiceRegisterWithDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SalesRegisterHozifaDataTable : global::System.Data.TypedTableBase<SalesRegisterHozifaRow> {
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnQuantity;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnEmpName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesRegisterHozifaDataTable() {
                this.TableName = "SalesRegisterHozifa";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesRegisterHozifaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SalesRegisterHozifaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesRegisterHozifaRow this[int index] {
                get {
                    return ((SalesRegisterHozifaRow)(this.Rows[index]));
                }
            }
            
            public event SalesRegisterHozifaRowChangeEventHandler SalesRegisterHozifaRowChanging;
            
            public event SalesRegisterHozifaRowChangeEventHandler SalesRegisterHozifaRowChanged;
            
            public event SalesRegisterHozifaRowChangeEventHandler SalesRegisterHozifaRowDeleting;
            
            public event SalesRegisterHozifaRowChangeEventHandler SalesRegisterHozifaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSalesRegisterHozifaRow(SalesRegisterHozifaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesRegisterHozifaRow AddSalesRegisterHozifaRow(long SIID, string CustomerName, string ItemName, decimal Quantity, string UOM, string EmpName) {
                SalesRegisterHozifaRow rowSalesRegisterHozifaRow = ((SalesRegisterHozifaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SIID,
                        CustomerName,
                        ItemName,
                        Quantity,
                        UOM,
                        EmpName};
                rowSalesRegisterHozifaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSalesRegisterHozifaRow);
                return rowSalesRegisterHozifaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SalesRegisterHozifaDataTable cln = ((SalesRegisterHozifaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SalesRegisterHozifaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSIID = base.Columns["SIID"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnQuantity = base.Columns["Quantity"];
                this.columnUOM = base.Columns["UOM"];
                this.columnEmpName = base.Columns["EmpName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesRegisterHozifaRow NewSalesRegisterHozifaRow() {
                return ((SalesRegisterHozifaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SalesRegisterHozifaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SalesRegisterHozifaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SalesRegisterHozifaRowChanged != null)) {
                    this.SalesRegisterHozifaRowChanged(this, new SalesRegisterHozifaRowChangeEvent(((SalesRegisterHozifaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SalesRegisterHozifaRowChanging != null)) {
                    this.SalesRegisterHozifaRowChanging(this, new SalesRegisterHozifaRowChangeEvent(((SalesRegisterHozifaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SalesRegisterHozifaRowDeleted != null)) {
                    this.SalesRegisterHozifaRowDeleted(this, new SalesRegisterHozifaRowChangeEvent(((SalesRegisterHozifaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SalesRegisterHozifaRowDeleting != null)) {
                    this.SalesRegisterHozifaRowDeleting(this, new SalesRegisterHozifaRowChangeEvent(((SalesRegisterHozifaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSalesRegisterHozifaRow(SalesRegisterHozifaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SalesRegisterHozifaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentReceiptDataTable : global::System.Data.TypedTableBase<PaymentReceiptRow> {
            
            private global::System.Data.DataColumn columnReceiptCode;
            
            private global::System.Data.DataColumn columnCUSTOMERNAME;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnReceiptDate;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReceiptDataTable() {
                this.TableName = "PaymentReceipt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentReceiptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentReceiptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptCodeColumn {
                get {
                    return this.columnReceiptCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERNAMEColumn {
                get {
                    return this.columnCUSTOMERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptDateColumn {
                get {
                    return this.columnReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReceiptRow this[int index] {
                get {
                    return ((PaymentReceiptRow)(this.Rows[index]));
                }
            }
            
            public event PaymentReceiptRowChangeEventHandler PaymentReceiptRowChanging;
            
            public event PaymentReceiptRowChangeEventHandler PaymentReceiptRowChanged;
            
            public event PaymentReceiptRowChangeEventHandler PaymentReceiptRowDeleting;
            
            public event PaymentReceiptRowChangeEventHandler PaymentReceiptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentReceiptRow(PaymentReceiptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReceiptRow AddPaymentReceiptRow(string ReceiptCode, string CUSTOMERNAME, decimal NetAmount, System.DateTime ReceiptDate, string Currency, string CurrencyName) {
                PaymentReceiptRow rowPaymentReceiptRow = ((PaymentReceiptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReceiptCode,
                        CUSTOMERNAME,
                        NetAmount,
                        ReceiptDate,
                        Currency,
                        CurrencyName};
                rowPaymentReceiptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaymentReceiptRow);
                return rowPaymentReceiptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PaymentReceiptDataTable cln = ((PaymentReceiptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaymentReceiptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceiptCode = base.Columns["ReceiptCode"];
                this.columnCUSTOMERNAME = base.Columns["CUSTOMERNAME"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnReceiptDate = base.Columns["ReceiptDate"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceiptCode = new global::System.Data.DataColumn("ReceiptCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptCode);
                this.columnCUSTOMERNAME = new global::System.Data.DataColumn("CUSTOMERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMERNAME);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnReceiptDate = new global::System.Data.DataColumn("ReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptDate);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReceiptRow NewPaymentReceiptRow() {
                return ((PaymentReceiptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaymentReceiptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PaymentReceiptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentReceiptRowChanged != null)) {
                    this.PaymentReceiptRowChanged(this, new PaymentReceiptRowChangeEvent(((PaymentReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentReceiptRowChanging != null)) {
                    this.PaymentReceiptRowChanging(this, new PaymentReceiptRowChangeEvent(((PaymentReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentReceiptRowDeleted != null)) {
                    this.PaymentReceiptRowDeleted(this, new PaymentReceiptRowChangeEvent(((PaymentReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentReceiptRowDeleting != null)) {
                    this.PaymentReceiptRowDeleting(this, new PaymentReceiptRowChangeEvent(((PaymentReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentReceiptRow(PaymentReceiptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentReceiptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServiceOrderDataTable : global::System.Data.TypedTableBase<ServiceOrderRow> {
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnPROBLEM;
            
            private global::System.Data.DataColumn columnSPARESUSED;
            
            private global::System.Data.DataColumn columnSOLUTIONS;
            
            private global::System.Data.DataColumn columnSPARECHARGES;
            
            private global::System.Data.DataColumn columnSERVICECHARGES;
            
            private global::System.Data.DataColumn columnATTENDEDBY;
            
            private global::System.Data.DataColumn columnCALLTYPE;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceOrderDataTable() {
                this.TableName = "ServiceOrder";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceOrderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ServiceOrderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROBLEMColumn {
                get {
                    return this.columnPROBLEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPARESUSEDColumn {
                get {
                    return this.columnSPARESUSED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOLUTIONSColumn {
                get {
                    return this.columnSOLUTIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPARECHARGESColumn {
                get {
                    return this.columnSPARECHARGES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICECHARGESColumn {
                get {
                    return this.columnSERVICECHARGES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTENDEDBYColumn {
                get {
                    return this.columnATTENDEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CALLTYPEColumn {
                get {
                    return this.columnCALLTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceOrderRow this[int index] {
                get {
                    return ((ServiceOrderRow)(this.Rows[index]));
                }
            }
            
            public event ServiceOrderRowChangeEventHandler ServiceOrderRowChanging;
            
            public event ServiceOrderRowChangeEventHandler ServiceOrderRowChanged;
            
            public event ServiceOrderRowChangeEventHandler ServiceOrderRowDeleting;
            
            public event ServiceOrderRowChangeEventHandler ServiceOrderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddServiceOrderRow(ServiceOrderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceOrderRow AddServiceOrderRow(
                        long ServiceId, 
                        string RequestNo, 
                        System.DateTime ServiceDate, 
                        string CustomerName, 
                        string Address, 
                        string MobileNo, 
                        string EMAIL, 
                        string PROBLEM, 
                        string SPARESUSED, 
                        string SOLUTIONS, 
                        decimal SPARECHARGES, 
                        decimal SERVICECHARGES, 
                        string ATTENDEDBY, 
                        string CALLTYPE, 
                        string Narration, 
                        string STATUS) {
                ServiceOrderRow rowServiceOrderRow = ((ServiceOrderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceId,
                        RequestNo,
                        ServiceDate,
                        CustomerName,
                        Address,
                        MobileNo,
                        EMAIL,
                        PROBLEM,
                        SPARESUSED,
                        SOLUTIONS,
                        SPARECHARGES,
                        SERVICECHARGES,
                        ATTENDEDBY,
                        CALLTYPE,
                        Narration,
                        STATUS};
                rowServiceOrderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServiceOrderRow);
                return rowServiceOrderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ServiceOrderDataTable cln = ((ServiceOrderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServiceOrderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnPROBLEM = base.Columns["PROBLEM"];
                this.columnSPARESUSED = base.Columns["SPARESUSED"];
                this.columnSOLUTIONS = base.Columns["SOLUTIONS"];
                this.columnSPARECHARGES = base.Columns["SPARECHARGES"];
                this.columnSERVICECHARGES = base.Columns["SERVICECHARGES"];
                this.columnATTENDEDBY = base.Columns["ATTENDEDBY"];
                this.columnCALLTYPE = base.Columns["CALLTYPE"];
                this.columnNarration = base.Columns["Narration"];
                this.columnSTATUS = base.Columns["STATUS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnPROBLEM = new global::System.Data.DataColumn("PROBLEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROBLEM);
                this.columnSPARESUSED = new global::System.Data.DataColumn("SPARESUSED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPARESUSED);
                this.columnSOLUTIONS = new global::System.Data.DataColumn("SOLUTIONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOLUTIONS);
                this.columnSPARECHARGES = new global::System.Data.DataColumn("SPARECHARGES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPARECHARGES);
                this.columnSERVICECHARGES = new global::System.Data.DataColumn("SERVICECHARGES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICECHARGES);
                this.columnATTENDEDBY = new global::System.Data.DataColumn("ATTENDEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTENDEDBY);
                this.columnCALLTYPE = new global::System.Data.DataColumn("CALLTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALLTYPE);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceOrderRow NewServiceOrderRow() {
                return ((ServiceOrderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServiceOrderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ServiceOrderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServiceOrderRowChanged != null)) {
                    this.ServiceOrderRowChanged(this, new ServiceOrderRowChangeEvent(((ServiceOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServiceOrderRowChanging != null)) {
                    this.ServiceOrderRowChanging(this, new ServiceOrderRowChangeEvent(((ServiceOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServiceOrderRowDeleted != null)) {
                    this.ServiceOrderRowDeleted(this, new ServiceOrderRowChangeEvent(((ServiceOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServiceOrderRowDeleting != null)) {
                    this.ServiceOrderRowDeleting(this, new ServiceOrderRowChangeEvent(((ServiceOrderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveServiceOrderRow(ServiceOrderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServiceOrderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServiceInvoiceOldDataTable : global::System.Data.TypedTableBase<ServiceInvoiceOldRow> {
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnLeadNo;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnCITY;
            
            private global::System.Data.DataColumn columnPincode;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnSTATE;
            
            private global::System.Data.DataColumn columnITEMNAME;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnServiceRate;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseRate;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessRate;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessRate;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTRate;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATRate;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATRate;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceOldDataTable() {
                this.TableName = "ServiceInvoiceOld";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceInvoiceOldDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ServiceInvoiceOldDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LeadNoColumn {
                get {
                    return this.columnLeadNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CITYColumn {
                get {
                    return this.columnCITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PincodeColumn {
                get {
                    return this.columnPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMNAMEColumn {
                get {
                    return this.columnITEMNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceRateColumn {
                get {
                    return this.columnServiceRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseRateColumn {
                get {
                    return this.columnExciseRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessRateColumn {
                get {
                    return this.columnCessRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessRateColumn {
                get {
                    return this.columnHCessRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTRateColumn {
                get {
                    return this.columnCSTRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATRateColumn {
                get {
                    return this.columnVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATRateColumn {
                get {
                    return this.columnAVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceOldRow this[int index] {
                get {
                    return ((ServiceInvoiceOldRow)(this.Rows[index]));
                }
            }
            
            public event ServiceInvoiceOldRowChangeEventHandler ServiceInvoiceOldRowChanging;
            
            public event ServiceInvoiceOldRowChangeEventHandler ServiceInvoiceOldRowChanged;
            
            public event ServiceInvoiceOldRowChangeEventHandler ServiceInvoiceOldRowDeleting;
            
            public event ServiceInvoiceOldRowChangeEventHandler ServiceInvoiceOldRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddServiceInvoiceOldRow(ServiceInvoiceOldRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceOldRow AddServiceInvoiceOldRow(
                        string RequestNo, 
                        System.DateTime ServiceDate, 
                        string LeadNo, 
                        string CustomerName, 
                        string Address, 
                        string CITY, 
                        string Pincode, 
                        string Phone1, 
                        string STATE, 
                        string ITEMNAME, 
                        decimal Qty, 
                        string UOM, 
                        decimal Rate, 
                        decimal Amount, 
                        decimal ServiceRate, 
                        decimal ServiceAmount, 
                        decimal ExciseRate, 
                        decimal ExciseAmount, 
                        decimal CessRate, 
                        decimal CessAmount, 
                        decimal HCessRate, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTRate, 
                        decimal CSTAmount, 
                        decimal VATRate, 
                        decimal VATAmount, 
                        decimal AVATRate, 
                        decimal AVATAmount, 
                        decimal NetAmount, 
                        string TaxClass) {
                ServiceInvoiceOldRow rowServiceInvoiceOldRow = ((ServiceInvoiceOldRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RequestNo,
                        ServiceDate,
                        LeadNo,
                        CustomerName,
                        Address,
                        CITY,
                        Pincode,
                        Phone1,
                        STATE,
                        ITEMNAME,
                        Qty,
                        UOM,
                        Rate,
                        Amount,
                        ServiceRate,
                        ServiceAmount,
                        ExciseRate,
                        ExciseAmount,
                        CessRate,
                        CessAmount,
                        HCessRate,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTRate,
                        CSTAmount,
                        VATRate,
                        VATAmount,
                        AVATRate,
                        AVATAmount,
                        NetAmount,
                        TaxClass};
                rowServiceInvoiceOldRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServiceInvoiceOldRow);
                return rowServiceInvoiceOldRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ServiceInvoiceOldDataTable cln = ((ServiceInvoiceOldDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServiceInvoiceOldDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnLeadNo = base.Columns["LeadNo"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnCITY = base.Columns["CITY"];
                this.columnPincode = base.Columns["Pincode"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnSTATE = base.Columns["STATE"];
                this.columnITEMNAME = base.Columns["ITEMNAME"];
                this.columnQty = base.Columns["Qty"];
                this.columnUOM = base.Columns["UOM"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnServiceRate = base.Columns["ServiceRate"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseRate = base.Columns["ExciseRate"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessRate = base.Columns["CessRate"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessRate = base.Columns["HCessRate"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTRate = base.Columns["CSTRate"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATRate = base.Columns["VATRate"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATRate = base.Columns["AVATRate"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnTaxClass = base.Columns["TaxClass"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnLeadNo = new global::System.Data.DataColumn("LeadNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLeadNo);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnCITY = new global::System.Data.DataColumn("CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCITY);
                this.columnPincode = new global::System.Data.DataColumn("Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPincode);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnSTATE = new global::System.Data.DataColumn("STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE);
                this.columnITEMNAME = new global::System.Data.DataColumn("ITEMNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMNAME);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnServiceRate = new global::System.Data.DataColumn("ServiceRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceRate);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseRate = new global::System.Data.DataColumn("ExciseRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseRate);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessRate = new global::System.Data.DataColumn("CessRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessRate);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessRate = new global::System.Data.DataColumn("HCessRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessRate);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTRate = new global::System.Data.DataColumn("CSTRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTRate);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATRate = new global::System.Data.DataColumn("VATRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATRate);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATRate = new global::System.Data.DataColumn("AVATRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATRate);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceOldRow NewServiceInvoiceOldRow() {
                return ((ServiceInvoiceOldRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServiceInvoiceOldRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ServiceInvoiceOldRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServiceInvoiceOldRowChanged != null)) {
                    this.ServiceInvoiceOldRowChanged(this, new ServiceInvoiceOldRowChangeEvent(((ServiceInvoiceOldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServiceInvoiceOldRowChanging != null)) {
                    this.ServiceInvoiceOldRowChanging(this, new ServiceInvoiceOldRowChangeEvent(((ServiceInvoiceOldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServiceInvoiceOldRowDeleted != null)) {
                    this.ServiceInvoiceOldRowDeleted(this, new ServiceInvoiceOldRowChangeEvent(((ServiceInvoiceOldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServiceInvoiceOldRowDeleting != null)) {
                    this.ServiceInvoiceOldRowDeleting(this, new ServiceInvoiceOldRowChangeEvent(((ServiceInvoiceOldRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveServiceInvoiceOldRow(ServiceInvoiceOldRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServiceInvoiceOldDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemSalesDataTable : global::System.Data.TypedTableBase<ItemSalesRow> {
            
            private global::System.Data.DataColumn columnDATE;
            
            private global::System.Data.DataColumn columnITEMNAME;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnTYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemSalesDataTable() {
                this.TableName = "ItemSales";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemSalesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemSalesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATEColumn {
                get {
                    return this.columnDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMNAMEColumn {
                get {
                    return this.columnITEMNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemSalesRow this[int index] {
                get {
                    return ((ItemSalesRow)(this.Rows[index]));
                }
            }
            
            public event ItemSalesRowChangeEventHandler ItemSalesRowChanging;
            
            public event ItemSalesRowChangeEventHandler ItemSalesRowChanged;
            
            public event ItemSalesRowChangeEventHandler ItemSalesRowDeleting;
            
            public event ItemSalesRowChangeEventHandler ItemSalesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemSalesRow(ItemSalesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemSalesRow AddItemSalesRow(System.DateTime DATE, string ITEMNAME, decimal Qty, string CustomerName, string TYPE) {
                ItemSalesRow rowItemSalesRow = ((ItemSalesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DATE,
                        ITEMNAME,
                        Qty,
                        CustomerName,
                        TYPE};
                rowItemSalesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemSalesRow);
                return rowItemSalesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemSalesDataTable cln = ((ItemSalesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemSalesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDATE = base.Columns["DATE"];
                this.columnITEMNAME = base.Columns["ITEMNAME"];
                this.columnQty = base.Columns["Qty"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnTYPE = base.Columns["TYPE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDATE = new global::System.Data.DataColumn("DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE);
                this.columnITEMNAME = new global::System.Data.DataColumn("ITEMNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMNAME);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemSalesRow NewItemSalesRow() {
                return ((ItemSalesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemSalesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemSalesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemSalesRowChanged != null)) {
                    this.ItemSalesRowChanged(this, new ItemSalesRowChangeEvent(((ItemSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemSalesRowChanging != null)) {
                    this.ItemSalesRowChanging(this, new ItemSalesRowChangeEvent(((ItemSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemSalesRowDeleted != null)) {
                    this.ItemSalesRowDeleted(this, new ItemSalesRowChangeEvent(((ItemSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemSalesRowDeleting != null)) {
                    this.ItemSalesRowDeleting(this, new ItemSalesRowChangeEvent(((ItemSalesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemSalesRow(ItemSalesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemSalesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LogoDataTable : global::System.Data.TypedTableBase<LogoRow> {
            
            private global::System.Data.DataColumn columnLogo;
            
            private global::System.Data.DataColumn columnHeader;
            
            private global::System.Data.DataColumn columnFooter;
            
            private global::System.Data.DataColumn columnSign;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LogoDataTable() {
                this.TableName = "Logo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LogoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LogoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LogoColumn {
                get {
                    return this.columnLogo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HeaderColumn {
                get {
                    return this.columnHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FooterColumn {
                get {
                    return this.columnFooter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SignColumn {
                get {
                    return this.columnSign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LogoRow this[int index] {
                get {
                    return ((LogoRow)(this.Rows[index]));
                }
            }
            
            public event LogoRowChangeEventHandler LogoRowChanging;
            
            public event LogoRowChangeEventHandler LogoRowChanged;
            
            public event LogoRowChangeEventHandler LogoRowDeleting;
            
            public event LogoRowChangeEventHandler LogoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLogoRow(LogoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LogoRow AddLogoRow(byte[] Logo, byte[] Header, byte[] Footer, byte[] Sign) {
                LogoRow rowLogoRow = ((LogoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Logo,
                        Header,
                        Footer,
                        Sign};
                rowLogoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLogoRow);
                return rowLogoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LogoDataTable cln = ((LogoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LogoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLogo = base.Columns["Logo"];
                this.columnHeader = base.Columns["Header"];
                this.columnFooter = base.Columns["Footer"];
                this.columnSign = base.Columns["Sign"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLogo = new global::System.Data.DataColumn("Logo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogo);
                this.columnHeader = new global::System.Data.DataColumn("Header", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeader);
                this.columnFooter = new global::System.Data.DataColumn("Footer", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFooter);
                this.columnSign = new global::System.Data.DataColumn("Sign", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSign);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LogoRow NewLogoRow() {
                return ((LogoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LogoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LogoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LogoRowChanged != null)) {
                    this.LogoRowChanged(this, new LogoRowChangeEvent(((LogoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LogoRowChanging != null)) {
                    this.LogoRowChanging(this, new LogoRowChangeEvent(((LogoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LogoRowDeleted != null)) {
                    this.LogoRowDeleted(this, new LogoRowChangeEvent(((LogoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LogoRowDeleting != null)) {
                    this.LogoRowDeleting(this, new LogoRowChangeEvent(((LogoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLogoRow(LogoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LogoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ChallanCumTaxInvoiceDataTable : global::System.Data.TypedTableBase<ChallanCumTaxInvoiceRow> {
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnDCNO;
            
            private global::System.Data.DataColumn columnDCDate;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnExtraCharges;
            
            private global::System.Data.DataColumn columnExtraChargesType;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnADDRESS1;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPincode;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnTinNo;
            
            private global::System.Data.DataColumn columnDis;
            
            private global::System.Data.DataColumn columnShippingAdd;
            
            private global::System.Data.DataColumn columnBONo;
            
            private global::System.Data.DataColumn columnBODate;
            
            private global::System.Data.DataColumn columnDNote;
            
            private global::System.Data.DataColumn columnDNoteDate;
            
            private global::System.Data.DataColumn columnSuRNo;
            
            private global::System.Data.DataColumn columnDDNo;
            
            private global::System.Data.DataColumn columnDT;
            
            private global::System.Data.DataColumn columnD;
            
            private global::System.Data.DataColumn columnDtI;
            
            private global::System.Data.DataColumn columnTI;
            
            private global::System.Data.DataColumn columnDtR;
            
            private global::System.Data.DataColumn columnTR;
            
            private global::System.Data.DataColumn columnDueDays;
            
            private global::System.Data.DataColumn columnExciseRate;
            
            private global::System.Data.DataColumn columnCessRate;
            
            private global::System.Data.DataColumn columnHCessRate;
            
            private global::System.Data.DataColumn columnCSTRate;
            
            private global::System.Data.DataColumn columnVATRate;
            
            private global::System.Data.DataColumn columnAVATRate;
            
            private global::System.Data.DataColumn columnServiceRate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChallanCumTaxInvoiceDataTable() {
                this.TableName = "ChallanCumTaxInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ChallanCumTaxInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ChallanCumTaxInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCNOColumn {
                get {
                    return this.columnDCNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DCDateColumn {
                get {
                    return this.columnDCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraChargesColumn {
                get {
                    return this.columnExtraCharges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraChargesTypeColumn {
                get {
                    return this.columnExtraChargesType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESS1Column {
                get {
                    return this.columnADDRESS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PincodeColumn {
                get {
                    return this.columnPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TinNoColumn {
                get {
                    return this.columnTinNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisColumn {
                get {
                    return this.columnDis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShippingAddColumn {
                get {
                    return this.columnShippingAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BONoColumn {
                get {
                    return this.columnBONo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BODateColumn {
                get {
                    return this.columnBODate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DNoteColumn {
                get {
                    return this.columnDNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DNoteDateColumn {
                get {
                    return this.columnDNoteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SuRNoColumn {
                get {
                    return this.columnSuRNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DDNoColumn {
                get {
                    return this.columnDDNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DTColumn {
                get {
                    return this.columnDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DColumn {
                get {
                    return this.columnD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DtIColumn {
                get {
                    return this.columnDtI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIColumn {
                get {
                    return this.columnTI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DtRColumn {
                get {
                    return this.columnDtR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRColumn {
                get {
                    return this.columnTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDaysColumn {
                get {
                    return this.columnDueDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseRateColumn {
                get {
                    return this.columnExciseRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessRateColumn {
                get {
                    return this.columnCessRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessRateColumn {
                get {
                    return this.columnHCessRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTRateColumn {
                get {
                    return this.columnCSTRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATRateColumn {
                get {
                    return this.columnVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATRateColumn {
                get {
                    return this.columnAVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceRateColumn {
                get {
                    return this.columnServiceRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChallanCumTaxInvoiceRow this[int index] {
                get {
                    return ((ChallanCumTaxInvoiceRow)(this.Rows[index]));
                }
            }
            
            public event ChallanCumTaxInvoiceRowChangeEventHandler ChallanCumTaxInvoiceRowChanging;
            
            public event ChallanCumTaxInvoiceRowChangeEventHandler ChallanCumTaxInvoiceRowChanged;
            
            public event ChallanCumTaxInvoiceRowChangeEventHandler ChallanCumTaxInvoiceRowDeleting;
            
            public event ChallanCumTaxInvoiceRowChangeEventHandler ChallanCumTaxInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddChallanCumTaxInvoiceRow(ChallanCumTaxInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChallanCumTaxInvoiceRow AddChallanCumTaxInvoiceRow(
                        string SalesCode, 
                        System.DateTime SalesDate, 
                        string DCNO, 
                        System.DateTime DCDate, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal PaidAmount, 
                        long CustomerID, 
                        string Narration, 
                        long ItemID, 
                        string TaxClass, 
                        decimal Qty, 
                        decimal Rate, 
                        decimal Amount, 
                        string ItemName, 
                        decimal ExtraCharges, 
                        string ExtraChargesType, 
                        string UOM, 
                        string CUSTOMER, 
                        string ADDRESS1, 
                        string City, 
                        string State, 
                        string Pincode, 
                        string Phone1, 
                        string TinNo, 
                        decimal Dis, 
                        string ShippingAdd, 
                        string BONo, 
                        System.DateTime BODate, 
                        string DNote, 
                        System.DateTime DNoteDate, 
                        string SuRNo, 
                        string DDNo, 
                        string DT, 
                        string D, 
                        System.DateTime DtI, 
                        string TI, 
                        System.DateTime DtR, 
                        string TR, 
                        decimal DueDays, 
                        decimal ExciseRate, 
                        decimal CessRate, 
                        decimal HCessRate, 
                        decimal CSTRate, 
                        decimal VATRate, 
                        decimal AVATRate, 
                        decimal ServiceRate) {
                ChallanCumTaxInvoiceRow rowChallanCumTaxInvoiceRow = ((ChallanCumTaxInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesCode,
                        SalesDate,
                        DCNO,
                        DCDate,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        PaidAmount,
                        CustomerID,
                        Narration,
                        ItemID,
                        TaxClass,
                        Qty,
                        Rate,
                        Amount,
                        ItemName,
                        ExtraCharges,
                        ExtraChargesType,
                        UOM,
                        CUSTOMER,
                        ADDRESS1,
                        City,
                        State,
                        Pincode,
                        Phone1,
                        TinNo,
                        Dis,
                        ShippingAdd,
                        BONo,
                        BODate,
                        DNote,
                        DNoteDate,
                        SuRNo,
                        DDNo,
                        DT,
                        D,
                        DtI,
                        TI,
                        DtR,
                        TR,
                        DueDays,
                        ExciseRate,
                        CessRate,
                        HCessRate,
                        CSTRate,
                        VATRate,
                        AVATRate,
                        ServiceRate};
                rowChallanCumTaxInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowChallanCumTaxInvoiceRow);
                return rowChallanCumTaxInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ChallanCumTaxInvoiceDataTable cln = ((ChallanCumTaxInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ChallanCumTaxInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnDCNO = base.Columns["DCNO"];
                this.columnDCDate = base.Columns["DCDate"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnNarration = base.Columns["Narration"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnTaxClass = base.Columns["TaxClass"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnExtraCharges = base.Columns["ExtraCharges"];
                this.columnExtraChargesType = base.Columns["ExtraChargesType"];
                this.columnUOM = base.Columns["UOM"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnADDRESS1 = base.Columns["ADDRESS1"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnPincode = base.Columns["Pincode"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnTinNo = base.Columns["TinNo"];
                this.columnDis = base.Columns["Dis"];
                this.columnShippingAdd = base.Columns["ShippingAdd"];
                this.columnBONo = base.Columns["BONo"];
                this.columnBODate = base.Columns["BODate"];
                this.columnDNote = base.Columns["DNote"];
                this.columnDNoteDate = base.Columns["DNoteDate"];
                this.columnSuRNo = base.Columns["SuRNo"];
                this.columnDDNo = base.Columns["DDNo"];
                this.columnDT = base.Columns["DT"];
                this.columnD = base.Columns["D"];
                this.columnDtI = base.Columns["DtI"];
                this.columnTI = base.Columns["TI"];
                this.columnDtR = base.Columns["DtR"];
                this.columnTR = base.Columns["TR"];
                this.columnDueDays = base.Columns["DueDays"];
                this.columnExciseRate = base.Columns["ExciseRate"];
                this.columnCessRate = base.Columns["CessRate"];
                this.columnHCessRate = base.Columns["HCessRate"];
                this.columnCSTRate = base.Columns["CSTRate"];
                this.columnVATRate = base.Columns["VATRate"];
                this.columnAVATRate = base.Columns["AVATRate"];
                this.columnServiceRate = base.Columns["ServiceRate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnDCNO = new global::System.Data.DataColumn("DCNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCNO);
                this.columnDCDate = new global::System.Data.DataColumn("DCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDCDate);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnExtraCharges = new global::System.Data.DataColumn("ExtraCharges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraCharges);
                this.columnExtraChargesType = new global::System.Data.DataColumn("ExtraChargesType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraChargesType);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnADDRESS1 = new global::System.Data.DataColumn("ADDRESS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS1);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPincode = new global::System.Data.DataColumn("Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPincode);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnTinNo = new global::System.Data.DataColumn("TinNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTinNo);
                this.columnDis = new global::System.Data.DataColumn("Dis", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDis);
                this.columnShippingAdd = new global::System.Data.DataColumn("ShippingAdd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShippingAdd);
                this.columnBONo = new global::System.Data.DataColumn("BONo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBONo);
                this.columnBODate = new global::System.Data.DataColumn("BODate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBODate);
                this.columnDNote = new global::System.Data.DataColumn("DNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNote);
                this.columnDNoteDate = new global::System.Data.DataColumn("DNoteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNoteDate);
                this.columnSuRNo = new global::System.Data.DataColumn("SuRNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuRNo);
                this.columnDDNo = new global::System.Data.DataColumn("DDNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDNo);
                this.columnDT = new global::System.Data.DataColumn("DT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDT);
                this.columnD = new global::System.Data.DataColumn("D", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD);
                this.columnDtI = new global::System.Data.DataColumn("DtI", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDtI);
                this.columnTI = new global::System.Data.DataColumn("TI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTI);
                this.columnDtR = new global::System.Data.DataColumn("DtR", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDtR);
                this.columnTR = new global::System.Data.DataColumn("TR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR);
                this.columnDueDays = new global::System.Data.DataColumn("DueDays", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDays);
                this.columnExciseRate = new global::System.Data.DataColumn("ExciseRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseRate);
                this.columnCessRate = new global::System.Data.DataColumn("CessRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessRate);
                this.columnHCessRate = new global::System.Data.DataColumn("HCessRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessRate);
                this.columnCSTRate = new global::System.Data.DataColumn("CSTRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTRate);
                this.columnVATRate = new global::System.Data.DataColumn("VATRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATRate);
                this.columnAVATRate = new global::System.Data.DataColumn("AVATRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATRate);
                this.columnServiceRate = new global::System.Data.DataColumn("ServiceRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceRate);
                this.columnExciseRate.Caption = "ServiceRate";
                this.columnCessRate.Caption = "ServiceRate";
                this.columnHCessRate.Caption = "ServiceRate";
                this.columnCSTRate.Caption = "ServiceRate";
                this.columnVATRate.Caption = "ServiceRate";
                this.columnAVATRate.Caption = "ServiceRate";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChallanCumTaxInvoiceRow NewChallanCumTaxInvoiceRow() {
                return ((ChallanCumTaxInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ChallanCumTaxInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ChallanCumTaxInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ChallanCumTaxInvoiceRowChanged != null)) {
                    this.ChallanCumTaxInvoiceRowChanged(this, new ChallanCumTaxInvoiceRowChangeEvent(((ChallanCumTaxInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ChallanCumTaxInvoiceRowChanging != null)) {
                    this.ChallanCumTaxInvoiceRowChanging(this, new ChallanCumTaxInvoiceRowChangeEvent(((ChallanCumTaxInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ChallanCumTaxInvoiceRowDeleted != null)) {
                    this.ChallanCumTaxInvoiceRowDeleted(this, new ChallanCumTaxInvoiceRowChangeEvent(((ChallanCumTaxInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ChallanCumTaxInvoiceRowDeleting != null)) {
                    this.ChallanCumTaxInvoiceRowDeleting(this, new ChallanCumTaxInvoiceRowChangeEvent(((ChallanCumTaxInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveChallanCumTaxInvoiceRow(ChallanCumTaxInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ChallanCumTaxInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentRegister1DataTable : global::System.Data.TypedTableBase<PaymentRegister1Row> {
            
            private global::System.Data.DataColumn columnReceiptID;
            
            private global::System.Data.DataColumn columnReceiptCode;
            
            private global::System.Data.DataColumn columnReceiptDate;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnNetAmount1;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnPendingAmount;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnDueDays;
            
            private global::System.Data.DataColumn columnDueDate;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnRNetAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegister1DataTable() {
                this.TableName = "PaymentRegister1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentRegister1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentRegister1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptIDColumn {
                get {
                    return this.columnReceiptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptCodeColumn {
                get {
                    return this.columnReceiptCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptDateColumn {
                get {
                    return this.columnReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmount1Column {
                get {
                    return this.columnNetAmount1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PendingAmountColumn {
                get {
                    return this.columnPendingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDaysColumn {
                get {
                    return this.columnDueDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateColumn {
                get {
                    return this.columnDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RNetAmountColumn {
                get {
                    return this.columnRNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegister1Row this[int index] {
                get {
                    return ((PaymentRegister1Row)(this.Rows[index]));
                }
            }
            
            public event PaymentRegister1RowChangeEventHandler PaymentRegister1RowChanging;
            
            public event PaymentRegister1RowChangeEventHandler PaymentRegister1RowChanged;
            
            public event PaymentRegister1RowChangeEventHandler PaymentRegister1RowDeleting;
            
            public event PaymentRegister1RowChangeEventHandler PaymentRegister1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentRegister1Row(PaymentRegister1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegister1Row AddPaymentRegister1Row(
                        long ReceiptID, 
                        string ReceiptCode, 
                        System.DateTime ReceiptDate, 
                        long CustomerID, 
                        decimal NetAmount, 
                        string Narration, 
                        string CustomerName, 
                        string CustomerCode, 
                        decimal NetAmount1, 
                        decimal PaidAmount, 
                        decimal PendingAmount, 
                        long SIID, 
                        long DueDays, 
                        System.DateTime DueDate, 
                        string SalesCode, 
                        System.DateTime SalesDate, 
                        string RNetAmount) {
                PaymentRegister1Row rowPaymentRegister1Row = ((PaymentRegister1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReceiptID,
                        ReceiptCode,
                        ReceiptDate,
                        CustomerID,
                        NetAmount,
                        Narration,
                        CustomerName,
                        CustomerCode,
                        NetAmount1,
                        PaidAmount,
                        PendingAmount,
                        SIID,
                        DueDays,
                        DueDate,
                        SalesCode,
                        SalesDate,
                        RNetAmount};
                rowPaymentRegister1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaymentRegister1Row);
                return rowPaymentRegister1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PaymentRegister1DataTable cln = ((PaymentRegister1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaymentRegister1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceiptID = base.Columns["ReceiptID"];
                this.columnReceiptCode = base.Columns["ReceiptCode"];
                this.columnReceiptDate = base.Columns["ReceiptDate"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnNarration = base.Columns["Narration"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnNetAmount1 = base.Columns["NetAmount1"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnPendingAmount = base.Columns["PendingAmount"];
                this.columnSIID = base.Columns["SIID"];
                this.columnDueDays = base.Columns["DueDays"];
                this.columnDueDate = base.Columns["DueDate"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnRNetAmount = base.Columns["RNetAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceiptID = new global::System.Data.DataColumn("ReceiptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptID);
                this.columnReceiptCode = new global::System.Data.DataColumn("ReceiptCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptCode);
                this.columnReceiptDate = new global::System.Data.DataColumn("ReceiptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptDate);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnNetAmount1 = new global::System.Data.DataColumn("NetAmount1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount1);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnPendingAmount = new global::System.Data.DataColumn("PendingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPendingAmount);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnDueDays = new global::System.Data.DataColumn("DueDays", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDays);
                this.columnDueDate = new global::System.Data.DataColumn("DueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDate);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnRNetAmount = new global::System.Data.DataColumn("RNetAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRNetAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegister1Row NewPaymentRegister1Row() {
                return ((PaymentRegister1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaymentRegister1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PaymentRegister1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentRegister1RowChanged != null)) {
                    this.PaymentRegister1RowChanged(this, new PaymentRegister1RowChangeEvent(((PaymentRegister1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentRegister1RowChanging != null)) {
                    this.PaymentRegister1RowChanging(this, new PaymentRegister1RowChangeEvent(((PaymentRegister1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentRegister1RowDeleted != null)) {
                    this.PaymentRegister1RowDeleted(this, new PaymentRegister1RowChangeEvent(((PaymentRegister1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentRegister1RowDeleting != null)) {
                    this.PaymentRegister1RowDeleting(this, new PaymentRegister1RowChangeEvent(((PaymentRegister1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentRegister1Row(PaymentRegister1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentRegister1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemRegisterDataTable : global::System.Data.TypedTableBase<ItemRegisterRow> {
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columniCode;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnUOMID;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnSpecification;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnHSNCode;
            
            private global::System.Data.DataColumn columnProductCode;
            
            private global::System.Data.DataColumn columnITEMNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRegisterDataTable() {
                this.TableName = "ItemRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn iCodeColumn {
                get {
                    return this.columniCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMIDColumn {
                get {
                    return this.columnUOMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecificationColumn {
                get {
                    return this.columnSpecification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HSNCodeColumn {
                get {
                    return this.columnHSNCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductCodeColumn {
                get {
                    return this.columnProductCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMNAMEColumn {
                get {
                    return this.columnITEMNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRegisterRow this[int index] {
                get {
                    return ((ItemRegisterRow)(this.Rows[index]));
                }
            }
            
            public event ItemRegisterRowChangeEventHandler ItemRegisterRowChanging;
            
            public event ItemRegisterRowChangeEventHandler ItemRegisterRowChanged;
            
            public event ItemRegisterRowChangeEventHandler ItemRegisterRowDeleting;
            
            public event ItemRegisterRowChangeEventHandler ItemRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemRegisterRow(ItemRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRegisterRow AddItemRegisterRow(long ItemID, string iCode, string Name, long UOMID, string UOM, string Specification, decimal Price, string HSNCode, string ProductCode, string ITEMNAME) {
                ItemRegisterRow rowItemRegisterRow = ((ItemRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ItemID,
                        iCode,
                        Name,
                        UOMID,
                        UOM,
                        Specification,
                        Price,
                        HSNCode,
                        ProductCode,
                        ITEMNAME};
                rowItemRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemRegisterRow);
                return rowItemRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemRegisterDataTable cln = ((ItemRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnItemID = base.Columns["ItemID"];
                this.columniCode = base.Columns["iCode"];
                this.columnName = base.Columns["Name"];
                this.columnUOMID = base.Columns["UOMID"];
                this.columnUOM = base.Columns["UOM"];
                this.columnSpecification = base.Columns["Specification"];
                this.columnPrice = base.Columns["Price"];
                this.columnHSNCode = base.Columns["HSNCode"];
                this.columnProductCode = base.Columns["ProductCode"];
                this.columnITEMNAME = base.Columns["ITEMNAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columniCode = new global::System.Data.DataColumn("iCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columniCode);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnUOMID = new global::System.Data.DataColumn("UOMID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOMID);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnSpecification = new global::System.Data.DataColumn("Specification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecification);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnHSNCode = new global::System.Data.DataColumn("HSNCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHSNCode);
                this.columnProductCode = new global::System.Data.DataColumn("ProductCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCode);
                this.columnITEMNAME = new global::System.Data.DataColumn("ITEMNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMNAME);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRegisterRow NewItemRegisterRow() {
                return ((ItemRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemRegisterRowChanged != null)) {
                    this.ItemRegisterRowChanged(this, new ItemRegisterRowChangeEvent(((ItemRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemRegisterRowChanging != null)) {
                    this.ItemRegisterRowChanging(this, new ItemRegisterRowChangeEvent(((ItemRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemRegisterRowDeleted != null)) {
                    this.ItemRegisterRowDeleted(this, new ItemRegisterRowChangeEvent(((ItemRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemRegisterRowDeleting != null)) {
                    this.ItemRegisterRowDeleting(this, new ItemRegisterRowChangeEvent(((ItemRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemRegisterRow(ItemRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PORegisterDataTable : global::System.Data.TypedTableBase<PORegisterRow> {
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnPendingAmount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnContactPerson;
            
            private global::System.Data.DataColumn columnDueDate;
            
            private global::System.Data.DataColumn columnRecDay;
            
            private global::System.Data.DataColumn columnDueDays;
            
            private global::System.Data.DataColumn columnRNetAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PORegisterDataTable() {
                this.TableName = "PORegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PORegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PORegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PendingAmountColumn {
                get {
                    return this.columnPendingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ContactPersonColumn {
                get {
                    return this.columnContactPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateColumn {
                get {
                    return this.columnDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RecDayColumn {
                get {
                    return this.columnRecDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDaysColumn {
                get {
                    return this.columnDueDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RNetAmountColumn {
                get {
                    return this.columnRNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PORegisterRow this[int index] {
                get {
                    return ((PORegisterRow)(this.Rows[index]));
                }
            }
            
            public event PORegisterRowChangeEventHandler PORegisterRowChanging;
            
            public event PORegisterRowChangeEventHandler PORegisterRowChanged;
            
            public event PORegisterRowChangeEventHandler PORegisterRowDeleting;
            
            public event PORegisterRowChangeEventHandler PORegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPORegisterRow(PORegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PORegisterRow AddPORegisterRow(string SalesCode, decimal PendingAmount, decimal NetAmount, decimal PaidAmount, string CustomerCode, string CustomerName, string Mobile, string Email, string ContactPerson, System.DateTime DueDate, int RecDay, long DueDays, string RNetAmount) {
                PORegisterRow rowPORegisterRow = ((PORegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SalesCode,
                        PendingAmount,
                        NetAmount,
                        PaidAmount,
                        CustomerCode,
                        CustomerName,
                        Mobile,
                        Email,
                        ContactPerson,
                        DueDate,
                        RecDay,
                        DueDays,
                        RNetAmount};
                rowPORegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPORegisterRow);
                return rowPORegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PORegisterDataTable cln = ((PORegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PORegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnPendingAmount = base.Columns["PendingAmount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnEmail = base.Columns["Email"];
                this.columnContactPerson = base.Columns["ContactPerson"];
                this.columnDueDate = base.Columns["DueDate"];
                this.columnRecDay = base.Columns["RecDay"];
                this.columnDueDays = base.Columns["DueDays"];
                this.columnRNetAmount = base.Columns["RNetAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnPendingAmount = new global::System.Data.DataColumn("PendingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPendingAmount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnContactPerson = new global::System.Data.DataColumn("ContactPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactPerson);
                this.columnDueDate = new global::System.Data.DataColumn("DueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDate);
                this.columnRecDay = new global::System.Data.DataColumn("RecDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecDay);
                this.columnDueDays = new global::System.Data.DataColumn("DueDays", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDays);
                this.columnRNetAmount = new global::System.Data.DataColumn("RNetAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRNetAmount);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PORegisterRow NewPORegisterRow() {
                return ((PORegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PORegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PORegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PORegisterRowChanged != null)) {
                    this.PORegisterRowChanged(this, new PORegisterRowChangeEvent(((PORegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PORegisterRowChanging != null)) {
                    this.PORegisterRowChanging(this, new PORegisterRowChangeEvent(((PORegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PORegisterRowDeleted != null)) {
                    this.PORegisterRowDeleted(this, new PORegisterRowChangeEvent(((PORegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PORegisterRowDeleting != null)) {
                    this.PORegisterRowDeleting(this, new PORegisterRowChangeEvent(((PORegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePORegisterRow(PORegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PORegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrderBookingDataTable : global::System.Data.TypedTableBase<OrderBookingRow> {
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemDesc;
            
            private global::System.Data.DataColumn columnMoldNo;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnOQty;
            
            private global::System.Data.DataColumn columnSQty;
            
            private global::System.Data.DataColumn columnDiff;
            
            private global::System.Data.DataColumn columnOrdValue;
            
            private global::System.Data.DataColumn columnSupplyValue;
            
            private global::System.Data.DataColumn columndiff1;
            
            private global::System.Data.DataColumn columnOrderBookingID;
            
            private global::System.Data.DataColumn columnThirdPartyControl;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnPurchaseCode;
            
            private global::System.Data.DataColumn columnDQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderBookingDataTable() {
                this.TableName = "OrderBooking";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderBookingDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected OrderBookingDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemDescColumn {
                get {
                    return this.columnItemDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoldNoColumn {
                get {
                    return this.columnMoldNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OQtyColumn {
                get {
                    return this.columnOQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQtyColumn {
                get {
                    return this.columnSQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiffColumn {
                get {
                    return this.columnDiff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrdValueColumn {
                get {
                    return this.columnOrdValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SupplyValueColumn {
                get {
                    return this.columnSupplyValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn diff1Column {
                get {
                    return this.columndiff1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OrderBookingIDColumn {
                get {
                    return this.columnOrderBookingID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ThirdPartyControlColumn {
                get {
                    return this.columnThirdPartyControl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseCodeColumn {
                get {
                    return this.columnPurchaseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DQtyColumn {
                get {
                    return this.columnDQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderBookingRow this[int index] {
                get {
                    return ((OrderBookingRow)(this.Rows[index]));
                }
            }
            
            public event OrderBookingRowChangeEventHandler OrderBookingRowChanging;
            
            public event OrderBookingRowChangeEventHandler OrderBookingRowChanged;
            
            public event OrderBookingRowChangeEventHandler OrderBookingRowDeleting;
            
            public event OrderBookingRowChangeEventHandler OrderBookingRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOrderBookingRow(OrderBookingRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderBookingRow AddOrderBookingRow(
                        string CustomerName, 
                        string ItemCode, 
                        string ItemDesc, 
                        string MoldNo, 
                        decimal Rate, 
                        decimal OQty, 
                        int SQty, 
                        int Diff, 
                        int OrdValue, 
                        int SupplyValue, 
                        int diff1, 
                        long OrderBookingID, 
                        string ThirdPartyControl, 
                        string VendorName, 
                        string SalesCode, 
                        string PurchaseCode, 
                        string DQty) {
                OrderBookingRow rowOrderBookingRow = ((OrderBookingRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CustomerName,
                        ItemCode,
                        ItemDesc,
                        MoldNo,
                        Rate,
                        OQty,
                        SQty,
                        Diff,
                        OrdValue,
                        SupplyValue,
                        diff1,
                        OrderBookingID,
                        ThirdPartyControl,
                        VendorName,
                        SalesCode,
                        PurchaseCode,
                        DQty};
                rowOrderBookingRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrderBookingRow);
                return rowOrderBookingRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OrderBookingDataTable cln = ((OrderBookingDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrderBookingDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemDesc = base.Columns["ItemDesc"];
                this.columnMoldNo = base.Columns["MoldNo"];
                this.columnRate = base.Columns["Rate"];
                this.columnOQty = base.Columns["OQty"];
                this.columnSQty = base.Columns["SQty"];
                this.columnDiff = base.Columns["Diff"];
                this.columnOrdValue = base.Columns["OrdValue"];
                this.columnSupplyValue = base.Columns["SupplyValue"];
                this.columndiff1 = base.Columns["diff1"];
                this.columnOrderBookingID = base.Columns["OrderBookingID"];
                this.columnThirdPartyControl = base.Columns["ThirdPartyControl"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnPurchaseCode = base.Columns["PurchaseCode"];
                this.columnDQty = base.Columns["DQty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemDesc = new global::System.Data.DataColumn("ItemDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemDesc);
                this.columnMoldNo = new global::System.Data.DataColumn("MoldNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoldNo);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnOQty = new global::System.Data.DataColumn("OQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOQty);
                this.columnSQty = new global::System.Data.DataColumn("SQty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQty);
                this.columnDiff = new global::System.Data.DataColumn("Diff", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiff);
                this.columnOrdValue = new global::System.Data.DataColumn("OrdValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrdValue);
                this.columnSupplyValue = new global::System.Data.DataColumn("SupplyValue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplyValue);
                this.columndiff1 = new global::System.Data.DataColumn("diff1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiff1);
                this.columnOrderBookingID = new global::System.Data.DataColumn("OrderBookingID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrderBookingID);
                this.columnThirdPartyControl = new global::System.Data.DataColumn("ThirdPartyControl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThirdPartyControl);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnPurchaseCode = new global::System.Data.DataColumn("PurchaseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseCode);
                this.columnDQty = new global::System.Data.DataColumn("DQty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDQty);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderBookingRow NewOrderBookingRow() {
                return ((OrderBookingRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrderBookingRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OrderBookingRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrderBookingRowChanged != null)) {
                    this.OrderBookingRowChanged(this, new OrderBookingRowChangeEvent(((OrderBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrderBookingRowChanging != null)) {
                    this.OrderBookingRowChanging(this, new OrderBookingRowChangeEvent(((OrderBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrderBookingRowDeleted != null)) {
                    this.OrderBookingRowDeleted(this, new OrderBookingRowChangeEvent(((OrderBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrderBookingRowDeleting != null)) {
                    this.OrderBookingRowDeleting(this, new OrderBookingRowChangeEvent(((OrderBookingRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOrderBookingRow(OrderBookingRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrderBookingDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemPicDataTable : global::System.Data.TypedTableBase<ItemPicRow> {
            
            private global::System.Data.DataColumn columnDocName;
            
            private global::System.Data.DataColumn columnItemName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemPicDataTable() {
                this.TableName = "ItemPic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemPicDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemPicDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DocNameColumn {
                get {
                    return this.columnDocName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemPicRow this[int index] {
                get {
                    return ((ItemPicRow)(this.Rows[index]));
                }
            }
            
            public event ItemPicRowChangeEventHandler ItemPicRowChanging;
            
            public event ItemPicRowChangeEventHandler ItemPicRowChanged;
            
            public event ItemPicRowChangeEventHandler ItemPicRowDeleting;
            
            public event ItemPicRowChangeEventHandler ItemPicRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemPicRow(ItemPicRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemPicRow AddItemPicRow(byte[] DocName, string ItemName) {
                ItemPicRow rowItemPicRow = ((ItemPicRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DocName,
                        ItemName};
                rowItemPicRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemPicRow);
                return rowItemPicRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemPicDataTable cln = ((ItemPicDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemPicDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDocName = base.Columns["DocName"];
                this.columnItemName = base.Columns["ItemName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDocName = new global::System.Data.DataColumn("DocName", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocName);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemPicRow NewItemPicRow() {
                return ((ItemPicRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemPicRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemPicRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemPicRowChanged != null)) {
                    this.ItemPicRowChanged(this, new ItemPicRowChangeEvent(((ItemPicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemPicRowChanging != null)) {
                    this.ItemPicRowChanging(this, new ItemPicRowChangeEvent(((ItemPicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemPicRowDeleted != null)) {
                    this.ItemPicRowDeleted(this, new ItemPicRowChangeEvent(((ItemPicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemPicRowDeleting != null)) {
                    this.ItemPicRowDeleting(this, new ItemPicRowChangeEvent(((ItemPicRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemPicRow(ItemPicRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemPicDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Ledger_ReportDataTable : global::System.Data.TypedTableBase<Ledger_ReportRow> {
            
            private global::System.Data.DataColumn columnAccCode;
            
            private global::System.Data.DataColumn columnAccName;
            
            private global::System.Data.DataColumn columnTransactionDate;
            
            private global::System.Data.DataColumn columnTransactionType;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnCRAmount;
            
            private global::System.Data.DataColumn columnDBAmount;
            
            private global::System.Data.DataColumn columnAccountName;
            
            private global::System.Data.DataColumn columnLedgerID;
            
            private global::System.Data.DataColumn columnCreditNoteAmount;
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnDebitNoteAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Ledger_ReportDataTable() {
                this.TableName = "Ledger_Report";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Ledger_ReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Ledger_ReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccCodeColumn {
                get {
                    return this.columnAccCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccNameColumn {
                get {
                    return this.columnAccName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransactionDateColumn {
                get {
                    return this.columnTransactionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransactionTypeColumn {
                get {
                    return this.columnTransactionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRAmountColumn {
                get {
                    return this.columnCRAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DBAmountColumn {
                get {
                    return this.columnDBAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccountNameColumn {
                get {
                    return this.columnAccountName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LedgerIDColumn {
                get {
                    return this.columnLedgerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditNoteAmountColumn {
                get {
                    return this.columnCreditNoteAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteAmountColumn {
                get {
                    return this.columnDebitNoteAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Ledger_ReportRow this[int index] {
                get {
                    return ((Ledger_ReportRow)(this.Rows[index]));
                }
            }
            
            public event Ledger_ReportRowChangeEventHandler Ledger_ReportRowChanging;
            
            public event Ledger_ReportRowChangeEventHandler Ledger_ReportRowChanged;
            
            public event Ledger_ReportRowChangeEventHandler Ledger_ReportRowDeleting;
            
            public event Ledger_ReportRowChangeEventHandler Ledger_ReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLedger_ReportRow(Ledger_ReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Ledger_ReportRow AddLedger_ReportRow(string AccCode, string AccName, System.DateTime TransactionDate, string TransactionType, string Narration, decimal CRAmount, decimal DBAmount, string AccountName, long LedgerID, decimal CreditNoteAmount, int SrNo, decimal DebitNoteAmount) {
                Ledger_ReportRow rowLedger_ReportRow = ((Ledger_ReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AccCode,
                        AccName,
                        TransactionDate,
                        TransactionType,
                        Narration,
                        CRAmount,
                        DBAmount,
                        AccountName,
                        LedgerID,
                        CreditNoteAmount,
                        SrNo,
                        DebitNoteAmount};
                rowLedger_ReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLedger_ReportRow);
                return rowLedger_ReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Ledger_ReportDataTable cln = ((Ledger_ReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Ledger_ReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAccCode = base.Columns["AccCode"];
                this.columnAccName = base.Columns["AccName"];
                this.columnTransactionDate = base.Columns["TransactionDate"];
                this.columnTransactionType = base.Columns["TransactionType"];
                this.columnNarration = base.Columns["Narration"];
                this.columnCRAmount = base.Columns["CRAmount"];
                this.columnDBAmount = base.Columns["DBAmount"];
                this.columnAccountName = base.Columns["AccountName"];
                this.columnLedgerID = base.Columns["LedgerID"];
                this.columnCreditNoteAmount = base.Columns["CreditNoteAmount"];
                this.columnSrNo = base.Columns["SrNo"];
                this.columnDebitNoteAmount = base.Columns["DebitNoteAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAccCode = new global::System.Data.DataColumn("AccCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccCode);
                this.columnAccName = new global::System.Data.DataColumn("AccName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccName);
                this.columnTransactionDate = new global::System.Data.DataColumn("TransactionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionDate);
                this.columnTransactionType = new global::System.Data.DataColumn("TransactionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionType);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnCRAmount = new global::System.Data.DataColumn("CRAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRAmount);
                this.columnDBAmount = new global::System.Data.DataColumn("DBAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDBAmount);
                this.columnAccountName = new global::System.Data.DataColumn("AccountName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountName);
                this.columnLedgerID = new global::System.Data.DataColumn("LedgerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLedgerID);
                this.columnCreditNoteAmount = new global::System.Data.DataColumn("CreditNoteAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditNoteAmount);
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnDebitNoteAmount = new global::System.Data.DataColumn("DebitNoteAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteAmount);
                this.columnCreditNoteAmount.Caption = "creditdebitAmount";
                this.columnDebitNoteAmount.Caption = "Debitnoteamount";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Ledger_ReportRow NewLedger_ReportRow() {
                return ((Ledger_ReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Ledger_ReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Ledger_ReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Ledger_ReportRowChanged != null)) {
                    this.Ledger_ReportRowChanged(this, new Ledger_ReportRowChangeEvent(((Ledger_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Ledger_ReportRowChanging != null)) {
                    this.Ledger_ReportRowChanging(this, new Ledger_ReportRowChangeEvent(((Ledger_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Ledger_ReportRowDeleted != null)) {
                    this.Ledger_ReportRowDeleted(this, new Ledger_ReportRowChangeEvent(((Ledger_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Ledger_ReportRowDeleting != null)) {
                    this.Ledger_ReportRowDeleting(this, new Ledger_ReportRowChangeEvent(((Ledger_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLedger_ReportRow(Ledger_ReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Ledger_ReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DebitNoteDataTable : global::System.Data.TypedTableBase<DebitNoteRow> {
            
            private global::System.Data.DataColumn columnDNnumber;
            
            private global::System.Data.DataColumn columnDNDate;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnfinalamount;
            
            private global::System.Data.DataColumn columnDebitNoteAmount;
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnADDRESS1;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPincode;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemSpec;
            
            private global::System.Data.DataColumn columnItemSSpec;
            
            private global::System.Data.DataColumn columnHSNCode;
            
            private global::System.Data.DataColumn columnDis;
            
            private global::System.Data.DataColumn columnDiscountAmt;
            
            private global::System.Data.DataColumn columnMobile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DebitNoteDataTable() {
                this.TableName = "DebitNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DebitNoteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DebitNoteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DNnumberColumn {
                get {
                    return this.columnDNnumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DNDateColumn {
                get {
                    return this.columnDNDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn finalamountColumn {
                get {
                    return this.columnfinalamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteAmountColumn {
                get {
                    return this.columnDebitNoteAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESS1Column {
                get {
                    return this.columnADDRESS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PincodeColumn {
                get {
                    return this.columnPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemSpecColumn {
                get {
                    return this.columnItemSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemSSpecColumn {
                get {
                    return this.columnItemSSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HSNCodeColumn {
                get {
                    return this.columnHSNCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisColumn {
                get {
                    return this.columnDis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountAmtColumn {
                get {
                    return this.columnDiscountAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DebitNoteRow this[int index] {
                get {
                    return ((DebitNoteRow)(this.Rows[index]));
                }
            }
            
            public event DebitNoteRowChangeEventHandler DebitNoteRowChanging;
            
            public event DebitNoteRowChangeEventHandler DebitNoteRowChanged;
            
            public event DebitNoteRowChangeEventHandler DebitNoteRowDeleting;
            
            public event DebitNoteRowChangeEventHandler DebitNoteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDebitNoteRow(DebitNoteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DebitNoteRow AddDebitNoteRow(
                        string DNnumber, 
                        System.DateTime DNDate, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal finalamount, 
                        decimal DebitNoteAmount, 
                        long VendorID, 
                        string Narration, 
                        long ItemID, 
                        string TaxClass, 
                        decimal Qty, 
                        decimal Rate, 
                        decimal Amount, 
                        string UOM, 
                        string name, 
                        string ADDRESS1, 
                        string City, 
                        string State, 
                        string Pincode, 
                        string Phone1, 
                        string ItemName, 
                        string ItemSpec, 
                        string ItemSSpec, 
                        string HSNCode, 
                        decimal Dis, 
                        decimal DiscountAmt, 
                        string Mobile) {
                DebitNoteRow rowDebitNoteRow = ((DebitNoteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DNnumber,
                        DNDate,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        finalamount,
                        DebitNoteAmount,
                        VendorID,
                        Narration,
                        ItemID,
                        TaxClass,
                        Qty,
                        Rate,
                        Amount,
                        UOM,
                        name,
                        ADDRESS1,
                        City,
                        State,
                        Pincode,
                        Phone1,
                        ItemName,
                        ItemSpec,
                        ItemSSpec,
                        HSNCode,
                        Dis,
                        DiscountAmt,
                        Mobile};
                rowDebitNoteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDebitNoteRow);
                return rowDebitNoteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DebitNoteDataTable cln = ((DebitNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DebitNoteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDNnumber = base.Columns["DNnumber"];
                this.columnDNDate = base.Columns["DNDate"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnfinalamount = base.Columns["finalamount"];
                this.columnDebitNoteAmount = base.Columns["DebitNoteAmount"];
                this.columnVendorID = base.Columns["VendorID"];
                this.columnNarration = base.Columns["Narration"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnTaxClass = base.Columns["TaxClass"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnUOM = base.Columns["UOM"];
                this.columnname = base.Columns["name"];
                this.columnADDRESS1 = base.Columns["ADDRESS1"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnPincode = base.Columns["Pincode"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemSpec = base.Columns["ItemSpec"];
                this.columnItemSSpec = base.Columns["ItemSSpec"];
                this.columnHSNCode = base.Columns["HSNCode"];
                this.columnDis = base.Columns["Dis"];
                this.columnDiscountAmt = base.Columns["DiscountAmt"];
                this.columnMobile = base.Columns["Mobile"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDNnumber = new global::System.Data.DataColumn("DNnumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNnumber);
                this.columnDNDate = new global::System.Data.DataColumn("DNDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDNDate);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnfinalamount = new global::System.Data.DataColumn("finalamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinalamount);
                this.columnDebitNoteAmount = new global::System.Data.DataColumn("DebitNoteAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteAmount);
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnADDRESS1 = new global::System.Data.DataColumn("ADDRESS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS1);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPincode = new global::System.Data.DataColumn("Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPincode);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemSpec = new global::System.Data.DataColumn("ItemSpec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemSpec);
                this.columnItemSSpec = new global::System.Data.DataColumn("ItemSSpec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemSSpec);
                this.columnHSNCode = new global::System.Data.DataColumn("HSNCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHSNCode);
                this.columnDis = new global::System.Data.DataColumn("Dis", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDis);
                this.columnDiscountAmt = new global::System.Data.DataColumn("DiscountAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmt);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnDebitNoteAmount.Caption = "DebitNoteamount";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DebitNoteRow NewDebitNoteRow() {
                return ((DebitNoteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DebitNoteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DebitNoteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DebitNoteRowChanged != null)) {
                    this.DebitNoteRowChanged(this, new DebitNoteRowChangeEvent(((DebitNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DebitNoteRowChanging != null)) {
                    this.DebitNoteRowChanging(this, new DebitNoteRowChangeEvent(((DebitNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DebitNoteRowDeleted != null)) {
                    this.DebitNoteRowDeleted(this, new DebitNoteRowChangeEvent(((DebitNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DebitNoteRowDeleting != null)) {
                    this.DebitNoteRowDeleting(this, new DebitNoteRowChangeEvent(((DebitNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDebitNoteRow(DebitNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DebitNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CreditNoteDataTable : global::System.Data.TypedTableBase<CreditNoteRow> {
            
            private global::System.Data.DataColumn columnCNnumber;
            
            private global::System.Data.DataColumn columnCNDate;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnAmountAfterExcise;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnDiscount;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnfinalamount;
            
            private global::System.Data.DataColumn columnCreditNoteAmount;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnItemID;
            
            private global::System.Data.DataColumn columnTaxClass;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnCUSTOMER;
            
            private global::System.Data.DataColumn columnADDRESS1;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnPincode;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemSpec;
            
            private global::System.Data.DataColumn columnItemSSpec;
            
            private global::System.Data.DataColumn columnHSNCode;
            
            private global::System.Data.DataColumn columnDis;
            
            private global::System.Data.DataColumn columnDiscountAmt;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnEmail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CreditNoteDataTable() {
                this.TableName = "CreditNote";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CreditNoteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CreditNoteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNnumberColumn {
                get {
                    return this.columnCNnumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNDateColumn {
                get {
                    return this.columnCNDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountAfterExciseColumn {
                get {
                    return this.columnAmountAfterExcise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountColumn {
                get {
                    return this.columnDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn finalamountColumn {
                get {
                    return this.columnfinalamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditNoteAmountColumn {
                get {
                    return this.columnCreditNoteAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemIDColumn {
                get {
                    return this.columnItemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxClassColumn {
                get {
                    return this.columnTaxClass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERColumn {
                get {
                    return this.columnCUSTOMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESS1Column {
                get {
                    return this.columnADDRESS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PincodeColumn {
                get {
                    return this.columnPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemSpecColumn {
                get {
                    return this.columnItemSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemSSpecColumn {
                get {
                    return this.columnItemSSpec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HSNCodeColumn {
                get {
                    return this.columnHSNCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisColumn {
                get {
                    return this.columnDis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DiscountAmtColumn {
                get {
                    return this.columnDiscountAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CreditNoteRow this[int index] {
                get {
                    return ((CreditNoteRow)(this.Rows[index]));
                }
            }
            
            public event CreditNoteRowChangeEventHandler CreditNoteRowChanging;
            
            public event CreditNoteRowChangeEventHandler CreditNoteRowChanged;
            
            public event CreditNoteRowChangeEventHandler CreditNoteRowDeleting;
            
            public event CreditNoteRowChangeEventHandler CreditNoteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCreditNoteRow(CreditNoteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CreditNoteRow AddCreditNoteRow(
                        string CNnumber, 
                        System.DateTime CNDate, 
                        decimal TotalAmount, 
                        decimal ServiceAmount, 
                        decimal ExciseAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal AmountAfterExcise, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        decimal Discount, 
                        decimal NetAmount, 
                        decimal finalamount, 
                        decimal CreditNoteAmount, 
                        long CustomerID, 
                        string Narration, 
                        long ItemID, 
                        string TaxClass, 
                        decimal Qty, 
                        decimal Rate, 
                        decimal Amount, 
                        string UOM, 
                        string CUSTOMER, 
                        string ADDRESS1, 
                        string City, 
                        string State, 
                        string Pincode, 
                        string Phone1, 
                        string ItemName, 
                        string ItemSpec, 
                        string ItemSSpec, 
                        string HSNCode, 
                        decimal Dis, 
                        decimal DiscountAmt, 
                        string MobileNo, 
                        string Email) {
                CreditNoteRow rowCreditNoteRow = ((CreditNoteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CNnumber,
                        CNDate,
                        TotalAmount,
                        ServiceAmount,
                        ExciseAmount,
                        CessAmount,
                        HCessAmount,
                        AmountAfterExcise,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Discount,
                        NetAmount,
                        finalamount,
                        CreditNoteAmount,
                        CustomerID,
                        Narration,
                        ItemID,
                        TaxClass,
                        Qty,
                        Rate,
                        Amount,
                        UOM,
                        CUSTOMER,
                        ADDRESS1,
                        City,
                        State,
                        Pincode,
                        Phone1,
                        ItemName,
                        ItemSpec,
                        ItemSSpec,
                        HSNCode,
                        Dis,
                        DiscountAmt,
                        MobileNo,
                        Email};
                rowCreditNoteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCreditNoteRow);
                return rowCreditNoteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CreditNoteDataTable cln = ((CreditNoteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CreditNoteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCNnumber = base.Columns["CNnumber"];
                this.columnCNDate = base.Columns["CNDate"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnAmountAfterExcise = base.Columns["AmountAfterExcise"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnDiscount = base.Columns["Discount"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnfinalamount = base.Columns["finalamount"];
                this.columnCreditNoteAmount = base.Columns["CreditNoteAmount"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnNarration = base.Columns["Narration"];
                this.columnItemID = base.Columns["ItemID"];
                this.columnTaxClass = base.Columns["TaxClass"];
                this.columnQty = base.Columns["Qty"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnUOM = base.Columns["UOM"];
                this.columnCUSTOMER = base.Columns["CUSTOMER"];
                this.columnADDRESS1 = base.Columns["ADDRESS1"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnPincode = base.Columns["Pincode"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemSpec = base.Columns["ItemSpec"];
                this.columnItemSSpec = base.Columns["ItemSSpec"];
                this.columnHSNCode = base.Columns["HSNCode"];
                this.columnDis = base.Columns["Dis"];
                this.columnDiscountAmt = base.Columns["DiscountAmt"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnEmail = base.Columns["Email"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCNnumber = new global::System.Data.DataColumn("CNnumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNnumber);
                this.columnCNDate = new global::System.Data.DataColumn("CNDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNDate);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnAmountAfterExcise = new global::System.Data.DataColumn("AmountAfterExcise", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountAfterExcise);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnDiscount = new global::System.Data.DataColumn("Discount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscount);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnfinalamount = new global::System.Data.DataColumn("finalamount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinalamount);
                this.columnCreditNoteAmount = new global::System.Data.DataColumn("CreditNoteAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditNoteAmount);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnItemID = new global::System.Data.DataColumn("ItemID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemID);
                this.columnTaxClass = new global::System.Data.DataColumn("TaxClass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxClass);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnCUSTOMER = new global::System.Data.DataColumn("CUSTOMER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMER);
                this.columnADDRESS1 = new global::System.Data.DataColumn("ADDRESS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS1);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnPincode = new global::System.Data.DataColumn("Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPincode);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemSpec = new global::System.Data.DataColumn("ItemSpec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemSpec);
                this.columnItemSSpec = new global::System.Data.DataColumn("ItemSSpec", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemSSpec);
                this.columnHSNCode = new global::System.Data.DataColumn("HSNCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHSNCode);
                this.columnDis = new global::System.Data.DataColumn("Dis", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDis);
                this.columnDiscountAmt = new global::System.Data.DataColumn("DiscountAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountAmt);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnCreditNoteAmount.Caption = "Creditnoteamount";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CreditNoteRow NewCreditNoteRow() {
                return ((CreditNoteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CreditNoteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CreditNoteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CreditNoteRowChanged != null)) {
                    this.CreditNoteRowChanged(this, new CreditNoteRowChangeEvent(((CreditNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CreditNoteRowChanging != null)) {
                    this.CreditNoteRowChanging(this, new CreditNoteRowChangeEvent(((CreditNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CreditNoteRowDeleted != null)) {
                    this.CreditNoteRowDeleted(this, new CreditNoteRowChangeEvent(((CreditNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CreditNoteRowDeleting != null)) {
                    this.CreditNoteRowDeleting(this, new CreditNoteRowChangeEvent(((CreditNoteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCreditNoteRow(CreditNoteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CreditNoteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServiceInvoiceDataTable : global::System.Data.TypedTableBase<ServiceInvoiceRow> {
            
            private global::System.Data.DataColumn columnServiceId;
            
            private global::System.Data.DataColumn columnRequestNo;
            
            private global::System.Data.DataColumn columnServiceDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnMobileNo;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnPROBLEM;
            
            private global::System.Data.DataColumn columnSPARESUSED;
            
            private global::System.Data.DataColumn columnSOLUTIONS;
            
            private global::System.Data.DataColumn columnSPARECHARGES;
            
            private global::System.Data.DataColumn columnSERVICECHARGES;
            
            private global::System.Data.DataColumn columnATTENDEDBY;
            
            private global::System.Data.DataColumn columnCALLTYPE;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnName1;
            
            private global::System.Data.DataColumn columnName2;
            
            private global::System.Data.DataColumn columnName3;
            
            private global::System.Data.DataColumn columnName4;
            
            private global::System.Data.DataColumn columnName5;
            
            private global::System.Data.DataColumn columnName6;
            
            private global::System.Data.DataColumn columnValue1;
            
            private global::System.Data.DataColumn columnValue2;
            
            private global::System.Data.DataColumn columnValue3;
            
            private global::System.Data.DataColumn columnValue4;
            
            private global::System.Data.DataColumn columnValue5;
            
            private global::System.Data.DataColumn columnValue6;
            
            private global::System.Data.DataColumn columnITEMNAME;
            
            private global::System.Data.DataColumn columnITEMSPEC;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnUOM;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnServiceAmount;
            
            private global::System.Data.DataColumn columnCessAmount;
            
            private global::System.Data.DataColumn columnHCessAmount;
            
            private global::System.Data.DataColumn columnVATRate;
            
            private global::System.Data.DataColumn columnAVATRate;
            
            private global::System.Data.DataColumn columnExciseAmount;
            
            private global::System.Data.DataColumn columnCSTAmount;
            
            private global::System.Data.DataColumn columnVATAmount;
            
            private global::System.Data.DataColumn columnAVATAmount;
            
            private global::System.Data.DataColumn columnPhone1;
            
            private global::System.Data.DataColumn columnCITY;
            
            private global::System.Data.DataColumn columnSTATE;
            
            private global::System.Data.DataColumn columnPincode;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            private global::System.Data.DataColumn columnSBCessAmount;
            
            private global::System.Data.DataColumn columnExtraTaxAmount;
            
            private global::System.Data.DataColumn columnExtraTaxType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceDataTable() {
                this.TableName = "ServiceInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ServiceInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceIdColumn {
                get {
                    return this.columnServiceId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestNoColumn {
                get {
                    return this.columnRequestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceDateColumn {
                get {
                    return this.columnServiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MobileNoColumn {
                get {
                    return this.columnMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROBLEMColumn {
                get {
                    return this.columnPROBLEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPARESUSEDColumn {
                get {
                    return this.columnSPARESUSED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SOLUTIONSColumn {
                get {
                    return this.columnSOLUTIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPARECHARGESColumn {
                get {
                    return this.columnSPARECHARGES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICECHARGESColumn {
                get {
                    return this.columnSERVICECHARGES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTENDEDBYColumn {
                get {
                    return this.columnATTENDEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CALLTYPEColumn {
                get {
                    return this.columnCALLTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name1Column {
                get {
                    return this.columnName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name2Column {
                get {
                    return this.columnName2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name3Column {
                get {
                    return this.columnName3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name4Column {
                get {
                    return this.columnName4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name5Column {
                get {
                    return this.columnName5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Name6Column {
                get {
                    return this.columnName6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value1Column {
                get {
                    return this.columnValue1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value2Column {
                get {
                    return this.columnValue2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value3Column {
                get {
                    return this.columnValue3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value4Column {
                get {
                    return this.columnValue4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value5Column {
                get {
                    return this.columnValue5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Value6Column {
                get {
                    return this.columnValue6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMNAMEColumn {
                get {
                    return this.columnITEMNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ITEMSPECColumn {
                get {
                    return this.columnITEMSPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UOMColumn {
                get {
                    return this.columnUOM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ServiceAmountColumn {
                get {
                    return this.columnServiceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CessAmountColumn {
                get {
                    return this.columnCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HCessAmountColumn {
                get {
                    return this.columnHCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATRateColumn {
                get {
                    return this.columnVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATRateColumn {
                get {
                    return this.columnAVATRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExciseAmountColumn {
                get {
                    return this.columnExciseAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTAmountColumn {
                get {
                    return this.columnCSTAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VATAmountColumn {
                get {
                    return this.columnVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVATAmountColumn {
                get {
                    return this.columnAVATAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Phone1Column {
                get {
                    return this.columnPhone1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CITYColumn {
                get {
                    return this.columnCITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PincodeColumn {
                get {
                    return this.columnPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SBCessAmountColumn {
                get {
                    return this.columnSBCessAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraTaxAmountColumn {
                get {
                    return this.columnExtraTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ExtraTaxTypeColumn {
                get {
                    return this.columnExtraTaxType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceRow this[int index] {
                get {
                    return ((ServiceInvoiceRow)(this.Rows[index]));
                }
            }
            
            public event ServiceInvoiceRowChangeEventHandler ServiceInvoiceRowChanging;
            
            public event ServiceInvoiceRowChangeEventHandler ServiceInvoiceRowChanged;
            
            public event ServiceInvoiceRowChangeEventHandler ServiceInvoiceRowDeleting;
            
            public event ServiceInvoiceRowChangeEventHandler ServiceInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddServiceInvoiceRow(ServiceInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceRow AddServiceInvoiceRow(
                        long ServiceId, 
                        string RequestNo, 
                        System.DateTime ServiceDate, 
                        string CustomerName, 
                        string Address, 
                        string MobileNo, 
                        string EMAIL, 
                        string PROBLEM, 
                        string SPARESUSED, 
                        string SOLUTIONS, 
                        decimal SPARECHARGES, 
                        decimal SERVICECHARGES, 
                        string ATTENDEDBY, 
                        string CALLTYPE, 
                        string Status, 
                        string Remarks, 
                        string Name1, 
                        string Name2, 
                        string Name3, 
                        string Name4, 
                        string Name5, 
                        string Name6, 
                        string Value1, 
                        string Value2, 
                        string Value3, 
                        string Value4, 
                        string Value5, 
                        string Value6, 
                        string ITEMNAME, 
                        string ITEMSPEC, 
                        decimal Qty, 
                        string UOM, 
                        decimal Rate, 
                        decimal Amount, 
                        decimal ServiceAmount, 
                        decimal CessAmount, 
                        decimal HCessAmount, 
                        decimal VATRate, 
                        decimal AVATRate, 
                        decimal ExciseAmount, 
                        decimal CSTAmount, 
                        decimal VATAmount, 
                        decimal AVATAmount, 
                        string Phone1, 
                        string CITY, 
                        string STATE, 
                        string Pincode, 
                        string Email1, 
                        string Currency, 
                        string CurrencyName, 
                        decimal SBCessAmount, 
                        decimal ExtraTaxAmount, 
                        string ExtraTaxType) {
                ServiceInvoiceRow rowServiceInvoiceRow = ((ServiceInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ServiceId,
                        RequestNo,
                        ServiceDate,
                        CustomerName,
                        Address,
                        MobileNo,
                        EMAIL,
                        PROBLEM,
                        SPARESUSED,
                        SOLUTIONS,
                        SPARECHARGES,
                        SERVICECHARGES,
                        ATTENDEDBY,
                        CALLTYPE,
                        Status,
                        Remarks,
                        Name1,
                        Name2,
                        Name3,
                        Name4,
                        Name5,
                        Name6,
                        Value1,
                        Value2,
                        Value3,
                        Value4,
                        Value5,
                        Value6,
                        ITEMNAME,
                        ITEMSPEC,
                        Qty,
                        UOM,
                        Rate,
                        Amount,
                        ServiceAmount,
                        CessAmount,
                        HCessAmount,
                        VATRate,
                        AVATRate,
                        ExciseAmount,
                        CSTAmount,
                        VATAmount,
                        AVATAmount,
                        Phone1,
                        CITY,
                        STATE,
                        Pincode,
                        Email1,
                        Currency,
                        CurrencyName,
                        SBCessAmount,
                        ExtraTaxAmount,
                        ExtraTaxType};
                rowServiceInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServiceInvoiceRow);
                return rowServiceInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ServiceInvoiceDataTable cln = ((ServiceInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServiceInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnServiceId = base.Columns["ServiceId"];
                this.columnRequestNo = base.Columns["RequestNo"];
                this.columnServiceDate = base.Columns["ServiceDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnAddress = base.Columns["Address"];
                this.columnMobileNo = base.Columns["MobileNo"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnPROBLEM = base.Columns["PROBLEM"];
                this.columnSPARESUSED = base.Columns["SPARESUSED"];
                this.columnSOLUTIONS = base.Columns["SOLUTIONS"];
                this.columnSPARECHARGES = base.Columns["SPARECHARGES"];
                this.columnSERVICECHARGES = base.Columns["SERVICECHARGES"];
                this.columnATTENDEDBY = base.Columns["ATTENDEDBY"];
                this.columnCALLTYPE = base.Columns["CALLTYPE"];
                this.columnStatus = base.Columns["Status"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnName1 = base.Columns["Name1"];
                this.columnName2 = base.Columns["Name2"];
                this.columnName3 = base.Columns["Name3"];
                this.columnName4 = base.Columns["Name4"];
                this.columnName5 = base.Columns["Name5"];
                this.columnName6 = base.Columns["Name6"];
                this.columnValue1 = base.Columns["Value1"];
                this.columnValue2 = base.Columns["Value2"];
                this.columnValue3 = base.Columns["Value3"];
                this.columnValue4 = base.Columns["Value4"];
                this.columnValue5 = base.Columns["Value5"];
                this.columnValue6 = base.Columns["Value6"];
                this.columnITEMNAME = base.Columns["ITEMNAME"];
                this.columnITEMSPEC = base.Columns["ITEMSPEC"];
                this.columnQty = base.Columns["Qty"];
                this.columnUOM = base.Columns["UOM"];
                this.columnRate = base.Columns["Rate"];
                this.columnAmount = base.Columns["Amount"];
                this.columnServiceAmount = base.Columns["ServiceAmount"];
                this.columnCessAmount = base.Columns["CessAmount"];
                this.columnHCessAmount = base.Columns["HCessAmount"];
                this.columnVATRate = base.Columns["VATRate"];
                this.columnAVATRate = base.Columns["AVATRate"];
                this.columnExciseAmount = base.Columns["ExciseAmount"];
                this.columnCSTAmount = base.Columns["CSTAmount"];
                this.columnVATAmount = base.Columns["VATAmount"];
                this.columnAVATAmount = base.Columns["AVATAmount"];
                this.columnPhone1 = base.Columns["Phone1"];
                this.columnCITY = base.Columns["CITY"];
                this.columnSTATE = base.Columns["STATE"];
                this.columnPincode = base.Columns["Pincode"];
                this.columnEmail = base.Columns["Email"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
                this.columnSBCessAmount = base.Columns["SBCessAmount"];
                this.columnExtraTaxAmount = base.Columns["ExtraTaxAmount"];
                this.columnExtraTaxType = base.Columns["ExtraTaxType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnServiceId = new global::System.Data.DataColumn("ServiceId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceId);
                this.columnRequestNo = new global::System.Data.DataColumn("RequestNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestNo);
                this.columnServiceDate = new global::System.Data.DataColumn("ServiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnMobileNo = new global::System.Data.DataColumn("MobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobileNo);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnPROBLEM = new global::System.Data.DataColumn("PROBLEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROBLEM);
                this.columnSPARESUSED = new global::System.Data.DataColumn("SPARESUSED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPARESUSED);
                this.columnSOLUTIONS = new global::System.Data.DataColumn("SOLUTIONS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOLUTIONS);
                this.columnSPARECHARGES = new global::System.Data.DataColumn("SPARECHARGES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPARECHARGES);
                this.columnSERVICECHARGES = new global::System.Data.DataColumn("SERVICECHARGES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICECHARGES);
                this.columnATTENDEDBY = new global::System.Data.DataColumn("ATTENDEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTENDEDBY);
                this.columnCALLTYPE = new global::System.Data.DataColumn("CALLTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALLTYPE);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnName1 = new global::System.Data.DataColumn("Name1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName1);
                this.columnName2 = new global::System.Data.DataColumn("Name2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName2);
                this.columnName3 = new global::System.Data.DataColumn("Name3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName3);
                this.columnName4 = new global::System.Data.DataColumn("Name4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName4);
                this.columnName5 = new global::System.Data.DataColumn("Name5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName5);
                this.columnName6 = new global::System.Data.DataColumn("Name6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName6);
                this.columnValue1 = new global::System.Data.DataColumn("Value1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue1);
                this.columnValue2 = new global::System.Data.DataColumn("Value2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue2);
                this.columnValue3 = new global::System.Data.DataColumn("Value3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue3);
                this.columnValue4 = new global::System.Data.DataColumn("Value4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue4);
                this.columnValue5 = new global::System.Data.DataColumn("Value5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue5);
                this.columnValue6 = new global::System.Data.DataColumn("Value6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue6);
                this.columnITEMNAME = new global::System.Data.DataColumn("ITEMNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMNAME);
                this.columnITEMSPEC = new global::System.Data.DataColumn("ITEMSPEC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEMSPEC);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnUOM = new global::System.Data.DataColumn("UOM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUOM);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnServiceAmount = new global::System.Data.DataColumn("ServiceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceAmount);
                this.columnCessAmount = new global::System.Data.DataColumn("CessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCessAmount);
                this.columnHCessAmount = new global::System.Data.DataColumn("HCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHCessAmount);
                this.columnVATRate = new global::System.Data.DataColumn("VATRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATRate);
                this.columnAVATRate = new global::System.Data.DataColumn("AVATRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATRate);
                this.columnExciseAmount = new global::System.Data.DataColumn("ExciseAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExciseAmount);
                this.columnCSTAmount = new global::System.Data.DataColumn("CSTAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTAmount);
                this.columnVATAmount = new global::System.Data.DataColumn("VATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATAmount);
                this.columnAVATAmount = new global::System.Data.DataColumn("AVATAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVATAmount);
                this.columnPhone1 = new global::System.Data.DataColumn("Phone1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone1);
                this.columnCITY = new global::System.Data.DataColumn("CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCITY);
                this.columnSTATE = new global::System.Data.DataColumn("STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE);
                this.columnPincode = new global::System.Data.DataColumn("Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPincode);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.columnSBCessAmount = new global::System.Data.DataColumn("SBCessAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBCessAmount);
                this.columnExtraTaxAmount = new global::System.Data.DataColumn("ExtraTaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraTaxAmount);
                this.columnExtraTaxType = new global::System.Data.DataColumn("ExtraTaxType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtraTaxType);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceRow NewServiceInvoiceRow() {
                return ((ServiceInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServiceInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ServiceInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServiceInvoiceRowChanged != null)) {
                    this.ServiceInvoiceRowChanged(this, new ServiceInvoiceRowChangeEvent(((ServiceInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServiceInvoiceRowChanging != null)) {
                    this.ServiceInvoiceRowChanging(this, new ServiceInvoiceRowChangeEvent(((ServiceInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServiceInvoiceRowDeleted != null)) {
                    this.ServiceInvoiceRowDeleted(this, new ServiceInvoiceRowChangeEvent(((ServiceInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServiceInvoiceRowDeleting != null)) {
                    this.ServiceInvoiceRowDeleting(this, new ServiceInvoiceRowChangeEvent(((ServiceInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveServiceInvoiceRow(ServiceInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServiceInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProfitnLossStatementDataTable : global::System.Data.TypedTableBase<ProfitnLossStatementRow> {
            
            private global::System.Data.DataColumn columnTotalSalesAmt;
            
            private global::System.Data.DataColumn columnTotalPurchaseAmt;
            
            private global::System.Data.DataColumn columnTotalExpenseAmt;
            
            private global::System.Data.DataColumn columnTotalProfit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProfitnLossStatementDataTable() {
                this.TableName = "ProfitnLossStatement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProfitnLossStatementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProfitnLossStatementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalSalesAmtColumn {
                get {
                    return this.columnTotalSalesAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalPurchaseAmtColumn {
                get {
                    return this.columnTotalPurchaseAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalExpenseAmtColumn {
                get {
                    return this.columnTotalExpenseAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalProfitColumn {
                get {
                    return this.columnTotalProfit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProfitnLossStatementRow this[int index] {
                get {
                    return ((ProfitnLossStatementRow)(this.Rows[index]));
                }
            }
            
            public event ProfitnLossStatementRowChangeEventHandler ProfitnLossStatementRowChanging;
            
            public event ProfitnLossStatementRowChangeEventHandler ProfitnLossStatementRowChanged;
            
            public event ProfitnLossStatementRowChangeEventHandler ProfitnLossStatementRowDeleting;
            
            public event ProfitnLossStatementRowChangeEventHandler ProfitnLossStatementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProfitnLossStatementRow(ProfitnLossStatementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProfitnLossStatementRow AddProfitnLossStatementRow(decimal TotalSalesAmt, decimal TotalPurchaseAmt, decimal TotalExpenseAmt, decimal TotalProfit) {
                ProfitnLossStatementRow rowProfitnLossStatementRow = ((ProfitnLossStatementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TotalSalesAmt,
                        TotalPurchaseAmt,
                        TotalExpenseAmt,
                        TotalProfit};
                rowProfitnLossStatementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProfitnLossStatementRow);
                return rowProfitnLossStatementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ProfitnLossStatementDataTable cln = ((ProfitnLossStatementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProfitnLossStatementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTotalSalesAmt = base.Columns["TotalSalesAmt"];
                this.columnTotalPurchaseAmt = base.Columns["TotalPurchaseAmt"];
                this.columnTotalExpenseAmt = base.Columns["TotalExpenseAmt"];
                this.columnTotalProfit = base.Columns["TotalProfit"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTotalSalesAmt = new global::System.Data.DataColumn("TotalSalesAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalSalesAmt);
                this.columnTotalPurchaseAmt = new global::System.Data.DataColumn("TotalPurchaseAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPurchaseAmt);
                this.columnTotalExpenseAmt = new global::System.Data.DataColumn("TotalExpenseAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalExpenseAmt);
                this.columnTotalProfit = new global::System.Data.DataColumn("TotalProfit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalProfit);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProfitnLossStatementRow NewProfitnLossStatementRow() {
                return ((ProfitnLossStatementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProfitnLossStatementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ProfitnLossStatementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProfitnLossStatementRowChanged != null)) {
                    this.ProfitnLossStatementRowChanged(this, new ProfitnLossStatementRowChangeEvent(((ProfitnLossStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProfitnLossStatementRowChanging != null)) {
                    this.ProfitnLossStatementRowChanging(this, new ProfitnLossStatementRowChangeEvent(((ProfitnLossStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProfitnLossStatementRowDeleted != null)) {
                    this.ProfitnLossStatementRowDeleted(this, new ProfitnLossStatementRowChangeEvent(((ProfitnLossStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProfitnLossStatementRowDeleting != null)) {
                    this.ProfitnLossStatementRowDeleting(this, new ProfitnLossStatementRowChangeEvent(((ProfitnLossStatementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProfitnLossStatementRow(ProfitnLossStatementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProfitnLossStatementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentReturnRegisterDataTable : global::System.Data.TypedTableBase<PaymentReturnRegisterRow> {
            
            private global::System.Data.DataColumn columnDebitNoteID;
            
            private global::System.Data.DataColumn columnDebitNoteCode;
            
            private global::System.Data.DataColumn columnDebitNoteDate;
            
            private global::System.Data.DataColumn columnVendorID;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnVendorCode;
            
            private global::System.Data.DataColumn columnFinalAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnPendingAmount;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnDueDays;
            
            private global::System.Data.DataColumn columnDueDate;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnRNetAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnRegisterDataTable() {
                this.TableName = "PaymentReturnRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentReturnRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentReturnRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteIDColumn {
                get {
                    return this.columnDebitNoteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteCodeColumn {
                get {
                    return this.columnDebitNoteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DebitNoteDateColumn {
                get {
                    return this.columnDebitNoteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorIDColumn {
                get {
                    return this.columnVendorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalAmountColumn {
                get {
                    return this.columnFinalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PendingAmountColumn {
                get {
                    return this.columnPendingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDaysColumn {
                get {
                    return this.columnDueDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateColumn {
                get {
                    return this.columnDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RNetAmountColumn {
                get {
                    return this.columnRNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnRegisterRow this[int index] {
                get {
                    return ((PaymentReturnRegisterRow)(this.Rows[index]));
                }
            }
            
            public event PaymentReturnRegisterRowChangeEventHandler PaymentReturnRegisterRowChanging;
            
            public event PaymentReturnRegisterRowChangeEventHandler PaymentReturnRegisterRowChanged;
            
            public event PaymentReturnRegisterRowChangeEventHandler PaymentReturnRegisterRowDeleting;
            
            public event PaymentReturnRegisterRowChangeEventHandler PaymentReturnRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentReturnRegisterRow(PaymentReturnRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnRegisterRow AddPaymentReturnRegisterRow(
                        long DebitNoteID, 
                        string DebitNoteCode, 
                        System.DateTime DebitNoteDate, 
                        long VendorID, 
                        decimal NetAmount, 
                        string Narration, 
                        string VendorName, 
                        string VendorCode, 
                        decimal FinalAmount, 
                        decimal PaidAmount, 
                        decimal PendingAmount, 
                        long SIID, 
                        long DueDays, 
                        System.DateTime DueDate, 
                        string SalesCode, 
                        System.DateTime SalesDate, 
                        string RNetAmount) {
                PaymentReturnRegisterRow rowPaymentReturnRegisterRow = ((PaymentReturnRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DebitNoteID,
                        DebitNoteCode,
                        DebitNoteDate,
                        VendorID,
                        NetAmount,
                        Narration,
                        VendorName,
                        VendorCode,
                        FinalAmount,
                        PaidAmount,
                        PendingAmount,
                        SIID,
                        DueDays,
                        DueDate,
                        SalesCode,
                        SalesDate,
                        RNetAmount};
                rowPaymentReturnRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaymentReturnRegisterRow);
                return rowPaymentReturnRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PaymentReturnRegisterDataTable cln = ((PaymentReturnRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaymentReturnRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDebitNoteID = base.Columns["DebitNoteID"];
                this.columnDebitNoteCode = base.Columns["DebitNoteCode"];
                this.columnDebitNoteDate = base.Columns["DebitNoteDate"];
                this.columnVendorID = base.Columns["VendorID"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnNarration = base.Columns["Narration"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnVendorCode = base.Columns["VendorCode"];
                this.columnFinalAmount = base.Columns["FinalAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnPendingAmount = base.Columns["PendingAmount"];
                this.columnSIID = base.Columns["SIID"];
                this.columnDueDays = base.Columns["DueDays"];
                this.columnDueDate = base.Columns["DueDate"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnRNetAmount = base.Columns["RNetAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDebitNoteID = new global::System.Data.DataColumn("DebitNoteID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteID);
                this.columnDebitNoteCode = new global::System.Data.DataColumn("DebitNoteCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteCode);
                this.columnDebitNoteDate = new global::System.Data.DataColumn("DebitNoteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebitNoteDate);
                this.columnVendorID = new global::System.Data.DataColumn("VendorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorID);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnVendorCode = new global::System.Data.DataColumn("VendorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
                this.columnFinalAmount = new global::System.Data.DataColumn("FinalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnPendingAmount = new global::System.Data.DataColumn("PendingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPendingAmount);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnDueDays = new global::System.Data.DataColumn("DueDays", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDays);
                this.columnDueDate = new global::System.Data.DataColumn("DueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDate);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnRNetAmount = new global::System.Data.DataColumn("RNetAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRNetAmount);
                this.columnDebitNoteID.Caption = "ReceiptID";
                this.columnDebitNoteCode.Caption = "ReceiptCode";
                this.columnDebitNoteDate.Caption = "ReceiptDate";
                this.columnVendorID.Caption = "CustomerID";
                this.columnVendorName.Caption = "CustomerName";
                this.columnVendorCode.Caption = "CustomerCode";
                this.columnFinalAmount.Caption = "NetAmount1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnRegisterRow NewPaymentReturnRegisterRow() {
                return ((PaymentReturnRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaymentReturnRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PaymentReturnRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentReturnRegisterRowChanged != null)) {
                    this.PaymentReturnRegisterRowChanged(this, new PaymentReturnRegisterRowChangeEvent(((PaymentReturnRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentReturnRegisterRowChanging != null)) {
                    this.PaymentReturnRegisterRowChanging(this, new PaymentReturnRegisterRowChangeEvent(((PaymentReturnRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentReturnRegisterRowDeleted != null)) {
                    this.PaymentReturnRegisterRowDeleted(this, new PaymentReturnRegisterRowChangeEvent(((PaymentReturnRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentReturnRegisterRowDeleting != null)) {
                    this.PaymentReturnRegisterRowDeleting(this, new PaymentReturnRegisterRowChangeEvent(((PaymentReturnRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentReturnRegisterRow(PaymentReturnRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentReturnRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CustomerPaymentReturnRegisterDataTable : global::System.Data.TypedTableBase<CustomerPaymentReturnRegisterRow> {
            
            private global::System.Data.DataColumn columnCreditNoteID;
            
            private global::System.Data.DataColumn columnCreditNoteCode;
            
            private global::System.Data.DataColumn columnCreditNoteDate;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerCode;
            
            private global::System.Data.DataColumn columnFinalAmount;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnPendingAmount;
            
            private global::System.Data.DataColumn columnSIID;
            
            private global::System.Data.DataColumn columnDueDays;
            
            private global::System.Data.DataColumn columnDueDate;
            
            private global::System.Data.DataColumn columnSalesCode;
            
            private global::System.Data.DataColumn columnSalesDate;
            
            private global::System.Data.DataColumn columnRNetAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentReturnRegisterDataTable() {
                this.TableName = "CustomerPaymentReturnRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPaymentReturnRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CustomerPaymentReturnRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditNoteIDColumn {
                get {
                    return this.columnCreditNoteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditNoteCodeColumn {
                get {
                    return this.columnCreditNoteCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreditNoteDateColumn {
                get {
                    return this.columnCreditNoteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerCodeColumn {
                get {
                    return this.columnCustomerCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FinalAmountColumn {
                get {
                    return this.columnFinalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PendingAmountColumn {
                get {
                    return this.columnPendingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIIDColumn {
                get {
                    return this.columnSIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDaysColumn {
                get {
                    return this.columnDueDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateColumn {
                get {
                    return this.columnDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesCodeColumn {
                get {
                    return this.columnSalesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SalesDateColumn {
                get {
                    return this.columnSalesDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RNetAmountColumn {
                get {
                    return this.columnRNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentReturnRegisterRow this[int index] {
                get {
                    return ((CustomerPaymentReturnRegisterRow)(this.Rows[index]));
                }
            }
            
            public event CustomerPaymentReturnRegisterRowChangeEventHandler CustomerPaymentReturnRegisterRowChanging;
            
            public event CustomerPaymentReturnRegisterRowChangeEventHandler CustomerPaymentReturnRegisterRowChanged;
            
            public event CustomerPaymentReturnRegisterRowChangeEventHandler CustomerPaymentReturnRegisterRowDeleting;
            
            public event CustomerPaymentReturnRegisterRowChangeEventHandler CustomerPaymentReturnRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCustomerPaymentReturnRegisterRow(CustomerPaymentReturnRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentReturnRegisterRow AddCustomerPaymentReturnRegisterRow(
                        long CreditNoteID, 
                        string CreditNoteCode, 
                        System.DateTime CreditNoteDate, 
                        long CustomerID, 
                        decimal NetAmount, 
                        string Narration, 
                        string CustomerName, 
                        string CustomerCode, 
                        decimal FinalAmount, 
                        decimal PaidAmount, 
                        decimal PendingAmount, 
                        long SIID, 
                        long DueDays, 
                        System.DateTime DueDate, 
                        string SalesCode, 
                        System.DateTime SalesDate, 
                        string RNetAmount) {
                CustomerPaymentReturnRegisterRow rowCustomerPaymentReturnRegisterRow = ((CustomerPaymentReturnRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CreditNoteID,
                        CreditNoteCode,
                        CreditNoteDate,
                        CustomerID,
                        NetAmount,
                        Narration,
                        CustomerName,
                        CustomerCode,
                        FinalAmount,
                        PaidAmount,
                        PendingAmount,
                        SIID,
                        DueDays,
                        DueDate,
                        SalesCode,
                        SalesDate,
                        RNetAmount};
                rowCustomerPaymentReturnRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCustomerPaymentReturnRegisterRow);
                return rowCustomerPaymentReturnRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CustomerPaymentReturnRegisterDataTable cln = ((CustomerPaymentReturnRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CustomerPaymentReturnRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCreditNoteID = base.Columns["CreditNoteID"];
                this.columnCreditNoteCode = base.Columns["CreditNoteCode"];
                this.columnCreditNoteDate = base.Columns["CreditNoteDate"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnNarration = base.Columns["Narration"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerCode = base.Columns["CustomerCode"];
                this.columnFinalAmount = base.Columns["FinalAmount"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnPendingAmount = base.Columns["PendingAmount"];
                this.columnSIID = base.Columns["SIID"];
                this.columnDueDays = base.Columns["DueDays"];
                this.columnDueDate = base.Columns["DueDate"];
                this.columnSalesCode = base.Columns["SalesCode"];
                this.columnSalesDate = base.Columns["SalesDate"];
                this.columnRNetAmount = base.Columns["RNetAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCreditNoteID = new global::System.Data.DataColumn("CreditNoteID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditNoteID);
                this.columnCreditNoteCode = new global::System.Data.DataColumn("CreditNoteCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditNoteCode);
                this.columnCreditNoteDate = new global::System.Data.DataColumn("CreditNoteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditNoteDate);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerCode = new global::System.Data.DataColumn("CustomerCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerCode);
                this.columnFinalAmount = new global::System.Data.DataColumn("FinalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalAmount);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnPendingAmount = new global::System.Data.DataColumn("PendingAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPendingAmount);
                this.columnSIID = new global::System.Data.DataColumn("SIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIID);
                this.columnDueDays = new global::System.Data.DataColumn("DueDays", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDays);
                this.columnDueDate = new global::System.Data.DataColumn("DueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDate);
                this.columnSalesCode = new global::System.Data.DataColumn("SalesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesCode);
                this.columnSalesDate = new global::System.Data.DataColumn("SalesDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSalesDate);
                this.columnRNetAmount = new global::System.Data.DataColumn("RNetAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRNetAmount);
                this.columnCreditNoteID.Caption = "ReceiptID";
                this.columnCreditNoteCode.Caption = "ReceiptCode";
                this.columnCreditNoteDate.Caption = "ReceiptDate";
                this.columnFinalAmount.Caption = "NetAmount1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentReturnRegisterRow NewCustomerPaymentReturnRegisterRow() {
                return ((CustomerPaymentReturnRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CustomerPaymentReturnRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CustomerPaymentReturnRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CustomerPaymentReturnRegisterRowChanged != null)) {
                    this.CustomerPaymentReturnRegisterRowChanged(this, new CustomerPaymentReturnRegisterRowChangeEvent(((CustomerPaymentReturnRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CustomerPaymentReturnRegisterRowChanging != null)) {
                    this.CustomerPaymentReturnRegisterRowChanging(this, new CustomerPaymentReturnRegisterRowChangeEvent(((CustomerPaymentReturnRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CustomerPaymentReturnRegisterRowDeleted != null)) {
                    this.CustomerPaymentReturnRegisterRowDeleted(this, new CustomerPaymentReturnRegisterRowChangeEvent(((CustomerPaymentReturnRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CustomerPaymentReturnRegisterRowDeleting != null)) {
                    this.CustomerPaymentReturnRegisterRowDeleting(this, new CustomerPaymentReturnRegisterRowChangeEvent(((CustomerPaymentReturnRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCustomerPaymentReturnRegisterRow(CustomerPaymentReturnRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CustomerPaymentReturnRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentReturnReceiptDataTable : global::System.Data.TypedTableBase<PaymentReturnReceiptRow> {
            
            private global::System.Data.DataColumn columnReceiptReturnCode;
            
            private global::System.Data.DataColumn columnCUSTOMERNAME;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnReceiptReturnDate;
            
            private global::System.Data.DataColumn columnCurrency;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnReceiptDataTable() {
                this.TableName = "PaymentReturnReceipt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentReturnReceiptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentReturnReceiptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptReturnCodeColumn {
                get {
                    return this.columnReceiptReturnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTOMERNAMEColumn {
                get {
                    return this.columnCUSTOMERNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptReturnDateColumn {
                get {
                    return this.columnReceiptReturnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyColumn {
                get {
                    return this.columnCurrency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnReceiptRow this[int index] {
                get {
                    return ((PaymentReturnReceiptRow)(this.Rows[index]));
                }
            }
            
            public event PaymentReturnReceiptRowChangeEventHandler PaymentReturnReceiptRowChanging;
            
            public event PaymentReturnReceiptRowChangeEventHandler PaymentReturnReceiptRowChanged;
            
            public event PaymentReturnReceiptRowChangeEventHandler PaymentReturnReceiptRowDeleting;
            
            public event PaymentReturnReceiptRowChangeEventHandler PaymentReturnReceiptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentReturnReceiptRow(PaymentReturnReceiptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnReceiptRow AddPaymentReturnReceiptRow(string ReceiptReturnCode, string CUSTOMERNAME, decimal NetAmount, System.DateTime ReceiptReturnDate, string Currency, string CurrencyName) {
                PaymentReturnReceiptRow rowPaymentReturnReceiptRow = ((PaymentReturnReceiptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReceiptReturnCode,
                        CUSTOMERNAME,
                        NetAmount,
                        ReceiptReturnDate,
                        Currency,
                        CurrencyName};
                rowPaymentReturnReceiptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaymentReturnReceiptRow);
                return rowPaymentReturnReceiptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PaymentReturnReceiptDataTable cln = ((PaymentReturnReceiptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaymentReturnReceiptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnReceiptReturnCode = base.Columns["ReceiptReturnCode"];
                this.columnCUSTOMERNAME = base.Columns["CUSTOMERNAME"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnReceiptReturnDate = base.Columns["ReceiptReturnDate"];
                this.columnCurrency = base.Columns["Currency"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnReceiptReturnCode = new global::System.Data.DataColumn("ReceiptReturnCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptReturnCode);
                this.columnCUSTOMERNAME = new global::System.Data.DataColumn("CUSTOMERNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTOMERNAME);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnReceiptReturnDate = new global::System.Data.DataColumn("ReceiptReturnDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptReturnDate);
                this.columnCurrency = new global::System.Data.DataColumn("Currency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.columnReceiptReturnCode.Caption = "ReceiptCode";
                this.columnReceiptReturnDate.Caption = "ReceiptDate";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnReceiptRow NewPaymentReturnReceiptRow() {
                return ((PaymentReturnReceiptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaymentReturnReceiptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PaymentReturnReceiptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentReturnReceiptRowChanged != null)) {
                    this.PaymentReturnReceiptRowChanged(this, new PaymentReturnReceiptRowChangeEvent(((PaymentReturnReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentReturnReceiptRowChanging != null)) {
                    this.PaymentReturnReceiptRowChanging(this, new PaymentReturnReceiptRowChangeEvent(((PaymentReturnReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentReturnReceiptRowDeleted != null)) {
                    this.PaymentReturnReceiptRowDeleted(this, new PaymentReturnReceiptRowChangeEvent(((PaymentReturnReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentReturnReceiptRowDeleting != null)) {
                    this.PaymentReturnReceiptRowDeleting(this, new PaymentReturnReceiptRowChangeEvent(((PaymentReturnReceiptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentReturnReceiptRow(PaymentReturnReceiptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentReturnReceiptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PaymentRegisterDataTable : global::System.Data.TypedTableBase<PaymentRegisterRow> {
            
            private global::System.Data.DataColumn columnVendorCode;
            
            private global::System.Data.DataColumn columnVendorName;
            
            private global::System.Data.DataColumn columnPurchaseCode;
            
            private global::System.Data.DataColumn columnPurchaseDate;
            
            private global::System.Data.DataColumn columnDueDays;
            
            private global::System.Data.DataColumn columnDueDate;
            
            private global::System.Data.DataColumn columnPIID;
            
            private global::System.Data.DataColumn columnPaidAmount;
            
            private global::System.Data.DataColumn columnPendingAmount;
            
            private global::System.Data.DataColumn columnPaymentMode;
            
            private global::System.Data.DataColumn columnNarration;
            
            private global::System.Data.DataColumn columnChequeNo;
            
            private global::System.Data.DataColumn columnChequeDate;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnCustomerBankName;
            
            private global::System.Data.DataColumn columnNetAmount;
            
            private global::System.Data.DataColumn columnVoucherNo;
            
            private global::System.Data.DataColumn columnVoucherDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegisterDataTable() {
                this.TableName = "PaymentRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PaymentRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorCodeColumn {
                get {
                    return this.columnVendorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VendorNameColumn {
                get {
                    return this.columnVendorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseCodeColumn {
                get {
                    return this.columnPurchaseCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PurchaseDateColumn {
                get {
                    return this.columnPurchaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDaysColumn {
                get {
                    return this.columnDueDays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DueDateColumn {
                get {
                    return this.columnDueDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PIIDColumn {
                get {
                    return this.columnPIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaidAmountColumn {
                get {
                    return this.columnPaidAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PendingAmountColumn {
                get {
                    return this.columnPendingAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PaymentModeColumn {
                get {
                    return this.columnPaymentMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeNoColumn {
                get {
                    return this.columnChequeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ChequeDateColumn {
                get {
                    return this.columnChequeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustomerBankNameColumn {
                get {
                    return this.columnCustomerBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NetAmountColumn {
                get {
                    return this.columnNetAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherNoColumn {
                get {
                    return this.columnVoucherNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VoucherDateColumn {
                get {
                    return this.columnVoucherDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegisterRow this[int index] {
                get {
                    return ((PaymentRegisterRow)(this.Rows[index]));
                }
            }
            
            public event PaymentRegisterRowChangeEventHandler PaymentRegisterRowChanging;
            
            public event PaymentRegisterRowChangeEventHandler PaymentRegisterRowChanged;
            
            public event PaymentRegisterRowChangeEventHandler PaymentRegisterRowDeleting;
            
            public event PaymentRegisterRowChangeEventHandler PaymentRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPaymentRegisterRow(PaymentRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegisterRow AddPaymentRegisterRow(
                        string VendorCode, 
                        string VendorName, 
                        string PurchaseCode, 
                        System.DateTime PurchaseDate, 
                        long DueDays, 
                        System.DateTime DueDate, 
                        string PIID, 
                        string PaidAmount, 
                        string PendingAmount, 
                        string PaymentMode, 
                        string Narration, 
                        string ChequeNo, 
                        System.DateTime ChequeDate, 
                        string BankName, 
                        string CustomerBankName, 
                        string NetAmount, 
                        string VoucherNo, 
                        System.DateTime VoucherDate) {
                PaymentRegisterRow rowPaymentRegisterRow = ((PaymentRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VendorCode,
                        VendorName,
                        PurchaseCode,
                        PurchaseDate,
                        DueDays,
                        DueDate,
                        PIID,
                        PaidAmount,
                        PendingAmount,
                        PaymentMode,
                        Narration,
                        ChequeNo,
                        ChequeDate,
                        BankName,
                        CustomerBankName,
                        NetAmount,
                        VoucherNo,
                        VoucherDate};
                rowPaymentRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPaymentRegisterRow);
                return rowPaymentRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PaymentRegisterDataTable cln = ((PaymentRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PaymentRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVendorCode = base.Columns["VendorCode"];
                this.columnVendorName = base.Columns["VendorName"];
                this.columnPurchaseCode = base.Columns["PurchaseCode"];
                this.columnPurchaseDate = base.Columns["PurchaseDate"];
                this.columnDueDays = base.Columns["DueDays"];
                this.columnDueDate = base.Columns["DueDate"];
                this.columnPIID = base.Columns["PIID"];
                this.columnPaidAmount = base.Columns["PaidAmount"];
                this.columnPendingAmount = base.Columns["PendingAmount"];
                this.columnPaymentMode = base.Columns["PaymentMode"];
                this.columnNarration = base.Columns["Narration"];
                this.columnChequeNo = base.Columns["ChequeNo"];
                this.columnChequeDate = base.Columns["ChequeDate"];
                this.columnBankName = base.Columns["BankName"];
                this.columnCustomerBankName = base.Columns["CustomerBankName"];
                this.columnNetAmount = base.Columns["NetAmount"];
                this.columnVoucherNo = base.Columns["VoucherNo"];
                this.columnVoucherDate = base.Columns["VoucherDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVendorCode = new global::System.Data.DataColumn("VendorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorCode);
                this.columnVendorName = new global::System.Data.DataColumn("VendorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVendorName);
                this.columnPurchaseCode = new global::System.Data.DataColumn("PurchaseCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseCode);
                this.columnPurchaseDate = new global::System.Data.DataColumn("PurchaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPurchaseDate);
                this.columnDueDays = new global::System.Data.DataColumn("DueDays", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDays);
                this.columnDueDate = new global::System.Data.DataColumn("DueDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDueDate);
                this.columnPIID = new global::System.Data.DataColumn("PIID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIID);
                this.columnPaidAmount = new global::System.Data.DataColumn("PaidAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidAmount);
                this.columnPendingAmount = new global::System.Data.DataColumn("PendingAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPendingAmount);
                this.columnPaymentMode = new global::System.Data.DataColumn("PaymentMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentMode);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
                this.columnChequeNo = new global::System.Data.DataColumn("ChequeNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeNo);
                this.columnChequeDate = new global::System.Data.DataColumn("ChequeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChequeDate);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnCustomerBankName = new global::System.Data.DataColumn("CustomerBankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerBankName);
                this.columnNetAmount = new global::System.Data.DataColumn("NetAmount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetAmount);
                this.columnVoucherNo = new global::System.Data.DataColumn("VoucherNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherNo);
                this.columnVoucherDate = new global::System.Data.DataColumn("VoucherDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoucherDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegisterRow NewPaymentRegisterRow() {
                return ((PaymentRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PaymentRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PaymentRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PaymentRegisterRowChanged != null)) {
                    this.PaymentRegisterRowChanged(this, new PaymentRegisterRowChangeEvent(((PaymentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PaymentRegisterRowChanging != null)) {
                    this.PaymentRegisterRowChanging(this, new PaymentRegisterRowChangeEvent(((PaymentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PaymentRegisterRowDeleted != null)) {
                    this.PaymentRegisterRowDeleted(this, new PaymentRegisterRowChangeEvent(((PaymentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PaymentRegisterRowDeleting != null)) {
                    this.PaymentRegisterRowDeleting(this, new PaymentRegisterRowChangeEvent(((PaymentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePaymentRegisterRow(PaymentRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PaymentRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MatrialissueREGDataTable : global::System.Data.TypedTableBase<MatrialissueREGRow> {
            
            private global::System.Data.DataColumn columnMaterialIssueCode;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnIssueBy;
            
            private global::System.Data.DataColumn columnIssueTo;
            
            private global::System.Data.DataColumn columnQOH;
            
            private global::System.Data.DataColumn columnIssueQTY;
            
            private global::System.Data.DataColumn columnreason;
            
            private global::System.Data.DataColumn columnnarration;
            
            private global::System.Data.DataColumn columnreturnYESNO;
            
            private global::System.Data.DataColumn columnGodownName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueREGDataTable() {
                this.TableName = "MatrialissueREG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MatrialissueREGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MatrialissueREGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialIssueCodeColumn {
                get {
                    return this.columnMaterialIssueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueByColumn {
                get {
                    return this.columnIssueBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueToColumn {
                get {
                    return this.columnIssueTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QOHColumn {
                get {
                    return this.columnQOH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueQTYColumn {
                get {
                    return this.columnIssueQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reasonColumn {
                get {
                    return this.columnreason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn narrationColumn {
                get {
                    return this.columnnarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn returnYESNOColumn {
                get {
                    return this.columnreturnYESNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownNameColumn {
                get {
                    return this.columnGodownName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueREGRow this[int index] {
                get {
                    return ((MatrialissueREGRow)(this.Rows[index]));
                }
            }
            
            public event MatrialissueREGRowChangeEventHandler MatrialissueREGRowChanging;
            
            public event MatrialissueREGRowChangeEventHandler MatrialissueREGRowChanged;
            
            public event MatrialissueREGRowChangeEventHandler MatrialissueREGRowDeleting;
            
            public event MatrialissueREGRowChangeEventHandler MatrialissueREGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMatrialissueREGRow(MatrialissueREGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueREGRow AddMatrialissueREGRow(string MaterialIssueCode, string ItemCode, string ItemName, string IssueBy, string IssueTo, short QOH, string IssueQTY, string reason, string narration, string returnYESNO, string GodownName) {
                MatrialissueREGRow rowMatrialissueREGRow = ((MatrialissueREGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaterialIssueCode,
                        ItemCode,
                        ItemName,
                        IssueBy,
                        IssueTo,
                        QOH,
                        IssueQTY,
                        reason,
                        narration,
                        returnYESNO,
                        GodownName};
                rowMatrialissueREGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMatrialissueREGRow);
                return rowMatrialissueREGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MatrialissueREGDataTable cln = ((MatrialissueREGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MatrialissueREGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaterialIssueCode = base.Columns["MaterialIssueCode"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnIssueBy = base.Columns["IssueBy"];
                this.columnIssueTo = base.Columns["IssueTo"];
                this.columnQOH = base.Columns["QOH"];
                this.columnIssueQTY = base.Columns["IssueQTY"];
                this.columnreason = base.Columns["reason"];
                this.columnnarration = base.Columns["narration"];
                this.columnreturnYESNO = base.Columns["returnYESNO"];
                this.columnGodownName = base.Columns["GodownName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaterialIssueCode = new global::System.Data.DataColumn("MaterialIssueCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialIssueCode);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnIssueBy = new global::System.Data.DataColumn("IssueBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueBy);
                this.columnIssueTo = new global::System.Data.DataColumn("IssueTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueTo);
                this.columnQOH = new global::System.Data.DataColumn("QOH", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQOH);
                this.columnIssueQTY = new global::System.Data.DataColumn("IssueQTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueQTY);
                this.columnreason = new global::System.Data.DataColumn("reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreason);
                this.columnnarration = new global::System.Data.DataColumn("narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnarration);
                this.columnreturnYESNO = new global::System.Data.DataColumn("returnYESNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreturnYESNO);
                this.columnGodownName = new global::System.Data.DataColumn("GodownName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueREGRow NewMatrialissueREGRow() {
                return ((MatrialissueREGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MatrialissueREGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MatrialissueREGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MatrialissueREGRowChanged != null)) {
                    this.MatrialissueREGRowChanged(this, new MatrialissueREGRowChangeEvent(((MatrialissueREGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MatrialissueREGRowChanging != null)) {
                    this.MatrialissueREGRowChanging(this, new MatrialissueREGRowChangeEvent(((MatrialissueREGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MatrialissueREGRowDeleted != null)) {
                    this.MatrialissueREGRowDeleted(this, new MatrialissueREGRowChangeEvent(((MatrialissueREGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MatrialissueREGRowDeleting != null)) {
                    this.MatrialissueREGRowDeleting(this, new MatrialissueREGRowChangeEvent(((MatrialissueREGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMatrialissueREGRow(MatrialissueREGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MatrialissueREGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MatrialissueDataTable : global::System.Data.TypedTableBase<MatrialissueRow> {
            
            private global::System.Data.DataColumn columnMaterialIssueCode;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnIssueBy;
            
            private global::System.Data.DataColumn columnIssueTo;
            
            private global::System.Data.DataColumn columnQOH;
            
            private global::System.Data.DataColumn columnIssueQTY;
            
            private global::System.Data.DataColumn columnreason;
            
            private global::System.Data.DataColumn columnreturnYESNO;
            
            private global::System.Data.DataColumn columnnarration;
            
            private global::System.Data.DataColumn columnGodownName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueDataTable() {
                this.TableName = "Matrialissue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MatrialissueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MatrialissueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialIssueCodeColumn {
                get {
                    return this.columnMaterialIssueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueByColumn {
                get {
                    return this.columnIssueBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueToColumn {
                get {
                    return this.columnIssueTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QOHColumn {
                get {
                    return this.columnQOH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueQTYColumn {
                get {
                    return this.columnIssueQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reasonColumn {
                get {
                    return this.columnreason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn returnYESNOColumn {
                get {
                    return this.columnreturnYESNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn narrationColumn {
                get {
                    return this.columnnarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownNameColumn {
                get {
                    return this.columnGodownName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueRow this[int index] {
                get {
                    return ((MatrialissueRow)(this.Rows[index]));
                }
            }
            
            public event MatrialissueRowChangeEventHandler MatrialissueRowChanging;
            
            public event MatrialissueRowChangeEventHandler MatrialissueRowChanged;
            
            public event MatrialissueRowChangeEventHandler MatrialissueRowDeleting;
            
            public event MatrialissueRowChangeEventHandler MatrialissueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMatrialissueRow(MatrialissueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueRow AddMatrialissueRow(string MaterialIssueCode, string ItemCode, string ItemName, string IssueBy, string IssueTo, short QOH, string IssueQTY, string reason, string returnYESNO, string narration, string GodownName) {
                MatrialissueRow rowMatrialissueRow = ((MatrialissueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaterialIssueCode,
                        ItemCode,
                        ItemName,
                        IssueBy,
                        IssueTo,
                        QOH,
                        IssueQTY,
                        reason,
                        returnYESNO,
                        narration,
                        GodownName};
                rowMatrialissueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMatrialissueRow);
                return rowMatrialissueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MatrialissueDataTable cln = ((MatrialissueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MatrialissueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaterialIssueCode = base.Columns["MaterialIssueCode"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnIssueBy = base.Columns["IssueBy"];
                this.columnIssueTo = base.Columns["IssueTo"];
                this.columnQOH = base.Columns["QOH"];
                this.columnIssueQTY = base.Columns["IssueQTY"];
                this.columnreason = base.Columns["reason"];
                this.columnreturnYESNO = base.Columns["returnYESNO"];
                this.columnnarration = base.Columns["narration"];
                this.columnGodownName = base.Columns["GodownName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaterialIssueCode = new global::System.Data.DataColumn("MaterialIssueCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialIssueCode);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnIssueBy = new global::System.Data.DataColumn("IssueBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueBy);
                this.columnIssueTo = new global::System.Data.DataColumn("IssueTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueTo);
                this.columnQOH = new global::System.Data.DataColumn("QOH", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQOH);
                this.columnIssueQTY = new global::System.Data.DataColumn("IssueQTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueQTY);
                this.columnreason = new global::System.Data.DataColumn("reason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreason);
                this.columnreturnYESNO = new global::System.Data.DataColumn("returnYESNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreturnYESNO);
                this.columnnarration = new global::System.Data.DataColumn("narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnarration);
                this.columnGodownName = new global::System.Data.DataColumn("GodownName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueRow NewMatrialissueRow() {
                return ((MatrialissueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MatrialissueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MatrialissueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MatrialissueRowChanged != null)) {
                    this.MatrialissueRowChanged(this, new MatrialissueRowChangeEvent(((MatrialissueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MatrialissueRowChanging != null)) {
                    this.MatrialissueRowChanging(this, new MatrialissueRowChangeEvent(((MatrialissueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MatrialissueRowDeleted != null)) {
                    this.MatrialissueRowDeleted(this, new MatrialissueRowChangeEvent(((MatrialissueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MatrialissueRowDeleting != null)) {
                    this.MatrialissueRowDeleting(this, new MatrialissueRowChangeEvent(((MatrialissueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMatrialissueRow(MatrialissueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MatrialissueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MatrialReturnREGDataTable : global::System.Data.TypedTableBase<MatrialReturnREGRow> {
            
            private global::System.Data.DataColumn columnMaterialIssueCode;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnReturnBy;
            
            private global::System.Data.DataColumn columnReturnTo;
            
            private global::System.Data.DataColumn columnReturnQty;
            
            private global::System.Data.DataColumn columnIssueQTY;
            
            private global::System.Data.DataColumn columnnarration;
            
            private global::System.Data.DataColumn columnGodownName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialReturnREGDataTable() {
                this.TableName = "MatrialReturnREG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MatrialReturnREGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MatrialReturnREGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MaterialIssueCodeColumn {
                get {
                    return this.columnMaterialIssueCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnByColumn {
                get {
                    return this.columnReturnBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnToColumn {
                get {
                    return this.columnReturnTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReturnQtyColumn {
                get {
                    return this.columnReturnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IssueQTYColumn {
                get {
                    return this.columnIssueQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn narrationColumn {
                get {
                    return this.columnnarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GodownNameColumn {
                get {
                    return this.columnGodownName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialReturnREGRow this[int index] {
                get {
                    return ((MatrialReturnREGRow)(this.Rows[index]));
                }
            }
            
            public event MatrialReturnREGRowChangeEventHandler MatrialReturnREGRowChanging;
            
            public event MatrialReturnREGRowChangeEventHandler MatrialReturnREGRowChanged;
            
            public event MatrialReturnREGRowChangeEventHandler MatrialReturnREGRowDeleting;
            
            public event MatrialReturnREGRowChangeEventHandler MatrialReturnREGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMatrialReturnREGRow(MatrialReturnREGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialReturnREGRow AddMatrialReturnREGRow(string MaterialIssueCode, string ItemCode, string ItemName, string ReturnBy, string ReturnTo, short ReturnQty, string IssueQTY, string narration, string GodownName) {
                MatrialReturnREGRow rowMatrialReturnREGRow = ((MatrialReturnREGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MaterialIssueCode,
                        ItemCode,
                        ItemName,
                        ReturnBy,
                        ReturnTo,
                        ReturnQty,
                        IssueQTY,
                        narration,
                        GodownName};
                rowMatrialReturnREGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMatrialReturnREGRow);
                return rowMatrialReturnREGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MatrialReturnREGDataTable cln = ((MatrialReturnREGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MatrialReturnREGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMaterialIssueCode = base.Columns["MaterialIssueCode"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnReturnBy = base.Columns["ReturnBy"];
                this.columnReturnTo = base.Columns["ReturnTo"];
                this.columnReturnQty = base.Columns["ReturnQty"];
                this.columnIssueQTY = base.Columns["IssueQTY"];
                this.columnnarration = base.Columns["narration"];
                this.columnGodownName = base.Columns["GodownName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMaterialIssueCode = new global::System.Data.DataColumn("MaterialIssueCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterialIssueCode);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnReturnBy = new global::System.Data.DataColumn("ReturnBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnBy);
                this.columnReturnTo = new global::System.Data.DataColumn("ReturnTo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnTo);
                this.columnReturnQty = new global::System.Data.DataColumn("ReturnQty", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnQty);
                this.columnIssueQTY = new global::System.Data.DataColumn("IssueQTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueQTY);
                this.columnnarration = new global::System.Data.DataColumn("narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnarration);
                this.columnGodownName = new global::System.Data.DataColumn("GodownName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodownName);
                this.columnReturnTo.Caption = "IssueTo";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialReturnREGRow NewMatrialReturnREGRow() {
                return ((MatrialReturnREGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MatrialReturnREGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MatrialReturnREGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MatrialReturnREGRowChanged != null)) {
                    this.MatrialReturnREGRowChanged(this, new MatrialReturnREGRowChangeEvent(((MatrialReturnREGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MatrialReturnREGRowChanging != null)) {
                    this.MatrialReturnREGRowChanging(this, new MatrialReturnREGRowChangeEvent(((MatrialReturnREGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MatrialReturnREGRowDeleted != null)) {
                    this.MatrialReturnREGRowDeleted(this, new MatrialReturnREGRowChangeEvent(((MatrialReturnREGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MatrialReturnREGRowDeleting != null)) {
                    this.MatrialReturnREGRowDeleting(this, new MatrialReturnREGRowChangeEvent(((MatrialReturnREGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMatrialReturnREGRow(MatrialReturnREGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MatrialReturnREGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ItemAdjustmentRegisterDataTable : global::System.Data.TypedTableBase<ItemAdjustmentRegisterRow> {
            
            private global::System.Data.DataColumn columnAdjustmentID;
            
            private global::System.Data.DataColumn columnAdjustDate;
            
            private global::System.Data.DataColumn columnItemName;
            
            private global::System.Data.DataColumn columnItemCode;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnGodown_name;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnNarration;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemAdjustmentRegisterDataTable() {
                this.TableName = "ItemAdjustmentRegister";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemAdjustmentRegisterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ItemAdjustmentRegisterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustmentIDColumn {
                get {
                    return this.columnAdjustmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AdjustDateColumn {
                get {
                    return this.columnAdjustDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemNameColumn {
                get {
                    return this.columnItemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ItemCodeColumn {
                get {
                    return this.columnItemCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Godown_nameColumn {
                get {
                    return this.columnGodown_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NarrationColumn {
                get {
                    return this.columnNarration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemAdjustmentRegisterRow this[int index] {
                get {
                    return ((ItemAdjustmentRegisterRow)(this.Rows[index]));
                }
            }
            
            public event ItemAdjustmentRegisterRowChangeEventHandler ItemAdjustmentRegisterRowChanging;
            
            public event ItemAdjustmentRegisterRowChangeEventHandler ItemAdjustmentRegisterRowChanged;
            
            public event ItemAdjustmentRegisterRowChangeEventHandler ItemAdjustmentRegisterRowDeleting;
            
            public event ItemAdjustmentRegisterRowChangeEventHandler ItemAdjustmentRegisterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddItemAdjustmentRegisterRow(ItemAdjustmentRegisterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemAdjustmentRegisterRow AddItemAdjustmentRegisterRow(string AdjustmentID, System.DateTime AdjustDate, string ItemName, string ItemCode, short Qty, string Godown_name, string Status, string Narration) {
                ItemAdjustmentRegisterRow rowItemAdjustmentRegisterRow = ((ItemAdjustmentRegisterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AdjustmentID,
                        AdjustDate,
                        ItemName,
                        ItemCode,
                        Qty,
                        Godown_name,
                        Status,
                        Narration};
                rowItemAdjustmentRegisterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowItemAdjustmentRegisterRow);
                return rowItemAdjustmentRegisterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ItemAdjustmentRegisterDataTable cln = ((ItemAdjustmentRegisterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ItemAdjustmentRegisterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAdjustmentID = base.Columns["AdjustmentID"];
                this.columnAdjustDate = base.Columns["AdjustDate"];
                this.columnItemName = base.Columns["ItemName"];
                this.columnItemCode = base.Columns["ItemCode"];
                this.columnQty = base.Columns["Qty"];
                this.columnGodown_name = base.Columns["Godown_name"];
                this.columnStatus = base.Columns["Status"];
                this.columnNarration = base.Columns["Narration"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAdjustmentID = new global::System.Data.DataColumn("AdjustmentID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustmentID);
                this.columnAdjustDate = new global::System.Data.DataColumn("AdjustDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdjustDate);
                this.columnItemName = new global::System.Data.DataColumn("ItemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemName);
                this.columnItemCode = new global::System.Data.DataColumn("ItemCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemCode);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnGodown_name = new global::System.Data.DataColumn("Godown_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGodown_name);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnNarration = new global::System.Data.DataColumn("Narration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNarration);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemAdjustmentRegisterRow NewItemAdjustmentRegisterRow() {
                return ((ItemAdjustmentRegisterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ItemAdjustmentRegisterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ItemAdjustmentRegisterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ItemAdjustmentRegisterRowChanged != null)) {
                    this.ItemAdjustmentRegisterRowChanged(this, new ItemAdjustmentRegisterRowChangeEvent(((ItemAdjustmentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ItemAdjustmentRegisterRowChanging != null)) {
                    this.ItemAdjustmentRegisterRowChanging(this, new ItemAdjustmentRegisterRowChangeEvent(((ItemAdjustmentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ItemAdjustmentRegisterRowDeleted != null)) {
                    this.ItemAdjustmentRegisterRowDeleted(this, new ItemAdjustmentRegisterRowChangeEvent(((ItemAdjustmentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ItemAdjustmentRegisterRowDeleting != null)) {
                    this.ItemAdjustmentRegisterRowDeleting(this, new ItemAdjustmentRegisterRowChangeEvent(((ItemAdjustmentRegisterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveItemAdjustmentRegisterRow(ItemAdjustmentRegisterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ItemAdjustmentRegisterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PurchaseINdentRegDataTable : global::System.Data.TypedTableBase<PurchaseINdentRegRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnSrNo;
            
            private global::System.Data.DataColumn columnIndentDate;
            
            private global::System.Data.DataColumn columnitemcode;
            
            private global::System.Data.DataColumn columnproductcode;
            
            private global::System.Data.DataColumn columnitemDetails;
            
            private global::System.Data.DataColumn columnqtyreqd;
            
            private global::System.Data.DataColumn columnqtyinstock;
            
            private global::System.Data.DataColumn columnstockinhand;
            
            private global::System.Data.DataColumn columnunitprice;
            
            private global::System.Data.DataColumn columntotalcost;
            
            private global::System.Data.DataColumn columnitemused;
            
            private global::System.Data.DataColumn columnpurchaseindent;
            
            private global::System.Data.DataColumn columnstatuspo;
            
            private global::System.Data.DataColumn columnRemarks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseINdentRegDataTable() {
                this.TableName = "PurchaseINdentReg";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseINdentRegDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PurchaseINdentRegDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SrNoColumn {
                get {
                    return this.columnSrNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IndentDateColumn {
                get {
                    return this.columnIndentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemcodeColumn {
                get {
                    return this.columnitemcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn productcodeColumn {
                get {
                    return this.columnproductcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemDetailsColumn {
                get {
                    return this.columnitemDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyreqdColumn {
                get {
                    return this.columnqtyreqd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn qtyinstockColumn {
                get {
                    return this.columnqtyinstock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stockinhandColumn {
                get {
                    return this.columnstockinhand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn unitpriceColumn {
                get {
                    return this.columnunitprice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalcostColumn {
                get {
                    return this.columntotalcost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn itemusedColumn {
                get {
                    return this.columnitemused;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn purchaseindentColumn {
                get {
                    return this.columnpurchaseindent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn statuspoColumn {
                get {
                    return this.columnstatuspo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseINdentRegRow this[int index] {
                get {
                    return ((PurchaseINdentRegRow)(this.Rows[index]));
                }
            }
            
            public event PurchaseINdentRegRowChangeEventHandler PurchaseINdentRegRowChanging;
            
            public event PurchaseINdentRegRowChangeEventHandler PurchaseINdentRegRowChanged;
            
            public event PurchaseINdentRegRowChangeEventHandler PurchaseINdentRegRowDeleting;
            
            public event PurchaseINdentRegRowChangeEventHandler PurchaseINdentRegRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchaseINdentRegRow(PurchaseINdentRegRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseINdentRegRow AddPurchaseINdentRegRow(string Id, string SrNo, System.DateTime IndentDate, string itemcode, string productcode, string itemDetails, decimal qtyreqd, decimal qtyinstock, decimal stockinhand, decimal unitprice, decimal totalcost, string itemused, string purchaseindent, string statuspo, string Remarks) {
                PurchaseINdentRegRow rowPurchaseINdentRegRow = ((PurchaseINdentRegRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        SrNo,
                        IndentDate,
                        itemcode,
                        productcode,
                        itemDetails,
                        qtyreqd,
                        qtyinstock,
                        stockinhand,
                        unitprice,
                        totalcost,
                        itemused,
                        purchaseindent,
                        statuspo,
                        Remarks};
                rowPurchaseINdentRegRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchaseINdentRegRow);
                return rowPurchaseINdentRegRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PurchaseINdentRegDataTable cln = ((PurchaseINdentRegDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PurchaseINdentRegDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnSrNo = base.Columns["SrNo"];
                this.columnIndentDate = base.Columns["IndentDate"];
                this.columnitemcode = base.Columns["itemcode"];
                this.columnproductcode = base.Columns["productcode"];
                this.columnitemDetails = base.Columns["itemDetails"];
                this.columnqtyreqd = base.Columns["qtyreqd"];
                this.columnqtyinstock = base.Columns["qtyinstock"];
                this.columnstockinhand = base.Columns["stockinhand"];
                this.columnunitprice = base.Columns["unitprice"];
                this.columntotalcost = base.Columns["totalcost"];
                this.columnitemused = base.Columns["itemused"];
                this.columnpurchaseindent = base.Columns["purchaseindent"];
                this.columnstatuspo = base.Columns["statuspo"];
                this.columnRemarks = base.Columns["Remarks"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnSrNo = new global::System.Data.DataColumn("SrNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSrNo);
                this.columnIndentDate = new global::System.Data.DataColumn("IndentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndentDate);
                this.columnitemcode = new global::System.Data.DataColumn("itemcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemcode);
                this.columnproductcode = new global::System.Data.DataColumn("productcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproductcode);
                this.columnitemDetails = new global::System.Data.DataColumn("itemDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemDetails);
                this.columnqtyreqd = new global::System.Data.DataColumn("qtyreqd", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqtyreqd);
                this.columnqtyinstock = new global::System.Data.DataColumn("qtyinstock", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqtyinstock);
                this.columnstockinhand = new global::System.Data.DataColumn("stockinhand", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstockinhand);
                this.columnunitprice = new global::System.Data.DataColumn("unitprice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunitprice);
                this.columntotalcost = new global::System.Data.DataColumn("totalcost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalcost);
                this.columnitemused = new global::System.Data.DataColumn("itemused", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnitemused);
                this.columnpurchaseindent = new global::System.Data.DataColumn("purchaseindent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpurchaseindent);
                this.columnstatuspo = new global::System.Data.DataColumn("statuspo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatuspo);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseINdentRegRow NewPurchaseINdentRegRow() {
                return ((PurchaseINdentRegRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PurchaseINdentRegRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PurchaseINdentRegRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PurchaseINdentRegRowChanged != null)) {
                    this.PurchaseINdentRegRowChanged(this, new PurchaseINdentRegRowChangeEvent(((PurchaseINdentRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PurchaseINdentRegRowChanging != null)) {
                    this.PurchaseINdentRegRowChanging(this, new PurchaseINdentRegRowChangeEvent(((PurchaseINdentRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PurchaseINdentRegRowDeleted != null)) {
                    this.PurchaseINdentRegRowDeleted(this, new PurchaseINdentRegRowChangeEvent(((PurchaseINdentRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PurchaseINdentRegRowDeleting != null)) {
                    this.PurchaseINdentRegRowDeleting(this, new PurchaseINdentRegRowChangeEvent(((PurchaseINdentRegRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchaseINdentRegRow(PurchaseINdentRegRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JPCRM ds = new JPCRM();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PurchaseINdentRegDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SiteInfoRegisterRow : global::System.Data.DataRow {
            
            private SiteInfoRegisterDataTable tableSiteInfoRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SiteInfoRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSiteInfoRegister = ((SiteInfoRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SiteId {
                get {
                    try {
                        return ((long)(this[this.tableSiteInfoRegister.SiteIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteId\' in table \'SiteInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiteInfoRegister.SiteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteName {
                get {
                    try {
                        return ((string)(this[this.tableSiteInfoRegister.SiteNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteName\' in table \'SiteInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiteInfoRegister.SiteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableSiteInfoRegister.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'SiteInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiteInfoRegister.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CityId {
                get {
                    try {
                        return ((long)(this[this.tableSiteInfoRegister.CityIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityId\' in table \'SiteInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiteInfoRegister.CityIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableSiteInfoRegister.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'SiteInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSiteInfoRegister.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteIdNull() {
                return this.IsNull(this.tableSiteInfoRegister.SiteIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteIdNull() {
                this[this.tableSiteInfoRegister.SiteIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteNameNull() {
                return this.IsNull(this.tableSiteInfoRegister.SiteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteNameNull() {
                this[this.tableSiteInfoRegister.SiteNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableSiteInfoRegister.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableSiteInfoRegister.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityIdNull() {
                return this.IsNull(this.tableSiteInfoRegister.CityIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityIdNull() {
                this[this.tableSiteInfoRegister.CityIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableSiteInfoRegister.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableSiteInfoRegister.CityNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BuildingInfoRegisterRow : global::System.Data.DataRow {
            
            private BuildingInfoRegisterDataTable tableBuildingInfoRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BuildingInfoRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBuildingInfoRegister = ((BuildingInfoRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BuildingId {
                get {
                    try {
                        return ((long)(this[this.tableBuildingInfoRegister.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'BuildingInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBuildingInfoRegister.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SiteId {
                get {
                    try {
                        return ((long)(this[this.tableBuildingInfoRegister.SiteIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteId\' in table \'BuildingInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBuildingInfoRegister.SiteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingName {
                get {
                    try {
                        return ((string)(this[this.tableBuildingInfoRegister.BuildingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingName\' in table \'BuildingInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBuildingInfoRegister.BuildingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableBuildingInfoRegister.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'BuildingInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBuildingInfoRegister.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteName {
                get {
                    try {
                        return ((string)(this[this.tableBuildingInfoRegister.SiteNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteName\' in table \'BuildingInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBuildingInfoRegister.SiteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tableBuildingInfoRegister.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tableBuildingInfoRegister.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteIdNull() {
                return this.IsNull(this.tableBuildingInfoRegister.SiteIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteIdNull() {
                this[this.tableBuildingInfoRegister.SiteIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingNameNull() {
                return this.IsNull(this.tableBuildingInfoRegister.BuildingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingNameNull() {
                this[this.tableBuildingInfoRegister.BuildingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableBuildingInfoRegister.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableBuildingInfoRegister.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteNameNull() {
                return this.IsNull(this.tableBuildingInfoRegister.SiteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteNameNull() {
                this[this.tableBuildingInfoRegister.SiteNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BlockInfoRegisterRow : global::System.Data.DataRow {
            
            private BlockInfoRegisterDataTable tableBlockInfoRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BlockInfoRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBlockInfoRegister = ((BlockInfoRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BlockId {
                get {
                    try {
                        return ((long)(this[this.tableBlockInfoRegister.BlockIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlockId\' in table \'BlockInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlockInfoRegister.BlockIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BuildingId {
                get {
                    try {
                        return ((long)(this[this.tableBlockInfoRegister.BuildingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingId\' in table \'BlockInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlockInfoRegister.BuildingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BlockName {
                get {
                    try {
                        return ((string)(this[this.tableBlockInfoRegister.BlockNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlockName\' in table \'BlockInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlockInfoRegister.BlockNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remark {
                get {
                    try {
                        return ((string)(this[this.tableBlockInfoRegister.RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remark\' in table \'BlockInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlockInfoRegister.RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBooked {
                get {
                    try {
                        return ((bool)(this[this.tableBlockInfoRegister.IsBookedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsBooked\' in table \'BlockInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlockInfoRegister.IsBookedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableBlockInfoRegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'BlockInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlockInfoRegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingName {
                get {
                    try {
                        return ((string)(this[this.tableBlockInfoRegister.BuildingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingName\' in table \'BlockInfoRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBlockInfoRegister.BuildingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockIdNull() {
                return this.IsNull(this.tableBlockInfoRegister.BlockIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockIdNull() {
                this[this.tableBlockInfoRegister.BlockIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingIdNull() {
                return this.IsNull(this.tableBlockInfoRegister.BuildingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingIdNull() {
                this[this.tableBlockInfoRegister.BuildingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNameNull() {
                return this.IsNull(this.tableBlockInfoRegister.BlockNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNameNull() {
                this[this.tableBlockInfoRegister.BlockNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarkNull() {
                return this.IsNull(this.tableBlockInfoRegister.RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarkNull() {
                this[this.tableBlockInfoRegister.RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsBookedNull() {
                return this.IsNull(this.tableBlockInfoRegister.IsBookedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsBookedNull() {
                this[this.tableBlockInfoRegister.IsBookedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableBlockInfoRegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableBlockInfoRegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingNameNull() {
                return this.IsNull(this.tableBlockInfoRegister.BuildingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingNameNull() {
                this[this.tableBlockInfoRegister.BuildingNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BankDetailRegisterRow : global::System.Data.DataRow {
            
            private BankDetailRegisterDataTable tableBankDetailRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BankDetailRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBankDetailRegister = ((BankDetailRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tableBankDetailRegister.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'BankDetailRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankDetailRegister.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FolowUpDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBankDetailRegister.FolowUpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FolowUpDate\' in table \'BankDetailRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankDetailRegister.FolowUpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableBankDetailRegister.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'BankDetailRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankDetailRegister.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChequeNo {
                get {
                    try {
                        return ((string)(this[this.tableBankDetailRegister.ChequeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeNo\' in table \'BankDetailRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankDetailRegister.ChequeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableBankDetailRegister.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'BankDetailRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankDetailRegister.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableBankDetailRegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'BankDetailRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankDetailRegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BankDetID {
                get {
                    try {
                        return ((long)(this[this.tableBankDetailRegister.BankDetIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankDetID\' in table \'BankDetailRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBankDetailRegister.BankDetIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankNameNull() {
                return this.IsNull(this.tableBankDetailRegister.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankNameNull() {
                this[this.tableBankDetailRegister.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFolowUpDateNull() {
                return this.IsNull(this.tableBankDetailRegister.FolowUpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFolowUpDateNull() {
                this[this.tableBankDetailRegister.FolowUpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableBankDetailRegister.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableBankDetailRegister.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeNoNull() {
                return this.IsNull(this.tableBankDetailRegister.ChequeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeNoNull() {
                this[this.tableBankDetailRegister.ChequeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableBankDetailRegister.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableBankDetailRegister.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableBankDetailRegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableBankDetailRegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankDetIDNull() {
                return this.IsNull(this.tableBankDetailRegister.BankDetIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankDetIDNull() {
                this[this.tableBankDetailRegister.BankDetIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AllotmentReportRow : global::System.Data.DataRow {
            
            private AllotmentReportDataTable tableAllotmentReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AllotmentReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAllotmentReport = ((AllotmentReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LeadID {
                get {
                    try {
                        return ((long)(this[this.tableAllotmentReport.LeadIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadID\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.LeadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableAllotmentReport.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableAllotmentReport.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableAllotmentReport.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BlockName {
                get {
                    try {
                        return ((string)(this[this.tableAllotmentReport.BlockNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlockName\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.BlockNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingName {
                get {
                    try {
                        return ((string)(this[this.tableAllotmentReport.BuildingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingName\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.BuildingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteName {
                get {
                    try {
                        return ((string)(this[this.tableAllotmentReport.SiteNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteName\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.SiteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteAddress {
                get {
                    try {
                        return ((string)(this[this.tableAllotmentReport.SiteAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteAddress\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.SiteAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteCity {
                get {
                    try {
                        return ((string)(this[this.tableAllotmentReport.SiteCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteCity\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.SiteCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalePrice {
                get {
                    try {
                        return ((decimal)(this[this.tableAllotmentReport.SalePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalePrice\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.SalePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableAllotmentReport.AdvAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvAmount\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.AdvAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SBA {
                get {
                    try {
                        return ((decimal)(this[this.tableAllotmentReport.SBAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SBA\' in table \'AllotmentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAllotmentReport.SBAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadIDNull() {
                return this.IsNull(this.tableAllotmentReport.LeadIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadIDNull() {
                this[this.tableAllotmentReport.LeadIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableAllotmentReport.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableAllotmentReport.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableAllotmentReport.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableAllotmentReport.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableAllotmentReport.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableAllotmentReport.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNameNull() {
                return this.IsNull(this.tableAllotmentReport.BlockNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNameNull() {
                this[this.tableAllotmentReport.BlockNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingNameNull() {
                return this.IsNull(this.tableAllotmentReport.BuildingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingNameNull() {
                this[this.tableAllotmentReport.BuildingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteNameNull() {
                return this.IsNull(this.tableAllotmentReport.SiteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteNameNull() {
                this[this.tableAllotmentReport.SiteNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteAddressNull() {
                return this.IsNull(this.tableAllotmentReport.SiteAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteAddressNull() {
                this[this.tableAllotmentReport.SiteAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteCityNull() {
                return this.IsNull(this.tableAllotmentReport.SiteCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteCityNull() {
                this[this.tableAllotmentReport.SiteCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalePriceNull() {
                return this.IsNull(this.tableAllotmentReport.SalePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalePriceNull() {
                this[this.tableAllotmentReport.SalePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvAmountNull() {
                return this.IsNull(this.tableAllotmentReport.AdvAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvAmountNull() {
                this[this.tableAllotmentReport.AdvAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBANull() {
                return this.IsNull(this.tableAllotmentReport.SBAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBANull() {
                this[this.tableAllotmentReport.SBAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DemandLetterRow : global::System.Data.DataRow {
            
            private DemandLetterDataTable tableDemandLetter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DemandLetterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDemandLetter = ((DemandLetterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SaleId {
                get {
                    try {
                        return ((long)(this[this.tableDemandLetter.SaleIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleId\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.SaleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteAddress {
                get {
                    try {
                        return ((string)(this[this.tableDemandLetter.SiteAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteAddress\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.SiteAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableDemandLetter.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerAddress {
                get {
                    try {
                        return ((string)(this[this.tableDemandLetter.CustomerAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAddress\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.CustomerAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCityName {
                get {
                    try {
                        return ((string)(this[this.tableDemandLetter.CustomerCityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCityName\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.CustomerCityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SaleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDemandLetter.SaleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleDate\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.SaleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BlockName {
                get {
                    try {
                        return ((string)(this[this.tableDemandLetter.BlockNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlockName\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.BlockNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalePrice {
                get {
                    try {
                        return ((decimal)(this[this.tableDemandLetter.SalePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalePrice\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.SalePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDemandLetter.AdvAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvAmount\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.AdvAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDemandLetter.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NextDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDemandLetter.NextDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextDate\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.NextDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Payment {
                get {
                    try {
                        return ((decimal)(this[this.tableDemandLetter.PaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.PaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableDemandLetter.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReceivePayment {
                get {
                    try {
                        return ((decimal)(this[this.tableDemandLetter.ReceivePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivePayment\' in table \'DemandLetter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDemandLetter.ReceivePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIdNull() {
                return this.IsNull(this.tableDemandLetter.SaleIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIdNull() {
                this[this.tableDemandLetter.SaleIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteAddressNull() {
                return this.IsNull(this.tableDemandLetter.SiteAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteAddressNull() {
                this[this.tableDemandLetter.SiteAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableDemandLetter.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableDemandLetter.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerAddressNull() {
                return this.IsNull(this.tableDemandLetter.CustomerAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerAddressNull() {
                this[this.tableDemandLetter.CustomerAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCityNameNull() {
                return this.IsNull(this.tableDemandLetter.CustomerCityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCityNameNull() {
                this[this.tableDemandLetter.CustomerCityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleDateNull() {
                return this.IsNull(this.tableDemandLetter.SaleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleDateNull() {
                this[this.tableDemandLetter.SaleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNameNull() {
                return this.IsNull(this.tableDemandLetter.BlockNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNameNull() {
                this[this.tableDemandLetter.BlockNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalePriceNull() {
                return this.IsNull(this.tableDemandLetter.SalePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalePriceNull() {
                this[this.tableDemandLetter.SalePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvAmountNull() {
                return this.IsNull(this.tableDemandLetter.AdvAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvAmountNull() {
                this[this.tableDemandLetter.AdvAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableDemandLetter.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableDemandLetter.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextDateNull() {
                return this.IsNull(this.tableDemandLetter.NextDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextDateNull() {
                this[this.tableDemandLetter.NextDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentNull() {
                return this.IsNull(this.tableDemandLetter.PaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentNull() {
                this[this.tableDemandLetter.PaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableDemandLetter.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableDemandLetter.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivePaymentNull() {
                return this.IsNull(this.tableDemandLetter.ReceivePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivePaymentNull() {
                this[this.tableDemandLetter.ReceivePaymentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerReceiptRow : global::System.Data.DataRow {
            
            private CustomerReceiptDataTable tableCustomerReceipt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerReceiptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerReceipt = ((CustomerReceiptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SaleId {
                get {
                    try {
                        return ((long)(this[this.tableCustomerReceipt.SaleIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleId\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.SaleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReceipt.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SaleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerReceipt.SaleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleDate\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.SaleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SalePrice {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerReceipt.SalePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalePrice\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.SalePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerReceipt.AdvAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvAmount\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.AdvAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerReceipt.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NextDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerReceipt.NextDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextDate\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.NextDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Payment {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerReceipt.PaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.PaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReceipt.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ReceivePayment {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerReceipt.ReceivePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivePayment\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.ReceivePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BlockName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReceipt.BlockNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlockName\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.BlockNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReceipt.BuildingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingName\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.BuildingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ArrivalDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerReceipt.ArrivalDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivalDate\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.ArrivalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DepartureDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerReceipt.DepartureDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DepartureDate\' in table \'CustomerReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReceipt.DepartureDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIdNull() {
                return this.IsNull(this.tableCustomerReceipt.SaleIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIdNull() {
                this[this.tableCustomerReceipt.SaleIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomerReceipt.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomerReceipt.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleDateNull() {
                return this.IsNull(this.tableCustomerReceipt.SaleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleDateNull() {
                this[this.tableCustomerReceipt.SaleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalePriceNull() {
                return this.IsNull(this.tableCustomerReceipt.SalePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalePriceNull() {
                this[this.tableCustomerReceipt.SalePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvAmountNull() {
                return this.IsNull(this.tableCustomerReceipt.AdvAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvAmountNull() {
                this[this.tableCustomerReceipt.AdvAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableCustomerReceipt.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableCustomerReceipt.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextDateNull() {
                return this.IsNull(this.tableCustomerReceipt.NextDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextDateNull() {
                this[this.tableCustomerReceipt.NextDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentNull() {
                return this.IsNull(this.tableCustomerReceipt.PaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentNull() {
                this[this.tableCustomerReceipt.PaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableCustomerReceipt.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableCustomerReceipt.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivePaymentNull() {
                return this.IsNull(this.tableCustomerReceipt.ReceivePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivePaymentNull() {
                this[this.tableCustomerReceipt.ReceivePaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNameNull() {
                return this.IsNull(this.tableCustomerReceipt.BlockNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNameNull() {
                this[this.tableCustomerReceipt.BlockNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingNameNull() {
                return this.IsNull(this.tableCustomerReceipt.BuildingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingNameNull() {
                this[this.tableCustomerReceipt.BuildingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsArrivalDateNull() {
                return this.IsNull(this.tableCustomerReceipt.ArrivalDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetArrivalDateNull() {
                this[this.tableCustomerReceipt.ArrivalDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDepartureDateNull() {
                return this.IsNull(this.tableCustomerReceipt.DepartureDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDepartureDateNull() {
                this[this.tableCustomerReceipt.DepartureDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LeadRegisterRow : global::System.Data.DataRow {
            
            private LeadRegisterDataTable tableLeadRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LeadRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLeadRegister = ((LeadRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LeadId {
                get {
                    try {
                        return ((long)(this[this.tableLeadRegister.LeadIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadId\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.LeadIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeadNo {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.LeadNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadNo\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.LeadNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LeadDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeadRegister.LeadDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadDate\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.LeadDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPerson {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.ContactPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPerson\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SourceOfLead {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.SourceOfLeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SourceOfLead\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.SourceOfLeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CustomerBudget {
                get {
                    try {
                        return ((decimal)(this[this.tableLeadRegister.CustomerBudgetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerBudget\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.CustomerBudgetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InterestLevel {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.InterestLevelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InterestLevel\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.InterestLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime NextFollowUpDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLeadRegister.NextFollowUpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextFollowUpDate\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.NextFollowUpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Specification {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.SpecificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Specification\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.SpecificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeadStatus {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.LeadStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadStatus\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.LeadStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeadTakenBy {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.LeadTakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadTakenBy\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.LeadTakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BlockName {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.BlockNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BlockName\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.BlockNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BuildingName {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.BuildingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingName\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.BuildingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LeadBy {
                get {
                    try {
                        return ((long)(this[this.tableLeadRegister.LeadByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadBy\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.LeadByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.EmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpName\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpAllTo {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.EmpAllToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpAllTo\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.EmpAllToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pincode {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pincode\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InqResponse {
                get {
                    try {
                        return ((string)(this[this.tableLeadRegister.InqResponseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InqResponse\' in table \'LeadRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLeadRegister.InqResponseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadIdNull() {
                return this.IsNull(this.tableLeadRegister.LeadIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadIdNull() {
                this[this.tableLeadRegister.LeadIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadNoNull() {
                return this.IsNull(this.tableLeadRegister.LeadNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadNoNull() {
                this[this.tableLeadRegister.LeadNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadDateNull() {
                return this.IsNull(this.tableLeadRegister.LeadDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadDateNull() {
                this[this.tableLeadRegister.LeadDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableLeadRegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableLeadRegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersonNull() {
                return this.IsNull(this.tableLeadRegister.ContactPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersonNull() {
                this[this.tableLeadRegister.ContactPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableLeadRegister.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableLeadRegister.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableLeadRegister.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableLeadRegister.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSourceOfLeadNull() {
                return this.IsNull(this.tableLeadRegister.SourceOfLeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSourceOfLeadNull() {
                this[this.tableLeadRegister.SourceOfLeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerBudgetNull() {
                return this.IsNull(this.tableLeadRegister.CustomerBudgetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerBudgetNull() {
                this[this.tableLeadRegister.CustomerBudgetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterestLevelNull() {
                return this.IsNull(this.tableLeadRegister.InterestLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterestLevelNull() {
                this[this.tableLeadRegister.InterestLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNextFollowUpDateNull() {
                return this.IsNull(this.tableLeadRegister.NextFollowUpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNextFollowUpDateNull() {
                this[this.tableLeadRegister.NextFollowUpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecificationNull() {
                return this.IsNull(this.tableLeadRegister.SpecificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecificationNull() {
                this[this.tableLeadRegister.SpecificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadStatusNull() {
                return this.IsNull(this.tableLeadRegister.LeadStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadStatusNull() {
                this[this.tableLeadRegister.LeadStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadTakenByNull() {
                return this.IsNull(this.tableLeadRegister.LeadTakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadTakenByNull() {
                this[this.tableLeadRegister.LeadTakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableLeadRegister.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableLeadRegister.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableLeadRegister.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableLeadRegister.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBlockNameNull() {
                return this.IsNull(this.tableLeadRegister.BlockNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBlockNameNull() {
                this[this.tableLeadRegister.BlockNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBuildingNameNull() {
                return this.IsNull(this.tableLeadRegister.BuildingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBuildingNameNull() {
                this[this.tableLeadRegister.BuildingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadByNull() {
                return this.IsNull(this.tableLeadRegister.LeadByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadByNull() {
                this[this.tableLeadRegister.LeadByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableLeadRegister.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableLeadRegister.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNameNull() {
                return this.IsNull(this.tableLeadRegister.EmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNameNull() {
                this[this.tableLeadRegister.EmpNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpAllToNull() {
                return this.IsNull(this.tableLeadRegister.EmpAllToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpAllToNull() {
                this[this.tableLeadRegister.EmpAllToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableLeadRegister.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableLeadRegister.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableLeadRegister.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableLeadRegister.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPincodeNull() {
                return this.IsNull(this.tableLeadRegister.PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPincodeNull() {
                this[this.tableLeadRegister.PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableLeadRegister.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableLeadRegister.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableLeadRegister.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableLeadRegister.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInqResponseNull() {
                return this.IsNull(this.tableLeadRegister.InqResponseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInqResponseNull() {
                this[this.tableLeadRegister.InqResponseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HRDetailListRow : global::System.Data.DataRow {
            
            private HRDetailListDataTable tableHRDetailList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HRDetailListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHRDetailList = ((HRDetailListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long HRID {
                get {
                    try {
                        return ((long)(this[this.tableHRDetailList.HRIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HRID\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.HRIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HrDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableHRDetailList.HrDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HrDate\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.HrDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TypeOfLabour {
                get {
                    try {
                        return ((string)(this[this.tableHRDetailList.TypeOfLabourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeOfLabour\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.TypeOfLabourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long NoOfLabour {
                get {
                    try {
                        return ((long)(this[this.tableHRDetailList.NoOfLabourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoOfLabour\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.NoOfLabourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountPerLabour {
                get {
                    try {
                        return ((decimal)(this[this.tableHRDetailList.AmountPerLabourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountPerLabour\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.AmountPerLabourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableHRDetailList.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableHRDetailList.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteName {
                get {
                    try {
                        return ((string)(this[this.tableHRDetailList.SiteNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteName\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.SiteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SiteID {
                get {
                    try {
                        return ((long)(this[this.tableHRDetailList.SiteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteID\' in table \'HRDetailList\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableHRDetailList.SiteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHRIDNull() {
                return this.IsNull(this.tableHRDetailList.HRIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHRIDNull() {
                this[this.tableHRDetailList.HRIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHrDateNull() {
                return this.IsNull(this.tableHRDetailList.HrDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHrDateNull() {
                this[this.tableHRDetailList.HrDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTypeOfLabourNull() {
                return this.IsNull(this.tableHRDetailList.TypeOfLabourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTypeOfLabourNull() {
                this[this.tableHRDetailList.TypeOfLabourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoOfLabourNull() {
                return this.IsNull(this.tableHRDetailList.NoOfLabourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoOfLabourNull() {
                this[this.tableHRDetailList.NoOfLabourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountPerLabourNull() {
                return this.IsNull(this.tableHRDetailList.AmountPerLabourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountPerLabourNull() {
                this[this.tableHRDetailList.AmountPerLabourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableHRDetailList.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableHRDetailList.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableHRDetailList.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableHRDetailList.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteNameNull() {
                return this.IsNull(this.tableHRDetailList.SiteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteNameNull() {
                this[this.tableHRDetailList.SiteNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteIDNull() {
                return this.IsNull(this.tableHRDetailList.SiteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteIDNull() {
                this[this.tableHRDetailList.SiteIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DailyConsumptionRow : global::System.Data.DataRow {
            
            private DailyConsumptionDataTable tableDailyConsumption;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DailyConsumptionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDailyConsumption = ((DailyConsumptionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SiteID {
                get {
                    try {
                        return ((long)(this[this.tableDailyConsumption.SiteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteID\' in table \'DailyConsumption\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyConsumption.SiteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableDailyConsumption.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'DailyConsumption\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyConsumption.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableDailyConsumption.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'DailyConsumption\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyConsumption.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SiteName {
                get {
                    try {
                        return ((string)(this[this.tableDailyConsumption.SiteNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteName\' in table \'DailyConsumption\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyConsumption.SiteNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDailyConsumption.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'DailyConsumption\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyConsumption.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableDailyConsumption.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'DailyConsumption\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyConsumption.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableDailyConsumption.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'DailyConsumption\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDailyConsumption.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteIDNull() {
                return this.IsNull(this.tableDailyConsumption.SiteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteIDNull() {
                this[this.tableDailyConsumption.SiteIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableDailyConsumption.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableDailyConsumption.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableDailyConsumption.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableDailyConsumption.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSiteNameNull() {
                return this.IsNull(this.tableDailyConsumption.SiteNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSiteNameNull() {
                this[this.tableDailyConsumption.SiteNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableDailyConsumption.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableDailyConsumption.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableDailyConsumption.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableDailyConsumption.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableDailyConsumption.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableDailyConsumption.QtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerPaymentRegisterRow : global::System.Data.DataRow {
            
            private CustomerPaymentRegisterDataTable tableCustomerPaymentRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPaymentRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerPaymentRegister = ((CustomerPaymentRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ReceiptID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerPaymentRegister.ReceiptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptID\' in table \'CustomerPaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentRegister.ReceiptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentRegister.ReceiptCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptCode\' in table \'CustomerPaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentRegister.ReceiptCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerPaymentRegister.ReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptDate\' in table \'CustomerPaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentRegister.ReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeadNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentRegister.LeadNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadNo\' in table \'CustomerPaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentRegister.LeadNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentRegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'CustomerPaymentRegister\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentRegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPaymentRegister.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'CustomerPaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentRegister.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentRegister.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'CustomerPaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentRegister.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LeadID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerPaymentRegister.LeadIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadID\' in table \'CustomerPaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentRegister.LeadIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptIDNull() {
                return this.IsNull(this.tableCustomerPaymentRegister.ReceiptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptIDNull() {
                this[this.tableCustomerPaymentRegister.ReceiptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptCodeNull() {
                return this.IsNull(this.tableCustomerPaymentRegister.ReceiptCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptCodeNull() {
                this[this.tableCustomerPaymentRegister.ReceiptCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptDateNull() {
                return this.IsNull(this.tableCustomerPaymentRegister.ReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptDateNull() {
                this[this.tableCustomerPaymentRegister.ReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadNoNull() {
                return this.IsNull(this.tableCustomerPaymentRegister.LeadNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadNoNull() {
                this[this.tableCustomerPaymentRegister.LeadNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomerPaymentRegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomerPaymentRegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableCustomerPaymentRegister.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableCustomerPaymentRegister.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableCustomerPaymentRegister.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableCustomerPaymentRegister.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadIDNull() {
                return this.IsNull(this.tableCustomerPaymentRegister.LeadIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadIDNull() {
                this[this.tableCustomerPaymentRegister.LeadIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerRegisterRow : global::System.Data.DataRow {
            
            private CustomerRegisterDataTable tableCustomerRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerRegister = ((CustomerRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerRegister.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CityID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerRegister.CityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityID\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.CityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pincode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pincode\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TinNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.TinNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TinNo\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.TinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CSTNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.CSTNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTNo\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.CSTNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PANo {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.PANoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PANo\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.PANoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EccNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.EccNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EccNo\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.EccNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeadNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.LeadNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadNo\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.LeadNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerRegister.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'CustomerRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerRegister.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableCustomerRegister.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableCustomerRegister.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableCustomerRegister.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableCustomerRegister.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomerRegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomerRegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableCustomerRegister.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableCustomerRegister.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityIDNull() {
                return this.IsNull(this.tableCustomerRegister.CityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityIDNull() {
                this[this.tableCustomerRegister.CityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableCustomerRegister.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableCustomerRegister.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableCustomerRegister.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableCustomerRegister.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableCustomerRegister.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableCustomerRegister.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPincodeNull() {
                return this.IsNull(this.tableCustomerRegister.PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPincodeNull() {
                this[this.tableCustomerRegister.PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableCustomerRegister.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableCustomerRegister.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tableCustomerRegister.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tableCustomerRegister.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableCustomerRegister.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableCustomerRegister.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTinNoNull() {
                return this.IsNull(this.tableCustomerRegister.TinNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTinNoNull() {
                this[this.tableCustomerRegister.TinNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTNoNull() {
                return this.IsNull(this.tableCustomerRegister.CSTNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTNoNull() {
                this[this.tableCustomerRegister.CSTNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPANoNull() {
                return this.IsNull(this.tableCustomerRegister.PANoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPANoNull() {
                this[this.tableCustomerRegister.PANoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEccNoNull() {
                return this.IsNull(this.tableCustomerRegister.EccNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEccNoNull() {
                this[this.tableCustomerRegister.EccNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableCustomerRegister.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNameNull() {
                this[this.tableCustomerRegister.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadNoNull() {
                return this.IsNull(this.tableCustomerRegister.LeadNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadNoNull() {
                this[this.tableCustomerRegister.LeadNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableCustomerRegister.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableCustomerRegister.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesVoucherRow : global::System.Data.DataRow {
            
            private SalesVoucherDataTable tableSalesVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesVoucherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesVoucher = ((SalesVoucherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SaleID {
                get {
                    try {
                        return ((long)(this[this.tableSalesVoucher.SaleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleID\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.SaleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfJourney {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesVoucher.DateOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJourney\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.DateOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarType {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.CarTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarType\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.CarTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarNumber {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.CarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarNumber\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.CarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DriverName {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.DriverNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriverName\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.DriverNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.PhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNo\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.PhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlaceOfJourney {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.PlaceOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaceOfJourney\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.PlaceOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ClosingKms {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.ClosingKmsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingKms\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.ClosingKmsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ClosingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesVoucher.ClosingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingDate\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.ClosingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal StartingKms {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.StartingKmsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartingKms\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.StartingKmsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesVoucher.StartingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartingDate\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.StartingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalKms {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.TotalKmsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalKms\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.TotalKmsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalDays {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.TotalDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDays\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.TotalDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateType {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.RateTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RateType\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.RateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraKms {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.ExtraKmsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraKms\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.ExtraKmsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.ExtraAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraAmt\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.ExtraAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraHrs {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.ExtraHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraHrs\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.ExtraHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraHrsAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.ExtraHrsAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraHrsAmt\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.ExtraHrsAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TollTax {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.TollTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TollTax\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.TollTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NightCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.NightChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NightCharge\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.NightChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DriverAllowance {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.DriverAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriverAllowance\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.DriverAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OtherAllowance {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.OtherAllowanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAllowance\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.OtherAllowanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPayment {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.TotalPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPayment\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.TotalPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvancePayment {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.AdvancePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvancePayment\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.AdvancePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Balance {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.BalanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Balance\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DriverCellNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.DriverCellNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DriverCellNo\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.DriverCellNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RateTypeAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesVoucher.RateTypeAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RateTypeAmt\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.RateTypeAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartingTime {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.StartingTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartingTime\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.StartingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableSalesVoucher.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'SalesVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesVoucher.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIDNull() {
                return this.IsNull(this.tableSalesVoucher.SaleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIDNull() {
                this[this.tableSalesVoucher.SaleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableSalesVoucher.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableSalesVoucher.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNull() {
                return this.IsNull(this.tableSalesVoucher.CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNull() {
                this[this.tableSalesVoucher.CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfJourneyNull() {
                return this.IsNull(this.tableSalesVoucher.DateOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfJourneyNull() {
                this[this.tableSalesVoucher.DateOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeNull() {
                return this.IsNull(this.tableSalesVoucher.CarTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeNull() {
                this[this.tableSalesVoucher.CarTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarNumberNull() {
                return this.IsNull(this.tableSalesVoucher.CarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarNumberNull() {
                this[this.tableSalesVoucher.CarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDriverNameNull() {
                return this.IsNull(this.tableSalesVoucher.DriverNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDriverNameNull() {
                this[this.tableSalesVoucher.DriverNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableSalesVoucher.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableSalesVoucher.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNoNull() {
                return this.IsNull(this.tableSalesVoucher.PhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNoNull() {
                this[this.tableSalesVoucher.PhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableSalesVoucher.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableSalesVoucher.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceOfJourneyNull() {
                return this.IsNull(this.tableSalesVoucher.PlaceOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceOfJourneyNull() {
                this[this.tableSalesVoucher.PlaceOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosingKmsNull() {
                return this.IsNull(this.tableSalesVoucher.ClosingKmsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosingKmsNull() {
                this[this.tableSalesVoucher.ClosingKmsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosingDateNull() {
                return this.IsNull(this.tableSalesVoucher.ClosingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosingDateNull() {
                this[this.tableSalesVoucher.ClosingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartingKmsNull() {
                return this.IsNull(this.tableSalesVoucher.StartingKmsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartingKmsNull() {
                this[this.tableSalesVoucher.StartingKmsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartingDateNull() {
                return this.IsNull(this.tableSalesVoucher.StartingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartingDateNull() {
                this[this.tableSalesVoucher.StartingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalKmsNull() {
                return this.IsNull(this.tableSalesVoucher.TotalKmsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalKmsNull() {
                this[this.tableSalesVoucher.TotalKmsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDaysNull() {
                return this.IsNull(this.tableSalesVoucher.TotalDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDaysNull() {
                this[this.tableSalesVoucher.TotalDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateTypeNull() {
                return this.IsNull(this.tableSalesVoucher.RateTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateTypeNull() {
                this[this.tableSalesVoucher.RateTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraKmsNull() {
                return this.IsNull(this.tableSalesVoucher.ExtraKmsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraKmsNull() {
                this[this.tableSalesVoucher.ExtraKmsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraAmtNull() {
                return this.IsNull(this.tableSalesVoucher.ExtraAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraAmtNull() {
                this[this.tableSalesVoucher.ExtraAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraHrsNull() {
                return this.IsNull(this.tableSalesVoucher.ExtraHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraHrsNull() {
                this[this.tableSalesVoucher.ExtraHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraHrsAmtNull() {
                return this.IsNull(this.tableSalesVoucher.ExtraHrsAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraHrsAmtNull() {
                this[this.tableSalesVoucher.ExtraHrsAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTollTaxNull() {
                return this.IsNull(this.tableSalesVoucher.TollTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTollTaxNull() {
                this[this.tableSalesVoucher.TollTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNightChargeNull() {
                return this.IsNull(this.tableSalesVoucher.NightChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNightChargeNull() {
                this[this.tableSalesVoucher.NightChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDriverAllowanceNull() {
                return this.IsNull(this.tableSalesVoucher.DriverAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDriverAllowanceNull() {
                this[this.tableSalesVoucher.DriverAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherAllowanceNull() {
                return this.IsNull(this.tableSalesVoucher.OtherAllowanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherAllowanceNull() {
                this[this.tableSalesVoucher.OtherAllowanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPaymentNull() {
                return this.IsNull(this.tableSalesVoucher.TotalPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPaymentNull() {
                this[this.tableSalesVoucher.TotalPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvancePaymentNull() {
                return this.IsNull(this.tableSalesVoucher.AdvancePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvancePaymentNull() {
                this[this.tableSalesVoucher.AdvancePaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBalanceNull() {
                return this.IsNull(this.tableSalesVoucher.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBalanceNull() {
                this[this.tableSalesVoucher.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDriverCellNoNull() {
                return this.IsNull(this.tableSalesVoucher.DriverCellNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDriverCellNoNull() {
                this[this.tableSalesVoucher.DriverCellNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateTypeAmtNull() {
                return this.IsNull(this.tableSalesVoucher.RateTypeAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateTypeAmtNull() {
                this[this.tableSalesVoucher.RateTypeAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartingTimeNull() {
                return this.IsNull(this.tableSalesVoucher.StartingTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartingTimeNull() {
                this[this.tableSalesVoucher.StartingTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableSalesVoucher.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableSalesVoucher.EndTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ServiceModuleRegisterRow : global::System.Data.DataRow {
            
            private ServiceModuleRegisterDataTable tableServiceModuleRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceModuleRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServiceModuleRegister = ((ServiceModuleRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableServiceModuleRegister.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceModuleRegister.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNumber {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.ModelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNumber\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.ModelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Problem {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.ProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Problem\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.ProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ServiceBy {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.ServiceByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceBy\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.ServiceByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableServiceModuleRegister.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'ServiceModuleRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceModuleRegister.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableServiceModuleRegister.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableServiceModuleRegister.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableServiceModuleRegister.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableServiceModuleRegister.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableServiceModuleRegister.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableServiceModuleRegister.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableServiceModuleRegister.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableServiceModuleRegister.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNumberNull() {
                return this.IsNull(this.tableServiceModuleRegister.ModelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNumberNull() {
                this[this.tableServiceModuleRegister.ModelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemNull() {
                return this.IsNull(this.tableServiceModuleRegister.ProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemNull() {
                this[this.tableServiceModuleRegister.ProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceByNull() {
                return this.IsNull(this.tableServiceModuleRegister.ServiceByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceByNull() {
                this[this.tableServiceModuleRegister.ServiceByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableServiceModuleRegister.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableServiceModuleRegister.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableServiceModuleRegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableServiceModuleRegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableServiceModuleRegister.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableServiceModuleRegister.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableServiceModuleRegister.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableServiceModuleRegister.EmailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CarTypeWiseRegisterRow : global::System.Data.DataRow {
            
            private CarTypeWiseRegisterDataTable tableCarTypeWiseRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CarTypeWiseRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCarTypeWiseRegister = ((CarTypeWiseRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CarTypeID {
                get {
                    try {
                        return ((long)(this[this.tableCarTypeWiseRegister.CarTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarTypeID\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.CarTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableCarTypeWiseRegister.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfJourney {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCarTypeWiseRegister.DateOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJourney\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.DateOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarType {
                get {
                    try {
                        return ((string)(this[this.tableCarTypeWiseRegister.CarTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarType\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.CarTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableCarTypeWiseRegister.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalKms {
                get {
                    try {
                        return ((decimal)(this[this.tableCarTypeWiseRegister.TotalKmsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalKms\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.TotalKmsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalDays {
                get {
                    try {
                        return ((decimal)(this[this.tableCarTypeWiseRegister.TotalDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDays\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.TotalDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraKms {
                get {
                    try {
                        return ((decimal)(this[this.tableCarTypeWiseRegister.ExtraKmsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraKms\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.ExtraKmsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisealUsed {
                get {
                    try {
                        return ((string)(this[this.tableCarTypeWiseRegister.DisealUsedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisealUsed\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.DisealUsedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPayment {
                get {
                    try {
                        return ((decimal)(this[this.tableCarTypeWiseRegister.TotalPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPayment\' in table \'CarTypeWiseRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.TotalPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaintananceCharges {
                get {
                    try {
                        return ((string)(this[this.tableCarTypeWiseRegister.MaintananceChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaintananceCharges\' in table \'CarTypeWiseRegister\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCarTypeWiseRegister.MaintananceChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeIDNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.CarTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeIDNull() {
                this[this.tableCarTypeWiseRegister.CarTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableCarTypeWiseRegister.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfJourneyNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.DateOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfJourneyNull() {
                this[this.tableCarTypeWiseRegister.DateOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.CarTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeNull() {
                this[this.tableCarTypeWiseRegister.CarTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableCarTypeWiseRegister.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalKmsNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.TotalKmsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalKmsNull() {
                this[this.tableCarTypeWiseRegister.TotalKmsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalDaysNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.TotalDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalDaysNull() {
                this[this.tableCarTypeWiseRegister.TotalDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraKmsNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.ExtraKmsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraKmsNull() {
                this[this.tableCarTypeWiseRegister.ExtraKmsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisealUsedNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.DisealUsedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisealUsedNull() {
                this[this.tableCarTypeWiseRegister.DisealUsedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPaymentNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.TotalPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPaymentNull() {
                this[this.tableCarTypeWiseRegister.TotalPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintananceChargesNull() {
                return this.IsNull(this.tableCarTypeWiseRegister.MaintananceChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintananceChargesNull() {
                this[this.tableCarTypeWiseRegister.MaintananceChargesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesInvoiceRow : global::System.Data.DataRow {
            
            private SalesInvoiceDataTable tableSalesInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesInvoice = ((SalesInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoice.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.DCNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCNo\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.DCNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoice.DCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCDate\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.DCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PinCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.PinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PinCode\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.PinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxClass {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.TaxClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClass\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraCharges {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.ExtraChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraCharges\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.ExtraChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraChargesType {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice.ExtraChargesTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraChargesType\' in table \'SalesInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice.ExtraChargesTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableSalesInvoice.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableSalesInvoice.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableSalesInvoice.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableSalesInvoice.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCNoNull() {
                return this.IsNull(this.tableSalesInvoice.DCNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCNoNull() {
                this[this.tableSalesInvoice.DCNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCDateNull() {
                return this.IsNull(this.tableSalesInvoice.DCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCDateNull() {
                this[this.tableSalesInvoice.DCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableSalesInvoice.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableSalesInvoice.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableSalesInvoice.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableSalesInvoice.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableSalesInvoice.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableSalesInvoice.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableSalesInvoice.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableSalesInvoice.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableSalesInvoice.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableSalesInvoice.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableSalesInvoice.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableSalesInvoice.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableSalesInvoice.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableSalesInvoice.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableSalesInvoice.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableSalesInvoice.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableSalesInvoice.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableSalesInvoice.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableSalesInvoice.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableSalesInvoice.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableSalesInvoice.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableSalesInvoice.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableSalesInvoice.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableSalesInvoice.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableSalesInvoice.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableSalesInvoice.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableSalesInvoice.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableSalesInvoice.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableSalesInvoice.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableSalesInvoice.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableSalesInvoice.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableSalesInvoice.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableSalesInvoice.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableSalesInvoice.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinCodeNull() {
                return this.IsNull(this.tableSalesInvoice.PinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinCodeNull() {
                this[this.tableSalesInvoice.PinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableSalesInvoice.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableSalesInvoice.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableSalesInvoice.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableSalesInvoice.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableSalesInvoice.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableSalesInvoice.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableSalesInvoice.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableSalesInvoice.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassNull() {
                return this.IsNull(this.tableSalesInvoice.TaxClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassNull() {
                this[this.tableSalesInvoice.TaxClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableSalesInvoice.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableSalesInvoice.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableSalesInvoice.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableSalesInvoice.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableSalesInvoice.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableSalesInvoice.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableSalesInvoice.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableSalesInvoice.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableSalesInvoice.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableSalesInvoice.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraChargesNull() {
                return this.IsNull(this.tableSalesInvoice.ExtraChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraChargesNull() {
                this[this.tableSalesInvoice.ExtraChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraChargesTypeNull() {
                return this.IsNull(this.tableSalesInvoice.ExtraChargesTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraChargesTypeNull() {
                this[this.tableSalesInvoice.ExtraChargesTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseOrderRow : global::System.Data.DataRow {
            
            private PurchaseOrderDataTable tablePurchaseOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseOrderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseOrder = ((PurchaseOrderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseOrder.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.DCNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCNo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.DCNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseOrder.DCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCDate\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.DCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseOrder.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PinCode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.PinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PinCode\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.PinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemID {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxClass {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.TaxClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClass\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CSTNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.CSTNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTNo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CSTNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TinNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.TinNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TinNo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.TinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Excise {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.ExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Excise\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EduCess {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.EduCessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EduCess\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.EduCessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceTax {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.ServiceTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceTax\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ServiceTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HEduCess {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.HEduCessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HEduCess\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.HEduCessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CST {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.CSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CST\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VAT {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVAT {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.AVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVAT\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.AVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraCharges {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.ExtraChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraCharges\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExtraChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraChargesType {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ExtraChargesTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraChargesType\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExtraChargesTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Dis {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.DisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dis\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.DisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name1 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name1\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name2 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name2\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name3 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name3\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name4 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Name4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name4\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Name4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name5 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Name5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name5\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Name5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name6 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Name6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name6\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Name6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value1 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Value1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value1\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Value1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value2 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Value2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value2\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Value2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value3 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Value3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value3\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Value3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value4 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Value4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value4\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Value4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value5 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Value5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value5\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Value5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value6 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Value6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value6\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Value6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExCharges2 {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.ExCharges2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExCharges2\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExCharges2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExChargesType2 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ExChargesType2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExChargesType2\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExChargesType2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExCharges3 {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.ExCharges3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExCharges3\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExCharges3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExChargesType3 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ExChargesType3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExChargesType3\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExChargesType3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemSpec {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ItemSpecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemSpec\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ItemSpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemSSpec {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ItemSSpecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemSSpec\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ItemSSpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustInvoiceNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.CustInvoiceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustInvoiceNo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CustInvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HSNCode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.HSNCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HSNCode\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.HSNCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public float BONO {
                get {
                    try {
                        return ((float)(this[this.tablePurchaseOrder.BONOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BONO\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.BONOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BODate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseOrder.BODateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BODate\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.BODateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShippingAdd {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ShippingAddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingAdd\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ShippingAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountAmt {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.DiscountAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountAmt\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.DiscountAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PONo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.PONoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PONo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.PONoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PODate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseOrder.PODateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PODate\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.PODateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LRNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.LRNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LRNo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.LRNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransportName {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.TransportNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransportName\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.TransportNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Destination {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.DestinationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Destination\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.DestinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RoadPerNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.RoadPerNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoadPerNo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.RoadPerNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LRDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseOrder.LRDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LRDate\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.LRDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChallanNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ChallanNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChallanNo\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ChallanNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Image1 {
                get {
                    try {
                        return ((byte[])(this[this.tablePurchaseOrder.Image1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Image1\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Image1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DocName {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.DocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocName\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.DocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.CurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Currency\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SBCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.SBCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SBCessAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.SBCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraTaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseOrder.ExtraTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraTaxAmount\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExtraTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraTaxType {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.ExtraTaxTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraTaxType\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.ExtraTaxTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vendor {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.VendorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vendor\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.VendorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseOrder.VendorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCode\' in table \'PurchaseOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseOrder.VendorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tablePurchaseOrder.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tablePurchaseOrder.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tablePurchaseOrder.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tablePurchaseOrder.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCNoNull() {
                return this.IsNull(this.tablePurchaseOrder.DCNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCNoNull() {
                this[this.tablePurchaseOrder.DCNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCDateNull() {
                return this.IsNull(this.tablePurchaseOrder.DCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCDateNull() {
                this[this.tablePurchaseOrder.DCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tablePurchaseOrder.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tablePurchaseOrder.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tablePurchaseOrder.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tablePurchaseOrder.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tablePurchaseOrder.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tablePurchaseOrder.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tablePurchaseOrder.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tablePurchaseOrder.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tablePurchaseOrder.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tablePurchaseOrder.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tablePurchaseOrder.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tablePurchaseOrder.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablePurchaseOrder.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tablePurchaseOrder.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablePurchaseOrder.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablePurchaseOrder.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tablePurchaseOrder.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tablePurchaseOrder.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tablePurchaseOrder.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tablePurchaseOrder.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tablePurchaseOrder.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tablePurchaseOrder.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tablePurchaseOrder.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tablePurchaseOrder.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinCodeNull() {
                return this.IsNull(this.tablePurchaseOrder.PinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinCodeNull() {
                this[this.tablePurchaseOrder.PinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tablePurchaseOrder.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tablePurchaseOrder.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablePurchaseOrder.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablePurchaseOrder.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tablePurchaseOrder.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tablePurchaseOrder.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tablePurchaseOrder.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tablePurchaseOrder.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassNull() {
                return this.IsNull(this.tablePurchaseOrder.TaxClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassNull() {
                this[this.tablePurchaseOrder.TaxClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tablePurchaseOrder.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tablePurchaseOrder.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tablePurchaseOrder.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tablePurchaseOrder.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePurchaseOrder.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tablePurchaseOrder.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tablePurchaseOrder.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tablePurchaseOrder.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tablePurchaseOrder.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTNoNull() {
                return this.IsNull(this.tablePurchaseOrder.CSTNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTNoNull() {
                this[this.tablePurchaseOrder.CSTNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTinNoNull() {
                return this.IsNull(this.tablePurchaseOrder.TinNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTinNoNull() {
                this[this.tablePurchaseOrder.TinNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseNull() {
                return this.IsNull(this.tablePurchaseOrder.ExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseNull() {
                this[this.tablePurchaseOrder.ExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEduCessNull() {
                return this.IsNull(this.tablePurchaseOrder.EduCessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEduCessNull() {
                this[this.tablePurchaseOrder.EduCessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceTaxNull() {
                return this.IsNull(this.tablePurchaseOrder.ServiceTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceTaxNull() {
                this[this.tablePurchaseOrder.ServiceTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHEduCessNull() {
                return this.IsNull(this.tablePurchaseOrder.HEduCessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHEduCessNull() {
                this[this.tablePurchaseOrder.HEduCessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTNull() {
                return this.IsNull(this.tablePurchaseOrder.CSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTNull() {
                this[this.tablePurchaseOrder.CSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tablePurchaseOrder.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tablePurchaseOrder.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATNull() {
                return this.IsNull(this.tablePurchaseOrder.AVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATNull() {
                this[this.tablePurchaseOrder.AVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraChargesNull() {
                return this.IsNull(this.tablePurchaseOrder.ExtraChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraChargesNull() {
                this[this.tablePurchaseOrder.ExtraChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraChargesTypeNull() {
                return this.IsNull(this.tablePurchaseOrder.ExtraChargesTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraChargesTypeNull() {
                this[this.tablePurchaseOrder.ExtraChargesTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisNull() {
                return this.IsNull(this.tablePurchaseOrder.DisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisNull() {
                this[this.tablePurchaseOrder.DisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName1Null() {
                return this.IsNull(this.tablePurchaseOrder.Name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName1Null() {
                this[this.tablePurchaseOrder.Name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName2Null() {
                return this.IsNull(this.tablePurchaseOrder.Name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName2Null() {
                this[this.tablePurchaseOrder.Name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName3Null() {
                return this.IsNull(this.tablePurchaseOrder.Name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName3Null() {
                this[this.tablePurchaseOrder.Name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName4Null() {
                return this.IsNull(this.tablePurchaseOrder.Name4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName4Null() {
                this[this.tablePurchaseOrder.Name4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName5Null() {
                return this.IsNull(this.tablePurchaseOrder.Name5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName5Null() {
                this[this.tablePurchaseOrder.Name5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName6Null() {
                return this.IsNull(this.tablePurchaseOrder.Name6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName6Null() {
                this[this.tablePurchaseOrder.Name6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue1Null() {
                return this.IsNull(this.tablePurchaseOrder.Value1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue1Null() {
                this[this.tablePurchaseOrder.Value1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue2Null() {
                return this.IsNull(this.tablePurchaseOrder.Value2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue2Null() {
                this[this.tablePurchaseOrder.Value2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue3Null() {
                return this.IsNull(this.tablePurchaseOrder.Value3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue3Null() {
                this[this.tablePurchaseOrder.Value3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue4Null() {
                return this.IsNull(this.tablePurchaseOrder.Value4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue4Null() {
                this[this.tablePurchaseOrder.Value4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue5Null() {
                return this.IsNull(this.tablePurchaseOrder.Value5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue5Null() {
                this[this.tablePurchaseOrder.Value5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue6Null() {
                return this.IsNull(this.tablePurchaseOrder.Value6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue6Null() {
                this[this.tablePurchaseOrder.Value6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExCharges2Null() {
                return this.IsNull(this.tablePurchaseOrder.ExCharges2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExCharges2Null() {
                this[this.tablePurchaseOrder.ExCharges2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExChargesType2Null() {
                return this.IsNull(this.tablePurchaseOrder.ExChargesType2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExChargesType2Null() {
                this[this.tablePurchaseOrder.ExChargesType2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExCharges3Null() {
                return this.IsNull(this.tablePurchaseOrder.ExCharges3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExCharges3Null() {
                this[this.tablePurchaseOrder.ExCharges3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExChargesType3Null() {
                return this.IsNull(this.tablePurchaseOrder.ExChargesType3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExChargesType3Null() {
                this[this.tablePurchaseOrder.ExChargesType3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemSpecNull() {
                return this.IsNull(this.tablePurchaseOrder.ItemSpecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemSpecNull() {
                this[this.tablePurchaseOrder.ItemSpecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemSSpecNull() {
                return this.IsNull(this.tablePurchaseOrder.ItemSSpecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemSSpecNull() {
                this[this.tablePurchaseOrder.ItemSSpecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustInvoiceNoNull() {
                return this.IsNull(this.tablePurchaseOrder.CustInvoiceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustInvoiceNoNull() {
                this[this.tablePurchaseOrder.CustInvoiceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHSNCodeNull() {
                return this.IsNull(this.tablePurchaseOrder.HSNCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHSNCodeNull() {
                this[this.tablePurchaseOrder.HSNCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBONONull() {
                return this.IsNull(this.tablePurchaseOrder.BONOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBONONull() {
                this[this.tablePurchaseOrder.BONOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBODateNull() {
                return this.IsNull(this.tablePurchaseOrder.BODateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBODateNull() {
                this[this.tablePurchaseOrder.BODateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShippingAddNull() {
                return this.IsNull(this.tablePurchaseOrder.ShippingAddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShippingAddNull() {
                this[this.tablePurchaseOrder.ShippingAddColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountAmtNull() {
                return this.IsNull(this.tablePurchaseOrder.DiscountAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountAmtNull() {
                this[this.tablePurchaseOrder.DiscountAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tablePurchaseOrder.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tablePurchaseOrder.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tablePurchaseOrder.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tablePurchaseOrder.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPONoNull() {
                return this.IsNull(this.tablePurchaseOrder.PONoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPONoNull() {
                this[this.tablePurchaseOrder.PONoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPODateNull() {
                return this.IsNull(this.tablePurchaseOrder.PODateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPODateNull() {
                this[this.tablePurchaseOrder.PODateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRNoNull() {
                return this.IsNull(this.tablePurchaseOrder.LRNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRNoNull() {
                this[this.tablePurchaseOrder.LRNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransportNameNull() {
                return this.IsNull(this.tablePurchaseOrder.TransportNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransportNameNull() {
                this[this.tablePurchaseOrder.TransportNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDestinationNull() {
                return this.IsNull(this.tablePurchaseOrder.DestinationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDestinationNull() {
                this[this.tablePurchaseOrder.DestinationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoadPerNoNull() {
                return this.IsNull(this.tablePurchaseOrder.RoadPerNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoadPerNoNull() {
                this[this.tablePurchaseOrder.RoadPerNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLRDateNull() {
                return this.IsNull(this.tablePurchaseOrder.LRDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLRDateNull() {
                this[this.tablePurchaseOrder.LRDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChallanNoNull() {
                return this.IsNull(this.tablePurchaseOrder.ChallanNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChallanNoNull() {
                this[this.tablePurchaseOrder.ChallanNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImage1Null() {
                return this.IsNull(this.tablePurchaseOrder.Image1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImage1Null() {
                this[this.tablePurchaseOrder.Image1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocNameNull() {
                return this.IsNull(this.tablePurchaseOrder.DocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocNameNull() {
                this[this.tablePurchaseOrder.DocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tablePurchaseOrder.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tablePurchaseOrder.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNull() {
                return this.IsNull(this.tablePurchaseOrder.CurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNull() {
                this[this.tablePurchaseOrder.CurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tablePurchaseOrder.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNameNull() {
                this[this.tablePurchaseOrder.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBCessAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.SBCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBCessAmountNull() {
                this[this.tablePurchaseOrder.SBCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraTaxAmountNull() {
                return this.IsNull(this.tablePurchaseOrder.ExtraTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraTaxAmountNull() {
                this[this.tablePurchaseOrder.ExtraTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraTaxTypeNull() {
                return this.IsNull(this.tablePurchaseOrder.ExtraTaxTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraTaxTypeNull() {
                this[this.tablePurchaseOrder.ExtraTaxTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNull() {
                return this.IsNull(this.tablePurchaseOrder.VendorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNull() {
                this[this.tablePurchaseOrder.VendorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tablePurchaseOrder.VendorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCodeNull() {
                this[this.tablePurchaseOrder.VendorCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class salesRow : global::System.Data.DataRow {
            
            private salesDataTable tablesales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal salesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesales = ((salesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tablesales.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesales.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCNo {
                get {
                    try {
                        return ((string)(this[this.tablesales.DCNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCNo\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.DCNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesales.DCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCDate\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.DCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tablesales.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tablesales.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tablesales.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tablesales.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tablesales.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tablesales.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PinCode {
                get {
                    try {
                        return ((string)(this[this.tablesales.PinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PinCode\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.PinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tablesales.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tablesales.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tablesales.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tablesales.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxClass {
                get {
                    try {
                        return ((string)(this[this.tablesales.TaxClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClass\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablesales.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tablesales.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tablesales.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'sales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablesales.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tablesales.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tablesales.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tablesales.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tablesales.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCNoNull() {
                return this.IsNull(this.tablesales.DCNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCNoNull() {
                this[this.tablesales.DCNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCDateNull() {
                return this.IsNull(this.tablesales.DCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCDateNull() {
                this[this.tablesales.DCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tablesales.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tablesales.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tablesales.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tablesales.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tablesales.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tablesales.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tablesales.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tablesales.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tablesales.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tablesales.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tablesales.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tablesales.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tablesales.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tablesales.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tablesales.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tablesales.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tablesales.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tablesales.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tablesales.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tablesales.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablesales.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablesales.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tablesales.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tablesales.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablesales.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablesales.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tablesales.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tablesales.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tablesales.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tablesales.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tablesales.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tablesales.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tablesales.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tablesales.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tablesales.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tablesales.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinCodeNull() {
                return this.IsNull(this.tablesales.PinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinCodeNull() {
                this[this.tablesales.PinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tablesales.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tablesales.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tablesales.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tablesales.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tablesales.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tablesales.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tablesales.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tablesales.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassNull() {
                return this.IsNull(this.tablesales.TaxClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassNull() {
                this[this.tablesales.TaxClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tablesales.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tablesales.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tablesales.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tablesales.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablesales.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablesales.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tablesales.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tablesales.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tablesales.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tablesales.UOMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesInvoicevRow : global::System.Data.DataRow {
            
            private SalesInvoicevDataTable tableSalesInvoicev;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoicevRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesInvoicev = ((SalesInvoicevDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SrNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoicev.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SaleID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoicev.SaleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleID\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.SaleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfJourney {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoicev.DateOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJourney\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.DateOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ClosingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoicev.ClosingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingDate\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.ClosingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.VoucherNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherNo\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.VoucherNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.PhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNo\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.PhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Min_km {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicev.Min_kmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Min_km\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.Min_kmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PinCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.PinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PinCode\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.PinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateType {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.RateTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RateType\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.RateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlaceOfJourney {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicev.PlaceOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaceOfJourney\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.PlaceOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KmPerDays {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicev.KmPerDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KmPerDays\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.KmPerDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rates {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicev.RatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rates\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.RatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicev.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvancePayment {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicev.AdvancePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvancePayment\' in table \'SalesInvoicev\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicev.AdvancePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableSalesInvoicev.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableSalesInvoicev.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIDNull() {
                return this.IsNull(this.tableSalesInvoicev.SaleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIDNull() {
                this[this.tableSalesInvoicev.SaleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableSalesInvoicev.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableSalesInvoicev.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfJourneyNull() {
                return this.IsNull(this.tableSalesInvoicev.DateOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfJourneyNull() {
                this[this.tableSalesInvoicev.DateOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosingDateNull() {
                return this.IsNull(this.tableSalesInvoicev.ClosingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosingDateNull() {
                this[this.tableSalesInvoicev.ClosingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNoNull() {
                return this.IsNull(this.tableSalesInvoicev.VoucherNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNoNull() {
                this[this.tableSalesInvoicev.VoucherNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableSalesInvoicev.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableSalesInvoicev.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableSalesInvoicev.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableSalesInvoicev.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableSalesInvoicev.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableSalesInvoicev.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNoNull() {
                return this.IsNull(this.tableSalesInvoicev.PhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNoNull() {
                this[this.tableSalesInvoicev.PhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMin_kmNull() {
                return this.IsNull(this.tableSalesInvoicev.Min_kmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMin_kmNull() {
                this[this.tableSalesInvoicev.Min_kmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableSalesInvoicev.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableSalesInvoicev.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableSalesInvoicev.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableSalesInvoicev.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableSalesInvoicev.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableSalesInvoicev.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableSalesInvoicev.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableSalesInvoicev.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinCodeNull() {
                return this.IsNull(this.tableSalesInvoicev.PinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinCodeNull() {
                this[this.tableSalesInvoicev.PinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableSalesInvoicev.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableSalesInvoicev.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableSalesInvoicev.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableSalesInvoicev.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateTypeNull() {
                return this.IsNull(this.tableSalesInvoicev.RateTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateTypeNull() {
                this[this.tableSalesInvoicev.RateTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSalesInvoicev.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSalesInvoicev.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceOfJourneyNull() {
                return this.IsNull(this.tableSalesInvoicev.PlaceOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceOfJourneyNull() {
                this[this.tableSalesInvoicev.PlaceOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKmPerDaysNull() {
                return this.IsNull(this.tableSalesInvoicev.KmPerDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKmPerDaysNull() {
                this[this.tableSalesInvoicev.KmPerDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatesNull() {
                return this.IsNull(this.tableSalesInvoicev.RatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatesNull() {
                this[this.tableSalesInvoicev.RatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableSalesInvoicev.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableSalesInvoicev.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvancePaymentNull() {
                return this.IsNull(this.tableSalesInvoicev.AdvancePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvancePaymentNull() {
                this[this.tableSalesInvoicev.AdvancePaymentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesInvoicevidhiRow : global::System.Data.DataRow {
            
            private SalesInvoicevidhiDataTable tableSalesInvoicevidhi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoicevidhiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesInvoicevidhi = ((SalesInvoicevidhiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SrNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoicevidhi.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SaleID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoicevidhi.SaleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleID\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.SaleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfJourney {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoicevidhi.DateOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJourney\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.DateOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ClosingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoicevidhi.ClosingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingDate\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.ClosingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.VoucherNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherNo\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.VoucherNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.PhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNo\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.PhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Min_km {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevidhi.Min_kmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Min_km\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.Min_kmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PinCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.PinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PinCode\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.PinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarNumber {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.CarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarNumber\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.CarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAC {
                get {
                    try {
                        return ((bool)(this[this.tableSalesInvoicevidhi.IsACColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAC\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.IsACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateType {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.RateTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RateType\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.RateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlaceOfJourney {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevidhi.PlaceOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaceOfJourney\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.PlaceOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KmPerDays {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevidhi.KmPerDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KmPerDays\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.KmPerDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rates {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevidhi.RatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rates\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.RatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevidhi.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvancePayment {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevidhi.AdvancePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvancePayment\' in table \'SalesInvoicevidhi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevidhi.AdvancePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableSalesInvoicevidhi.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIDNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.SaleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIDNull() {
                this[this.tableSalesInvoicevidhi.SaleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableSalesInvoicevidhi.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfJourneyNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.DateOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfJourneyNull() {
                this[this.tableSalesInvoicevidhi.DateOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosingDateNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.ClosingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosingDateNull() {
                this[this.tableSalesInvoicevidhi.ClosingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNoNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.VoucherNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNoNull() {
                this[this.tableSalesInvoicevidhi.VoucherNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableSalesInvoicevidhi.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableSalesInvoicevidhi.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableSalesInvoicevidhi.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNoNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.PhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNoNull() {
                this[this.tableSalesInvoicevidhi.PhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMin_kmNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.Min_kmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMin_kmNull() {
                this[this.tableSalesInvoicevidhi.Min_kmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableSalesInvoicevidhi.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableSalesInvoicevidhi.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableSalesInvoicevidhi.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableSalesInvoicevidhi.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableSalesInvoicevidhi.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableSalesInvoicevidhi.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableSalesInvoicevidhi.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinCodeNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.PinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinCodeNull() {
                this[this.tableSalesInvoicevidhi.PinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarNumberNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.CarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarNumberNull() {
                this[this.tableSalesInvoicevidhi.CarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsACNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.IsACColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsACNull() {
                this[this.tableSalesInvoicevidhi.IsACColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableSalesInvoicevidhi.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableSalesInvoicevidhi.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateTypeNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.RateTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateTypeNull() {
                this[this.tableSalesInvoicevidhi.RateTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSalesInvoicevidhi.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceOfJourneyNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.PlaceOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceOfJourneyNull() {
                this[this.tableSalesInvoicevidhi.PlaceOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKmPerDaysNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.KmPerDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKmPerDaysNull() {
                this[this.tableSalesInvoicevidhi.KmPerDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatesNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.RatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatesNull() {
                this[this.tableSalesInvoicevidhi.RatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableSalesInvoicevidhi.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvancePaymentNull() {
                return this.IsNull(this.tableSalesInvoicevidhi.AdvancePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvancePaymentNull() {
                this[this.tableSalesInvoicevidhi.AdvancePaymentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesInvoiceviRow : global::System.Data.DataRow {
            
            private SalesInvoiceviDataTable tableSalesInvoicevi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoiceviRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesInvoicevi = ((SalesInvoiceviDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SrNo {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoicevi.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SaleID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoicevi.SaleIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleID\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.SaleIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfJourney {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoicevi.DateOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJourney\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.DateOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ClosingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoicevi.ClosingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingDate\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.ClosingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.VoucherNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherNo\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.VoucherNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.PhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNo\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.PhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Min_km {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevi.Min_kmColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Min_km\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.Min_kmColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Customer {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.CustomerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Customer\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PinCode {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.PinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PinCode\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.PinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarNumber {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.CarNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarNumber\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.CarNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarType {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.CarTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarType\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.CarTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAC {
                get {
                    try {
                        return ((bool)(this[this.tableSalesInvoicevi.IsACColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAC\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.IsACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RateType {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.RateTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RateType\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.RateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlaceOfJourney {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoicevi.PlaceOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaceOfJourney\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.PlaceOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KmPerDays {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevi.KmPerDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KmPerDays\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.KmPerDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rates {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevi.RatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rates\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.RatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevi.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvancePayment {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoicevi.AdvancePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvancePayment\' in table \'SalesInvoicevi\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoicevi.AdvancePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableSalesInvoicevi.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableSalesInvoicevi.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIDNull() {
                return this.IsNull(this.tableSalesInvoicevi.SaleIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIDNull() {
                this[this.tableSalesInvoicevi.SaleIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableSalesInvoicevi.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableSalesInvoicevi.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfJourneyNull() {
                return this.IsNull(this.tableSalesInvoicevi.DateOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfJourneyNull() {
                this[this.tableSalesInvoicevi.DateOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosingDateNull() {
                return this.IsNull(this.tableSalesInvoicevi.ClosingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosingDateNull() {
                this[this.tableSalesInvoicevi.ClosingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNoNull() {
                return this.IsNull(this.tableSalesInvoicevi.VoucherNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNoNull() {
                this[this.tableSalesInvoicevi.VoucherNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableSalesInvoicevi.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableSalesInvoicevi.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableSalesInvoicevi.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableSalesInvoicevi.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableSalesInvoicevi.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableSalesInvoicevi.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNoNull() {
                return this.IsNull(this.tableSalesInvoicevi.PhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNoNull() {
                this[this.tableSalesInvoicevi.PhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMin_kmNull() {
                return this.IsNull(this.tableSalesInvoicevi.Min_kmColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMin_kmNull() {
                this[this.tableSalesInvoicevi.Min_kmColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNull() {
                return this.IsNull(this.tableSalesInvoicevi.CustomerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNull() {
                this[this.tableSalesInvoicevi.CustomerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableSalesInvoicevi.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableSalesInvoicevi.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableSalesInvoicevi.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableSalesInvoicevi.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableSalesInvoicevi.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableSalesInvoicevi.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinCodeNull() {
                return this.IsNull(this.tableSalesInvoicevi.PinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinCodeNull() {
                this[this.tableSalesInvoicevi.PinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarNumberNull() {
                return this.IsNull(this.tableSalesInvoicevi.CarNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarNumberNull() {
                this[this.tableSalesInvoicevi.CarNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeNull() {
                return this.IsNull(this.tableSalesInvoicevi.CarTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeNull() {
                this[this.tableSalesInvoicevi.CarTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsACNull() {
                return this.IsNull(this.tableSalesInvoicevi.IsACColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsACNull() {
                this[this.tableSalesInvoicevi.IsACColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableSalesInvoicevi.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableSalesInvoicevi.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableSalesInvoicevi.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableSalesInvoicevi.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateTypeNull() {
                return this.IsNull(this.tableSalesInvoicevi.RateTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateTypeNull() {
                this[this.tableSalesInvoicevi.RateTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSalesInvoicevi.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSalesInvoicevi.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceOfJourneyNull() {
                return this.IsNull(this.tableSalesInvoicevi.PlaceOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceOfJourneyNull() {
                this[this.tableSalesInvoicevi.PlaceOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKmPerDaysNull() {
                return this.IsNull(this.tableSalesInvoicevi.KmPerDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKmPerDaysNull() {
                this[this.tableSalesInvoicevi.KmPerDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatesNull() {
                return this.IsNull(this.tableSalesInvoicevi.RatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatesNull() {
                this[this.tableSalesInvoicevi.RatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableSalesInvoicevi.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableSalesInvoicevi.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvancePaymentNull() {
                return this.IsNull(this.tableSalesInvoicevi.AdvancePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvancePaymentNull() {
                this[this.tableSalesInvoicevi.AdvancePaymentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DriveDutyVoucherRow : global::System.Data.DataRow {
            
            private DriveDutyVoucherDataTable tableDriveDutyVoucher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DriveDutyVoucherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDriveDutyVoucher = ((DriveDutyVoucherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BookingId {
                get {
                    try {
                        return ((long)(this[this.tableDriveDutyVoucher.BookingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingId\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.BookingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingCode {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.BookingCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingCode\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.BookingCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableDriveDutyVoucher.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.PhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNo\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.PhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlaceOfJourney {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.PlaceOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaceOfJourney\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.PlaceOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherNo {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.VoucherNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherNo\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.VoucherNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDriveDutyVoucher.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDriveDutyVoucher.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long VendorID {
                get {
                    try {
                        return ((long)(this[this.tableDriveDutyVoucher.VendorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorID\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CarTypeID {
                get {
                    try {
                        return ((long)(this[this.tableDriveDutyVoucher.CarTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarTypeID\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.CarTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAC {
                get {
                    try {
                        return ((bool)(this[this.tableDriveDutyVoucher.IsACColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAC\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.IsACColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RateType {
                get {
                    try {
                        return ((int)(this[this.tableDriveDutyVoucher.RateTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RateType\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.RateTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RatePerKMs {
                get {
                    try {
                        return ((decimal)(this[this.tableDriveDutyVoucher.RatePerKMsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatePerKMs\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.RatePerKMsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RatePerHrs {
                get {
                    try {
                        return ((decimal)(this[this.tableDriveDutyVoucher.RatePerHrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RatePerHrs\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.RatePerHrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FixedCharge {
                get {
                    try {
                        return ((decimal)(this[this.tableDriveDutyVoucher.FixedChargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FixedCharge\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.FixedChargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VendorRate {
                get {
                    try {
                        return ((decimal)(this[this.tableDriveDutyVoucher.VendorRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorRate\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.VendorRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPayment {
                get {
                    try {
                        return ((decimal)(this[this.tableDriveDutyVoucher.TotalPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPayment\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.TotalPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvancePayment {
                get {
                    try {
                        return ((decimal)(this[this.tableDriveDutyVoucher.AdvancePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvancePayment\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.AdvancePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPerson {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.ContactPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPerson\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cartype {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.cartypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cartype\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.cartypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vehical {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.VehicalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vehical\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.VehicalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Seating {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.SeatingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Seating\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.SeatingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartingTime {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.StartingTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartingTime\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.StartingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableDriveDutyVoucher.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'DriveDutyVoucher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDriveDutyVoucher.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingIdNull() {
                return this.IsNull(this.tableDriveDutyVoucher.BookingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingIdNull() {
                this[this.tableDriveDutyVoucher.BookingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingCodeNull() {
                return this.IsNull(this.tableDriveDutyVoucher.BookingCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingCodeNull() {
                this[this.tableDriveDutyVoucher.BookingCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableDriveDutyVoucher.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableDriveDutyVoucher.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableDriveDutyVoucher.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableDriveDutyVoucher.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableDriveDutyVoucher.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableDriveDutyVoucher.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNoNull() {
                return this.IsNull(this.tableDriveDutyVoucher.PhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNoNull() {
                this[this.tableDriveDutyVoucher.PhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceOfJourneyNull() {
                return this.IsNull(this.tableDriveDutyVoucher.PlaceOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceOfJourneyNull() {
                this[this.tableDriveDutyVoucher.PlaceOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNoNull() {
                return this.IsNull(this.tableDriveDutyVoucher.VoucherNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNoNull() {
                this[this.tableDriveDutyVoucher.VoucherNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableDriveDutyVoucher.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableDriveDutyVoucher.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableDriveDutyVoucher.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableDriveDutyVoucher.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorIDNull() {
                return this.IsNull(this.tableDriveDutyVoucher.VendorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorIDNull() {
                this[this.tableDriveDutyVoucher.VendorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeIDNull() {
                return this.IsNull(this.tableDriveDutyVoucher.CarTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeIDNull() {
                this[this.tableDriveDutyVoucher.CarTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsACNull() {
                return this.IsNull(this.tableDriveDutyVoucher.IsACColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsACNull() {
                this[this.tableDriveDutyVoucher.IsACColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateTypeNull() {
                return this.IsNull(this.tableDriveDutyVoucher.RateTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateTypeNull() {
                this[this.tableDriveDutyVoucher.RateTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatePerKMsNull() {
                return this.IsNull(this.tableDriveDutyVoucher.RatePerKMsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatePerKMsNull() {
                this[this.tableDriveDutyVoucher.RatePerKMsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRatePerHrsNull() {
                return this.IsNull(this.tableDriveDutyVoucher.RatePerHrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRatePerHrsNull() {
                this[this.tableDriveDutyVoucher.RatePerHrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFixedChargeNull() {
                return this.IsNull(this.tableDriveDutyVoucher.FixedChargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFixedChargeNull() {
                this[this.tableDriveDutyVoucher.FixedChargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorRateNull() {
                return this.IsNull(this.tableDriveDutyVoucher.VendorRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorRateNull() {
                this[this.tableDriveDutyVoucher.VendorRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPaymentNull() {
                return this.IsNull(this.tableDriveDutyVoucher.TotalPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPaymentNull() {
                this[this.tableDriveDutyVoucher.TotalPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvancePaymentNull() {
                return this.IsNull(this.tableDriveDutyVoucher.AdvancePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvancePaymentNull() {
                this[this.tableDriveDutyVoucher.AdvancePaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableDriveDutyVoucher.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableDriveDutyVoucher.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableDriveDutyVoucher.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableDriveDutyVoucher.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableDriveDutyVoucher.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableDriveDutyVoucher.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableDriveDutyVoucher.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableDriveDutyVoucher.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersonNull() {
                return this.IsNull(this.tableDriveDutyVoucher.ContactPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersonNull() {
                this[this.tableDriveDutyVoucher.ContactPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableDriveDutyVoucher.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableDriveDutyVoucher.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscartypeNull() {
                return this.IsNull(this.tableDriveDutyVoucher.cartypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcartypeNull() {
                this[this.tableDriveDutyVoucher.cartypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicalNull() {
                return this.IsNull(this.tableDriveDutyVoucher.VehicalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicalNull() {
                this[this.tableDriveDutyVoucher.VehicalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeatingNull() {
                return this.IsNull(this.tableDriveDutyVoucher.SeatingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeatingNull() {
                this[this.tableDriveDutyVoucher.SeatingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableDriveDutyVoucher.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableDriveDutyVoucher.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableDriveDutyVoucher.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableDriveDutyVoucher.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartingTimeNull() {
                return this.IsNull(this.tableDriveDutyVoucher.StartingTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartingTimeNull() {
                this[this.tableDriveDutyVoucher.StartingTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableDriveDutyVoucher.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableDriveDutyVoucher.EndTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class QuotationRow : global::System.Data.DataRow {
            
            private QuotationDataTable tableQuotation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal QuotationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQuotation = ((QuotationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long QuotationId {
                get {
                    try {
                        return ((long)(this[this.tableQuotation.QuotationIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuotationId\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.QuotationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LeadId {
                get {
                    try {
                        return ((long)(this[this.tableQuotation.LeadIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadId\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.LeadIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime QDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQuotation.QDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QDate\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.QDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QPrice {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.QPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QPrice\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.QPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.AdvAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.AdvAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Subject {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.SubjectColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subject\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.SubjectColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableQuotation.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQuotation.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableQuotation.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQuotation.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableQuotation.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FYID {
                get {
                    try {
                        return ((long)(this[this.tableQuotation.FYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FYID\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.FYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableQuotation.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Refno {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.RefnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Refno\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.RefnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxName {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.TaxNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxName\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.TaxNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeadNo {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.LeadNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadNo\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.LeadNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerAddr {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.CustomerAddrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAddr\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CustomerAddrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LeadDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableQuotation.LeadDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadDate\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.LeadDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RefNo1 {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.RefNo1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefNo1\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.RefNo1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.NoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Note\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.NoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Specification {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.SpecificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Specification\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.SpecificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QuotationNo {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.QuotationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QuotationNo\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.QuotationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Reference {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.ReferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Reference\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DisCount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.DisCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisCount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.DisCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.QItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QItemDesc\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.QItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ItemNetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.ItemNetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemNetAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ItemNetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DocName {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.DocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocName\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.DocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Image {
                get {
                    try {
                        return ((byte[])(this[this.tableQuotation.ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Image\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Image1 {
                get {
                    try {
                        return ((byte[])(this[this.tableQuotation.Image1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Image1\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.Image1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.CurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Currency\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SBCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.SBCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SBCessAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.SBCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraTaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableQuotation.ExtraTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraTaxAmount\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ExtraTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraTaxType {
                get {
                    try {
                        return ((string)(this[this.tableQuotation.ExtraTaxTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraTaxType\' in table \'Quotation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQuotation.ExtraTaxTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuotationIdNull() {
                return this.IsNull(this.tableQuotation.QuotationIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuotationIdNull() {
                this[this.tableQuotation.QuotationIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadIdNull() {
                return this.IsNull(this.tableQuotation.LeadIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadIdNull() {
                this[this.tableQuotation.LeadIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQDateNull() {
                return this.IsNull(this.tableQuotation.QDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQDateNull() {
                this[this.tableQuotation.QDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQPriceNull() {
                return this.IsNull(this.tableQuotation.QPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQPriceNull() {
                this[this.tableQuotation.QPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvAmountNull() {
                return this.IsNull(this.tableQuotation.AdvAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvAmountNull() {
                this[this.tableQuotation.AdvAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableQuotation.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableQuotation.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSubjectNull() {
                return this.IsNull(this.tableQuotation.SubjectColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSubjectNull() {
                this[this.tableQuotation.SubjectColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableQuotation.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableQuotation.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableQuotation.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableQuotation.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableQuotation.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableQuotation.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableQuotation.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableQuotation.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableQuotation.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableQuotation.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableQuotation.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableQuotation.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableQuotation.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableQuotation.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableQuotation.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableQuotation.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableQuotation.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableQuotation.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableQuotation.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableQuotation.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableQuotation.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableQuotation.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableQuotation.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableQuotation.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableQuotation.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableQuotation.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableQuotation.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableQuotation.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableQuotation.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableQuotation.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableQuotation.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableQuotation.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFYIDNull() {
                return this.IsNull(this.tableQuotation.FYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFYIDNull() {
                this[this.tableQuotation.FYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableQuotation.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableQuotation.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefnoNull() {
                return this.IsNull(this.tableQuotation.RefnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefnoNull() {
                this[this.tableQuotation.RefnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tableQuotation.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tableQuotation.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableQuotation.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableQuotation.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableQuotation.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableQuotation.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableQuotation.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableQuotation.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNameNull() {
                return this.IsNull(this.tableQuotation.TaxNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNameNull() {
                this[this.tableQuotation.TaxNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadNoNull() {
                return this.IsNull(this.tableQuotation.LeadNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadNoNull() {
                this[this.tableQuotation.LeadNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableQuotation.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableQuotation.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerAddrNull() {
                return this.IsNull(this.tableQuotation.CustomerAddrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerAddrNull() {
                this[this.tableQuotation.CustomerAddrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadDateNull() {
                return this.IsNull(this.tableQuotation.LeadDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadDateNull() {
                this[this.tableQuotation.LeadDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableQuotation.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableQuotation.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableQuotation.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableQuotation.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableQuotation.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableQuotation.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableQuotation.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableQuotation.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRefNo1Null() {
                return this.IsNull(this.tableQuotation.RefNo1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRefNo1Null() {
                this[this.tableQuotation.RefNo1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableQuotation.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableQuotation.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactNameNull() {
                return this.IsNull(this.tableQuotation.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactNameNull() {
                this[this.tableQuotation.ContactNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoteNull() {
                return this.IsNull(this.tableQuotation.NoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoteNull() {
                this[this.tableQuotation.NoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecificationNull() {
                return this.IsNull(this.tableQuotation.SpecificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecificationNull() {
                this[this.tableQuotation.SpecificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuotationNoNull() {
                return this.IsNull(this.tableQuotation.QuotationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuotationNoNull() {
                this[this.tableQuotation.QuotationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableQuotation.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableQuotation.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceNull() {
                return this.IsNull(this.tableQuotation.ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceNull() {
                this[this.tableQuotation.ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisCountNull() {
                return this.IsNull(this.tableQuotation.DisCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisCountNull() {
                this[this.tableQuotation.DisCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQItemDescNull() {
                return this.IsNull(this.tableQuotation.QItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQItemDescNull() {
                this[this.tableQuotation.QItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNetAmountNull() {
                return this.IsNull(this.tableQuotation.ItemNetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNetAmountNull() {
                this[this.tableQuotation.ItemNetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocNameNull() {
                return this.IsNull(this.tableQuotation.DocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocNameNull() {
                this[this.tableQuotation.DocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableQuotation.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableQuotation.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImageNull() {
                return this.IsNull(this.tableQuotation.ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImageNull() {
                this[this.tableQuotation.ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImage1Null() {
                return this.IsNull(this.tableQuotation.Image1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImage1Null() {
                this[this.tableQuotation.Image1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNull() {
                return this.IsNull(this.tableQuotation.CurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNull() {
                this[this.tableQuotation.CurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tableQuotation.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNameNull() {
                this[this.tableQuotation.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBCessAmountNull() {
                return this.IsNull(this.tableQuotation.SBCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBCessAmountNull() {
                this[this.tableQuotation.SBCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraTaxAmountNull() {
                return this.IsNull(this.tableQuotation.ExtraTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraTaxAmountNull() {
                this[this.tableQuotation.ExtraTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraTaxTypeNull() {
                return this.IsNull(this.tableQuotation.ExtraTaxTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraTaxTypeNull() {
                this[this.tableQuotation.ExtraTaxTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AverageRow : global::System.Data.DataRow {
            
            private AverageDataTable tableAverage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AverageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAverage = ((AverageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AvgId {
                get {
                    try {
                        return ((long)(this[this.tableAverage.AvgIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AvgId\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.AvgIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CarTypeId {
                get {
                    try {
                        return ((long)(this[this.tableAverage.CarTypeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarTypeId\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.CarTypeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarType {
                get {
                    try {
                        return ((string)(this[this.tableAverage.CarTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarType\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.CarTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Liter {
                get {
                    try {
                        return ((decimal)(this[this.tableAverage.LiterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Liter\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.LiterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rs {
                get {
                    try {
                        return ((decimal)(this[this.tableAverage.RsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rs\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.RsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Full_Or_Not {
                get {
                    try {
                        return ((string)(this[this.tableAverage.Full_Or_NotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Full_Or_Not\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.Full_Or_NotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KM_Reading {
                get {
                    try {
                        return ((decimal)(this[this.tableAverage.KM_ReadingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KM_Reading\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.KM_ReadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Avg {
                get {
                    try {
                        return ((string)(this[this.tableAverage.AvgColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Avg\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.AvgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAverage.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'Average\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAverage.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAvgIdNull() {
                return this.IsNull(this.tableAverage.AvgIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAvgIdNull() {
                this[this.tableAverage.AvgIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeIdNull() {
                return this.IsNull(this.tableAverage.CarTypeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeIdNull() {
                this[this.tableAverage.CarTypeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeNull() {
                return this.IsNull(this.tableAverage.CarTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeNull() {
                this[this.tableAverage.CarTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiterNull() {
                return this.IsNull(this.tableAverage.LiterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiterNull() {
                this[this.tableAverage.LiterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRsNull() {
                return this.IsNull(this.tableAverage.RsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRsNull() {
                this[this.tableAverage.RsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFull_Or_NotNull() {
                return this.IsNull(this.tableAverage.Full_Or_NotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFull_Or_NotNull() {
                this[this.tableAverage.Full_Or_NotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKM_ReadingNull() {
                return this.IsNull(this.tableAverage.KM_ReadingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKM_ReadingNull() {
                this[this.tableAverage.KM_ReadingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAvgNull() {
                return this.IsNull(this.tableAverage.AvgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAvgNull() {
                this[this.tableAverage.AvgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableAverage.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableAverage.StartDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DepartmentRegisterRow : global::System.Data.DataRow {
            
            private DepartmentRegisterDataTable tableDepartmentRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DepartmentRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDepartmentRegister = ((DepartmentRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeptID {
                get {
                    try {
                        return ((int)(this[this.tableDepartmentRegister.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'DepartmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentRegister.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentRegister.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'DepartmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentRegister.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableDepartmentRegister.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'DepartmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentRegister.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableDepartmentRegister.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'DepartmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentRegister.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDepartmentRegister.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'DepartmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentRegister.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableDepartmentRegister.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'DepartmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentRegister.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDepartmentRegister.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'DepartmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDepartmentRegister.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tableDepartmentRegister.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptIDNull() {
                this[this.tableDepartmentRegister.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableDepartmentRegister.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableDepartmentRegister.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableDepartmentRegister.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableDepartmentRegister.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableDepartmentRegister.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableDepartmentRegister.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableDepartmentRegister.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableDepartmentRegister.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableDepartmentRegister.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableDepartmentRegister.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableDepartmentRegister.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableDepartmentRegister.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContractTypeRegisterRow : global::System.Data.DataRow {
            
            private ContractTypeRegisterDataTable tableContractTypeRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContractTypeRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContractTypeRegister = ((ContractTypeRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConTypeID {
                get {
                    try {
                        return ((int)(this[this.tableContractTypeRegister.ConTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConTypeID\' in table \'ContractTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContractTypeRegister.ConTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Con_Name {
                get {
                    try {
                        return ((string)(this[this.tableContractTypeRegister.Con_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Con_Name\' in table \'ContractTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContractTypeRegister.Con_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableContractTypeRegister.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ContractTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContractTypeRegister.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableContractTypeRegister.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'ContractTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContractTypeRegister.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContractTypeRegister.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'ContractTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContractTypeRegister.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableContractTypeRegister.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'ContractTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContractTypeRegister.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContractTypeRegister.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'ContractTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContractTypeRegister.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConTypeIDNull() {
                return this.IsNull(this.tableContractTypeRegister.ConTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConTypeIDNull() {
                this[this.tableContractTypeRegister.ConTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCon_NameNull() {
                return this.IsNull(this.tableContractTypeRegister.Con_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCon_NameNull() {
                this[this.tableContractTypeRegister.Con_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableContractTypeRegister.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableContractTypeRegister.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableContractTypeRegister.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableContractTypeRegister.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableContractTypeRegister.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableContractTypeRegister.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableContractTypeRegister.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableContractTypeRegister.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableContractTypeRegister.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableContractTypeRegister.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CallTypeRegisterRow : global::System.Data.DataRow {
            
            private CallTypeRegisterDataTable tableCallTypeRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CallTypeRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCallTypeRegister = ((CallTypeRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CallID {
                get {
                    try {
                        return ((int)(this[this.tableCallTypeRegister.CallIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallID\' in table \'CallTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallTypeRegister.CallIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Call_Name {
                get {
                    try {
                        return ((string)(this[this.tableCallTypeRegister.Call_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Name\' in table \'CallTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallTypeRegister.Call_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableCallTypeRegister.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'CallTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallTypeRegister.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableCallTypeRegister.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'CallTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallTypeRegister.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCallTypeRegister.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'CallTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallTypeRegister.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableCallTypeRegister.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'CallTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallTypeRegister.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCallTypeRegister.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'CallTypeRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCallTypeRegister.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallIDNull() {
                return this.IsNull(this.tableCallTypeRegister.CallIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallIDNull() {
                this[this.tableCallTypeRegister.CallIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCall_NameNull() {
                return this.IsNull(this.tableCallTypeRegister.Call_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCall_NameNull() {
                this[this.tableCallTypeRegister.Call_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableCallTypeRegister.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableCallTypeRegister.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableCallTypeRegister.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableCallTypeRegister.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableCallTypeRegister.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableCallTypeRegister.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableCallTypeRegister.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableCallTypeRegister.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableCallTypeRegister.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableCallTypeRegister.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ZoneRegisterRow : global::System.Data.DataRow {
            
            private ZoneRegisterDataTable tableZoneRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ZoneRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableZoneRegister = ((ZoneRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZoneID {
                get {
                    try {
                        return ((int)(this[this.tableZoneRegister.ZoneIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneID\' in table \'ZoneRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneRegister.ZoneIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone_name {
                get {
                    try {
                        return ((string)(this[this.tableZoneRegister.Zone_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone_name\' in table \'ZoneRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneRegister.Zone_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableZoneRegister.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ZoneRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneRegister.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableZoneRegister.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'ZoneRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneRegister.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZoneRegister.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'ZoneRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneRegister.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableZoneRegister.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'ZoneRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneRegister.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableZoneRegister.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'ZoneRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableZoneRegister.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneIDNull() {
                return this.IsNull(this.tableZoneRegister.ZoneIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneIDNull() {
                this[this.tableZoneRegister.ZoneIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZone_nameNull() {
                return this.IsNull(this.tableZoneRegister.Zone_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZone_nameNull() {
                this[this.tableZoneRegister.Zone_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableZoneRegister.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableZoneRegister.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableZoneRegister.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableZoneRegister.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableZoneRegister.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableZoneRegister.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableZoneRegister.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableZoneRegister.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableZoneRegister.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableZoneRegister.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductRegisterRow : global::System.Data.DataRow {
            
            private ProductRegisterDataTable tableProductRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductRegister = ((ProductRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameOfProduct {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.NameOfProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameOfProduct\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.NameOfProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrNo {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNo {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.ModelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNo\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.ModelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.BrandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brand\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartNo {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.PartNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartNo\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.PartNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UsedIn {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.UsedInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsedIn\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.UsedInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Moving {
                get {
                    try {
                        return ((string)(this[this.tableProductRegister.MovingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Moving\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.MovingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableProductRegister.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProductRegister.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableProductRegister.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableProductRegister.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProID {
                get {
                    try {
                        return ((int)(this[this.tableProductRegister.ProIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProID\' in table \'ProductRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRegister.ProIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameOfProductNull() {
                return this.IsNull(this.tableProductRegister.NameOfProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameOfProductNull() {
                this[this.tableProductRegister.NameOfProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableProductRegister.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableProductRegister.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNoNull() {
                return this.IsNull(this.tableProductRegister.ModelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNoNull() {
                this[this.tableProductRegister.ModelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableProductRegister.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableProductRegister.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNull() {
                return this.IsNull(this.tableProductRegister.BrandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNull() {
                this[this.tableProductRegister.BrandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartNoNull() {
                return this.IsNull(this.tableProductRegister.PartNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartNoNull() {
                this[this.tableProductRegister.PartNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableProductRegister.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableProductRegister.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUsedInNull() {
                return this.IsNull(this.tableProductRegister.UsedInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUsedInNull() {
                this[this.tableProductRegister.UsedInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMovingNull() {
                return this.IsNull(this.tableProductRegister.MovingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMovingNull() {
                this[this.tableProductRegister.MovingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableProductRegister.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableProductRegister.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableProductRegister.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableProductRegister.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableProductRegister.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableProductRegister.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableProductRegister.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableProductRegister.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProIDNull() {
                return this.IsNull(this.tableProductRegister.ProIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProIDNull() {
                this[this.tableProductRegister.ProIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GodownRegisterRow : global::System.Data.DataRow {
            
            private GodownRegisterDataTable tableGodownRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GodownRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGodownRegister = ((GodownRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableGodownRegister.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Godown_name {
                get {
                    try {
                        return ((string)(this[this.tableGodownRegister.Godown_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Godown_name\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.Godown_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Godown_addr {
                get {
                    try {
                        return ((string)(this[this.tableGodownRegister.Godown_addrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Godown_addr\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.Godown_addrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableGodownRegister.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGodownRegister.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableGodownRegister.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGodownRegister.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CityID {
                get {
                    try {
                        return ((int)(this[this.tableGodownRegister.CityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityID\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.CityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableGodownRegister.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableGodownRegister.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableGodownRegister.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GodownType {
                get {
                    try {
                        return ((string)(this[this.tableGodownRegister.GodownTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownType\' in table \'GodownRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGodownRegister.GodownTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableGodownRegister.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableGodownRegister.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodown_nameNull() {
                return this.IsNull(this.tableGodownRegister.Godown_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodown_nameNull() {
                this[this.tableGodownRegister.Godown_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodown_addrNull() {
                return this.IsNull(this.tableGodownRegister.Godown_addrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodown_addrNull() {
                this[this.tableGodownRegister.Godown_addrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableGodownRegister.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableGodownRegister.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableGodownRegister.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableGodownRegister.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableGodownRegister.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableGodownRegister.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableGodownRegister.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableGodownRegister.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityIDNull() {
                return this.IsNull(this.tableGodownRegister.CityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityIDNull() {
                this[this.tableGodownRegister.CityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableGodownRegister.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableGodownRegister.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableGodownRegister.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableGodownRegister.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableGodownRegister.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableGodownRegister.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownTypeNull() {
                return this.IsNull(this.tableGodownRegister.GodownTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownTypeNull() {
                this[this.tableGodownRegister.GodownTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BookingRegisterRow : global::System.Data.DataRow {
            
            private BookingRegisterDataTable tableBookingRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BookingRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBookingRegister = ((BookingRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CarTypeID {
                get {
                    try {
                        return ((long)(this[this.tableBookingRegister.CarTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarTypeID\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.CarTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarType {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.CarTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarType\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.CarTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day1 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day1\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day2 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day2\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day3 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day3\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day4 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day4\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day5 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day5\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day6 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day6\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day7 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day7\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day8 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day8\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day9 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day9\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day10 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day10\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day11 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day11\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day12 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day12\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day13 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day13\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day14 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day14\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day15 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day15\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day16 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day16\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day17 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day17\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day18 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day18\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day19 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day19\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day20 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day20\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day21 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day21\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day22 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day22\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day23 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day23\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day24 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day24\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day25 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day25\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day26 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day26\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day27 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day27\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day28 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day28\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day29 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day29\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day30 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day30\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Day31 {
                get {
                    try {
                        return ((string)(this[this.tableBookingRegister.Day31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Day31\' in table \'BookingRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingRegister.Day31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeIDNull() {
                return this.IsNull(this.tableBookingRegister.CarTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeIDNull() {
                this[this.tableBookingRegister.CarTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeNull() {
                return this.IsNull(this.tableBookingRegister.CarTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeNull() {
                this[this.tableBookingRegister.CarTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay1Null() {
                return this.IsNull(this.tableBookingRegister.Day1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay1Null() {
                this[this.tableBookingRegister.Day1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay2Null() {
                return this.IsNull(this.tableBookingRegister.Day2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay2Null() {
                this[this.tableBookingRegister.Day2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay3Null() {
                return this.IsNull(this.tableBookingRegister.Day3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay3Null() {
                this[this.tableBookingRegister.Day3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay4Null() {
                return this.IsNull(this.tableBookingRegister.Day4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay4Null() {
                this[this.tableBookingRegister.Day4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay5Null() {
                return this.IsNull(this.tableBookingRegister.Day5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay5Null() {
                this[this.tableBookingRegister.Day5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay6Null() {
                return this.IsNull(this.tableBookingRegister.Day6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay6Null() {
                this[this.tableBookingRegister.Day6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay7Null() {
                return this.IsNull(this.tableBookingRegister.Day7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay7Null() {
                this[this.tableBookingRegister.Day7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay8Null() {
                return this.IsNull(this.tableBookingRegister.Day8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay8Null() {
                this[this.tableBookingRegister.Day8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay9Null() {
                return this.IsNull(this.tableBookingRegister.Day9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay9Null() {
                this[this.tableBookingRegister.Day9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay10Null() {
                return this.IsNull(this.tableBookingRegister.Day10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay10Null() {
                this[this.tableBookingRegister.Day10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay11Null() {
                return this.IsNull(this.tableBookingRegister.Day11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay11Null() {
                this[this.tableBookingRegister.Day11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay12Null() {
                return this.IsNull(this.tableBookingRegister.Day12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay12Null() {
                this[this.tableBookingRegister.Day12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay13Null() {
                return this.IsNull(this.tableBookingRegister.Day13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay13Null() {
                this[this.tableBookingRegister.Day13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay14Null() {
                return this.IsNull(this.tableBookingRegister.Day14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay14Null() {
                this[this.tableBookingRegister.Day14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay15Null() {
                return this.IsNull(this.tableBookingRegister.Day15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay15Null() {
                this[this.tableBookingRegister.Day15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay16Null() {
                return this.IsNull(this.tableBookingRegister.Day16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay16Null() {
                this[this.tableBookingRegister.Day16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay17Null() {
                return this.IsNull(this.tableBookingRegister.Day17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay17Null() {
                this[this.tableBookingRegister.Day17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay18Null() {
                return this.IsNull(this.tableBookingRegister.Day18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay18Null() {
                this[this.tableBookingRegister.Day18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay19Null() {
                return this.IsNull(this.tableBookingRegister.Day19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay19Null() {
                this[this.tableBookingRegister.Day19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay20Null() {
                return this.IsNull(this.tableBookingRegister.Day20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay20Null() {
                this[this.tableBookingRegister.Day20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay21Null() {
                return this.IsNull(this.tableBookingRegister.Day21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay21Null() {
                this[this.tableBookingRegister.Day21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay22Null() {
                return this.IsNull(this.tableBookingRegister.Day22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay22Null() {
                this[this.tableBookingRegister.Day22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay23Null() {
                return this.IsNull(this.tableBookingRegister.Day23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay23Null() {
                this[this.tableBookingRegister.Day23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay24Null() {
                return this.IsNull(this.tableBookingRegister.Day24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay24Null() {
                this[this.tableBookingRegister.Day24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay25Null() {
                return this.IsNull(this.tableBookingRegister.Day25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay25Null() {
                this[this.tableBookingRegister.Day25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay26Null() {
                return this.IsNull(this.tableBookingRegister.Day26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay26Null() {
                this[this.tableBookingRegister.Day26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay27Null() {
                return this.IsNull(this.tableBookingRegister.Day27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay27Null() {
                this[this.tableBookingRegister.Day27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay28Null() {
                return this.IsNull(this.tableBookingRegister.Day28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay28Null() {
                this[this.tableBookingRegister.Day28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay29Null() {
                return this.IsNull(this.tableBookingRegister.Day29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay29Null() {
                this[this.tableBookingRegister.Day29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay30Null() {
                return this.IsNull(this.tableBookingRegister.Day30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay30Null() {
                this[this.tableBookingRegister.Day30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDay31Null() {
                return this.IsNull(this.tableBookingRegister.Day31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDay31Null() {
                this[this.tableBookingRegister.Day31Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BookingRegRow : global::System.Data.DataRow {
            
            private BookingRegDataTable tableBookingReg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BookingRegRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBookingReg = ((BookingRegDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long BookingId {
                get {
                    try {
                        return ((long)(this[this.tableBookingReg.BookingIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingId\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.BookingIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BookingCode {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.BookingCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BookingCode\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.BookingCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PhoneNo {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.PhoneNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhoneNo\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.PhoneNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlaceOfJourney {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.PlaceOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaceOfJourney\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.PlaceOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBookingReg.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBookingReg.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vendorname {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.VendornameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vendorname\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.VendornameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CarType {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.CarTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CarType\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.CarTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Vehical {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.VehicalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vehical\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.VehicalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartingTime {
                get {
                    try {
                        return ((string)(this[this.tableBookingReg.StartingTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartingTime\' in table \'BookingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBookingReg.StartingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingIdNull() {
                return this.IsNull(this.tableBookingReg.BookingIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingIdNull() {
                this[this.tableBookingReg.BookingIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBookingCodeNull() {
                return this.IsNull(this.tableBookingReg.BookingCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBookingCodeNull() {
                this[this.tableBookingReg.BookingCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableBookingReg.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableBookingReg.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableBookingReg.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableBookingReg.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNoNull() {
                return this.IsNull(this.tableBookingReg.PhoneNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNoNull() {
                this[this.tableBookingReg.PhoneNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceOfJourneyNull() {
                return this.IsNull(this.tableBookingReg.PlaceOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceOfJourneyNull() {
                this[this.tableBookingReg.PlaceOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableBookingReg.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableBookingReg.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableBookingReg.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableBookingReg.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendornameNull() {
                return this.IsNull(this.tableBookingReg.VendornameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendornameNull() {
                this[this.tableBookingReg.VendornameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCarTypeNull() {
                return this.IsNull(this.tableBookingReg.CarTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCarTypeNull() {
                this[this.tableBookingReg.CarTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicalNull() {
                return this.IsNull(this.tableBookingReg.VehicalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicalNull() {
                this[this.tableBookingReg.VehicalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartingTimeNull() {
                return this.IsNull(this.tableBookingReg.StartingTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartingTimeNull() {
                this[this.tableBookingReg.StartingTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VendorRegRow : global::System.Data.DataRow {
            
            private VendorRegDataTable tableVendorReg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VendorRegRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVendorReg = ((VendorRegDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PaymentID {
                get {
                    try {
                        return ((long)(this[this.tableVendorReg.PaymentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentID\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.PaymentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentCode {
                get {
                    try {
                        return ((string)(this[this.tableVendorReg.PaymentCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentCode\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.PaymentCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PaymentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVendorReg.PaymentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentDate\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.PaymentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long VendorID {
                get {
                    try {
                        return ((long)(this[this.tableVendorReg.VendorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorID\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCode {
                get {
                    try {
                        return ((string)(this[this.tableVendorReg.VendorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCode\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.VendorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableVendorReg.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableVendorReg.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableVendorReg.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addrs {
                get {
                    try {
                        return ((string)(this[this.tableVendorReg.AddrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addrs\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.AddrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableVendorReg.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'VendorReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorReg.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentIDNull() {
                return this.IsNull(this.tableVendorReg.PaymentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentIDNull() {
                this[this.tableVendorReg.PaymentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentCodeNull() {
                return this.IsNull(this.tableVendorReg.PaymentCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentCodeNull() {
                this[this.tableVendorReg.PaymentCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentDateNull() {
                return this.IsNull(this.tableVendorReg.PaymentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentDateNull() {
                this[this.tableVendorReg.PaymentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorIDNull() {
                return this.IsNull(this.tableVendorReg.VendorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorIDNull() {
                this[this.tableVendorReg.VendorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tableVendorReg.VendorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCodeNull() {
                this[this.tableVendorReg.VendorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableVendorReg.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableVendorReg.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableVendorReg.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableVendorReg.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableVendorReg.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableVendorReg.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrsNull() {
                return this.IsNull(this.tableVendorReg.AddrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrsNull() {
                this[this.tableVendorReg.AddrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableVendorReg.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableVendorReg.PhoneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerRegRow : global::System.Data.DataRow {
            
            private CustomerRegDataTable tableCustomerReg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerRegRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerReg = ((CustomerRegDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ReceiptID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerReg.ReceiptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptID\' in table \'CustomerReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReg.ReceiptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReg.ReceiptCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptCode\' in table \'CustomerReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReg.ReceiptCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerReg.ReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptDate\' in table \'CustomerReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReg.ReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReg.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'CustomerReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReg.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerReg.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'CustomerReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReg.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReg.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'CustomerReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReg.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addrs {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReg.AddrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addrs\' in table \'CustomerReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReg.AddrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableCustomerReg.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'CustomerReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerReg.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptIDNull() {
                return this.IsNull(this.tableCustomerReg.ReceiptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptIDNull() {
                this[this.tableCustomerReg.ReceiptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptCodeNull() {
                return this.IsNull(this.tableCustomerReg.ReceiptCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptCodeNull() {
                this[this.tableCustomerReg.ReceiptCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptDateNull() {
                return this.IsNull(this.tableCustomerReg.ReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptDateNull() {
                this[this.tableCustomerReg.ReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomerReg.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomerReg.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableCustomerReg.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableCustomerReg.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableCustomerReg.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableCustomerReg.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrsNull() {
                return this.IsNull(this.tableCustomerReg.AddrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrsNull() {
                this[this.tableCustomerReg.AddrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableCustomerReg.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableCustomerReg.PhoneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerPendingRegRow : global::System.Data.DataRow {
            
            private CustomerPendingRegDataTable tableCustomerPendingReg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPendingRegRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerPendingReg = ((CustomerPendingRegDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SaleId {
                get {
                    try {
                        return ((long)(this[this.tableCustomerPendingReg.SaleIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleId\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.SaleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPendingReg.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPendingReg.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfJourney {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerPendingReg.DateOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJourney\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.DateOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPayment {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPendingReg.TotalPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPayment\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.TotalPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CustomerPaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPendingReg.CustomerPaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerPaidAmount\' in table \'CustomerPendingReg\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.CustomerPaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Payment {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPendingReg.PaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.PaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPendingReg.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPendingReg.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlaceOfJourney {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPendingReg.PlaceOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlaceOfJourney\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.PlaceOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerPendingReg.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPendingReg.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPendingReg.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPerson {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPendingReg.ContactPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPerson\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvancePayment {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPendingReg.AdvancePaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvancePayment\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.AdvancePaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AdvanceToDriver {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPendingReg.AdvanceToDriverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvanceToDriver\' in table \'CustomerPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPendingReg.AdvanceToDriverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIdNull() {
                return this.IsNull(this.tableCustomerPendingReg.SaleIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIdNull() {
                this[this.tableCustomerPendingReg.SaleIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomerPendingReg.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomerPendingReg.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableCustomerPendingReg.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableCustomerPendingReg.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfJourneyNull() {
                return this.IsNull(this.tableCustomerPendingReg.DateOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfJourneyNull() {
                this[this.tableCustomerPendingReg.DateOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPaymentNull() {
                return this.IsNull(this.tableCustomerPendingReg.TotalPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPaymentNull() {
                this[this.tableCustomerPendingReg.TotalPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerPaidAmountNull() {
                return this.IsNull(this.tableCustomerPendingReg.CustomerPaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerPaidAmountNull() {
                this[this.tableCustomerPendingReg.CustomerPaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentNull() {
                return this.IsNull(this.tableCustomerPendingReg.PaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentNull() {
                this[this.tableCustomerPendingReg.PaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableCustomerPendingReg.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableCustomerPendingReg.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableCustomerPendingReg.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableCustomerPendingReg.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlaceOfJourneyNull() {
                return this.IsNull(this.tableCustomerPendingReg.PlaceOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlaceOfJourneyNull() {
                this[this.tableCustomerPendingReg.PlaceOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableCustomerPendingReg.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableCustomerPendingReg.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableCustomerPendingReg.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableCustomerPendingReg.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableCustomerPendingReg.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableCustomerPendingReg.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersonNull() {
                return this.IsNull(this.tableCustomerPendingReg.ContactPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersonNull() {
                this[this.tableCustomerPendingReg.ContactPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvancePaymentNull() {
                return this.IsNull(this.tableCustomerPendingReg.AdvancePaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvancePaymentNull() {
                this[this.tableCustomerPendingReg.AdvancePaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdvanceToDriverNull() {
                return this.IsNull(this.tableCustomerPendingReg.AdvanceToDriverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdvanceToDriverNull() {
                this[this.tableCustomerPendingReg.AdvanceToDriverColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VendorPendingRegRow : global::System.Data.DataRow {
            
            private VendorPendingRegDataTable tableVendorPendingReg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VendorPendingRegRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVendorPendingReg = ((VendorPendingRegDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SaleId {
                get {
                    try {
                        return ((long)(this[this.tableVendorPendingReg.SaleIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SaleId\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.SaleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCode {
                get {
                    try {
                        return ((string)(this[this.tableVendorPendingReg.VendorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCode\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.VendorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableVendorPendingReg.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOfJourney {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVendorPendingReg.DateOfJourneyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOfJourney\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.DateOfJourneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableVendorPendingReg.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPayment {
                get {
                    try {
                        return ((decimal)(this[this.tableVendorPendingReg.TotalPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPayment\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.TotalPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VendorPaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableVendorPendingReg.VendorPaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorPaidAmount\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.VendorPaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PendingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableVendorPendingReg.PendingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PendingAmount\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.PendingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EngagedFor {
                get {
                    try {
                        return ((string)(this[this.tableVendorPendingReg.EngagedForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EngagedFor\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.EngagedForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long VendorID {
                get {
                    try {
                        return ((long)(this[this.tableVendorPendingReg.VendorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorID\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Addrs {
                get {
                    try {
                        return ((string)(this[this.tableVendorPendingReg.AddrsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Addrs\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.AddrsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableVendorPendingReg.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'VendorPendingReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVendorPendingReg.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSaleIdNull() {
                return this.IsNull(this.tableVendorPendingReg.SaleIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSaleIdNull() {
                this[this.tableVendorPendingReg.SaleIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tableVendorPendingReg.VendorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCodeNull() {
                this[this.tableVendorPendingReg.VendorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableVendorPendingReg.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableVendorPendingReg.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOfJourneyNull() {
                return this.IsNull(this.tableVendorPendingReg.DateOfJourneyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOfJourneyNull() {
                this[this.tableVendorPendingReg.DateOfJourneyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableVendorPendingReg.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableVendorPendingReg.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPaymentNull() {
                return this.IsNull(this.tableVendorPendingReg.TotalPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPaymentNull() {
                this[this.tableVendorPendingReg.TotalPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorPaidAmountNull() {
                return this.IsNull(this.tableVendorPendingReg.VendorPaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorPaidAmountNull() {
                this[this.tableVendorPendingReg.VendorPaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPendingAmountNull() {
                return this.IsNull(this.tableVendorPendingReg.PendingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPendingAmountNull() {
                this[this.tableVendorPendingReg.PendingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEngagedForNull() {
                return this.IsNull(this.tableVendorPendingReg.EngagedForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEngagedForNull() {
                this[this.tableVendorPendingReg.EngagedForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorIDNull() {
                return this.IsNull(this.tableVendorPendingReg.VendorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorIDNull() {
                this[this.tableVendorPendingReg.VendorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddrsNull() {
                return this.IsNull(this.tableVendorPendingReg.AddrsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddrsNull() {
                this[this.tableVendorPendingReg.AddrsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableVendorPendingReg.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableVendorPendingReg.PhoneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ServiceRegisterRow : global::System.Data.DataRow {
            
            private ServiceRegisterDataTable tableServiceRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServiceRegister = ((ServiceRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableServiceRegister.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceRegister.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNumber {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.ModelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNumber\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ModelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Problem {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.ProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Problem\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobComputed {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.JobComputedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobComputed\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.JobComputedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherRequirement {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.OtherRequirementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherRequirement\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.OtherRequirementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Charges {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.ChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Charges\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableServiceRegister.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceRegister.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableServiceRegister.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceRegister.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableServiceRegister.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FYID {
                get {
                    try {
                        return ((long)(this[this.tableServiceRegister.FYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FYID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.FYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableServiceRegister.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableServiceRegister.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeptID {
                get {
                    try {
                        return ((int)(this[this.tableServiceRegister.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConTypeID {
                get {
                    try {
                        return ((int)(this[this.tableServiceRegister.ConTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConTypeID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ConTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProID {
                get {
                    try {
                        return ((int)(this[this.tableServiceRegister.ProIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ProIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZoneID {
                get {
                    try {
                        return ((int)(this[this.tableServiceRegister.ZoneIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ZoneIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceRegister.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceRegister.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WarrantyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceRegister.WarrantyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarrantyDate\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.WarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TakenBy {
                get {
                    try {
                        return ((long)(this[this.tableServiceRegister.TakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenBy\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.TakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CallID {
                get {
                    try {
                        return ((int)(this[this.tableServiceRegister.CallIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallID\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.CallIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalHours {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.TotalHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHours\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.TotalHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Call_Status {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.Call_StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Status\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.Call_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Servicebill {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.ServicebillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Servicebill\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ServicebillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactpersonName {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.ContactpersonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactpersonName\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ContactpersonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartTime {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AttendedBy {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.AttendedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendedBy\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.AttendedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Con_Name {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.Con_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Con_Name\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.Con_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone_name {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.Zone_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone_name\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.Zone_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Call_Name {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.Call_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Name\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.Call_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceRegister.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CounterReading {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceRegister.CounterReadingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CounterReading\' in table \'ServiceRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceRegister.CounterReadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableServiceRegister.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableServiceRegister.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableServiceRegister.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableServiceRegister.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableServiceRegister.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableServiceRegister.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableServiceRegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableServiceRegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableServiceRegister.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableServiceRegister.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableServiceRegister.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableServiceRegister.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNumberNull() {
                return this.IsNull(this.tableServiceRegister.ModelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNumberNull() {
                this[this.tableServiceRegister.ModelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemNull() {
                return this.IsNull(this.tableServiceRegister.ProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemNull() {
                this[this.tableServiceRegister.ProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobComputedNull() {
                return this.IsNull(this.tableServiceRegister.JobComputedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobComputedNull() {
                this[this.tableServiceRegister.JobComputedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableServiceRegister.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableServiceRegister.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherRequirementNull() {
                return this.IsNull(this.tableServiceRegister.OtherRequirementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherRequirementNull() {
                this[this.tableServiceRegister.OtherRequirementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargesNull() {
                return this.IsNull(this.tableServiceRegister.ChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargesNull() {
                this[this.tableServiceRegister.ChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableServiceRegister.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableServiceRegister.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableServiceRegister.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableServiceRegister.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableServiceRegister.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableServiceRegister.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableServiceRegister.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableServiceRegister.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableServiceRegister.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableServiceRegister.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableServiceRegister.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableServiceRegister.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableServiceRegister.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableServiceRegister.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableServiceRegister.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableServiceRegister.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableServiceRegister.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableServiceRegister.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableServiceRegister.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableServiceRegister.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableServiceRegister.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableServiceRegister.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableServiceRegister.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableServiceRegister.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableServiceRegister.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableServiceRegister.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableServiceRegister.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableServiceRegister.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableServiceRegister.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableServiceRegister.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableServiceRegister.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableServiceRegister.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableServiceRegister.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableServiceRegister.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFYIDNull() {
                return this.IsNull(this.tableServiceRegister.FYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFYIDNull() {
                this[this.tableServiceRegister.FYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableServiceRegister.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableServiceRegister.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableServiceRegister.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableServiceRegister.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tableServiceRegister.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptIDNull() {
                this[this.tableServiceRegister.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConTypeIDNull() {
                return this.IsNull(this.tableServiceRegister.ConTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConTypeIDNull() {
                this[this.tableServiceRegister.ConTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProIDNull() {
                return this.IsNull(this.tableServiceRegister.ProIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProIDNull() {
                this[this.tableServiceRegister.ProIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneIDNull() {
                return this.IsNull(this.tableServiceRegister.ZoneIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneIDNull() {
                this[this.tableServiceRegister.ZoneIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableServiceRegister.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableServiceRegister.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableServiceRegister.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableServiceRegister.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarrantyDateNull() {
                return this.IsNull(this.tableServiceRegister.WarrantyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarrantyDateNull() {
                this[this.tableServiceRegister.WarrantyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTakenByNull() {
                return this.IsNull(this.tableServiceRegister.TakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTakenByNull() {
                this[this.tableServiceRegister.TakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallIDNull() {
                return this.IsNull(this.tableServiceRegister.CallIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallIDNull() {
                this[this.tableServiceRegister.CallIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalHoursNull() {
                return this.IsNull(this.tableServiceRegister.TotalHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalHoursNull() {
                this[this.tableServiceRegister.TotalHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCall_StatusNull() {
                return this.IsNull(this.tableServiceRegister.Call_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCall_StatusNull() {
                this[this.tableServiceRegister.Call_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableServiceRegister.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableServiceRegister.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServicebillNull() {
                return this.IsNull(this.tableServiceRegister.ServicebillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServicebillNull() {
                this[this.tableServiceRegister.ServicebillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactpersonNameNull() {
                return this.IsNull(this.tableServiceRegister.ContactpersonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactpersonNameNull() {
                this[this.tableServiceRegister.ContactpersonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableServiceRegister.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableServiceRegister.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableServiceRegister.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableServiceRegister.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttendedByNull() {
                return this.IsNull(this.tableServiceRegister.AttendedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttendedByNull() {
                this[this.tableServiceRegister.AttendedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableServiceRegister.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableServiceRegister.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCon_NameNull() {
                return this.IsNull(this.tableServiceRegister.Con_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCon_NameNull() {
                this[this.tableServiceRegister.Con_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZone_nameNull() {
                return this.IsNull(this.tableServiceRegister.Zone_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZone_nameNull() {
                this[this.tableServiceRegister.Zone_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCall_NameNull() {
                return this.IsNull(this.tableServiceRegister.Call_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCall_NameNull() {
                this[this.tableServiceRegister.Call_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableServiceRegister.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableServiceRegister.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableServiceRegister.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableServiceRegister.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCounterReadingNull() {
                return this.IsNull(this.tableServiceRegister.CounterReadingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCounterReadingNull() {
                this[this.tableServiceRegister.CounterReadingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Service_Item_ListRow : global::System.Data.DataRow {
            
            private Service_Item_ListDataTable tableService_Item_List;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Service_Item_ListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableService_Item_List = ((Service_Item_ListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableService_Item_List.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'Service_Item_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Item_List.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableService_Item_List.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'Service_Item_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Item_List.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_NAME {
                get {
                    try {
                        return ((string)(this[this.tableService_Item_List.ITEM_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_NAME\' in table \'Service_Item_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Item_List.ITEM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Qty {
                get {
                    try {
                        return ((string)(this[this.tableService_Item_List.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Service_Item_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Item_List.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableService_Item_List.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'Service_Item_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Item_List.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Rate {
                get {
                    try {
                        return ((string)(this[this.tableService_Item_List.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'Service_Item_List\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Item_List.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableService_Item_List.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableService_Item_List.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tableService_Item_List.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tableService_Item_List.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_NAMENull() {
                return this.IsNull(this.tableService_Item_List.ITEM_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_NAMENull() {
                this[this.tableService_Item_List.ITEM_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableService_Item_List.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableService_Item_List.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableService_Item_List.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableService_Item_List.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableService_Item_List.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableService_Item_List.RateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InvoiceAllRow : global::System.Data.DataRow {
            
            private InvoiceAllDataTable tableInvoiceAll;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoiceAllRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoiceAll = ((InvoiceAllDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableInvoiceAll.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoiceAll.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNumber {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.ModelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNumber\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ModelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Problem {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.ProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Problem\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobComputed {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.JobComputedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobComputed\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.JobComputedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherRequirement {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.OtherRequirementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherRequirement\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.OtherRequirementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Charges {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.ChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Charges\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableInvoiceAll.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoiceAll.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableInvoiceAll.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoiceAll.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableInvoiceAll.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoiceAll.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FYID {
                get {
                    try {
                        return ((long)(this[this.tableInvoiceAll.FYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FYID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.FYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceAll.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableInvoiceAll.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeptID {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceAll.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConTypeID {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceAll.ConTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConTypeID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ConTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProID {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceAll.ProIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ProIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZoneID {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceAll.ZoneIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ZoneIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoiceAll.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoiceAll.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WarrantyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoiceAll.WarrantyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarrantyDate\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.WarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TakenBy {
                get {
                    try {
                        return ((long)(this[this.tableInvoiceAll.TakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenBy\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.TakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CallID {
                get {
                    try {
                        return ((int)(this[this.tableInvoiceAll.CallIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallID\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.CallIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalHours {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.TotalHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHours\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.TotalHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Call_Status {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.Call_StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Status\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.Call_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Servicebill {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.ServicebillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Servicebill\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ServicebillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactpersonName {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.ContactpersonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactpersonName\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ContactpersonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartTime {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AttendedBy {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.AttendedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendedBy\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.AttendedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Con_Name {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.Con_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Con_Name\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.Con_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone_name {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.Zone_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone_name\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.Zone_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Call_Name {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.Call_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Name\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.Call_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CounterReading {
                get {
                    try {
                        return ((string)(this[this.tableInvoiceAll.CounterReadingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CounterReading\' in table \'InvoiceAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoiceAll.CounterReadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableInvoiceAll.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableInvoiceAll.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableInvoiceAll.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableInvoiceAll.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableInvoiceAll.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableInvoiceAll.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableInvoiceAll.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableInvoiceAll.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableInvoiceAll.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableInvoiceAll.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableInvoiceAll.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableInvoiceAll.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNumberNull() {
                return this.IsNull(this.tableInvoiceAll.ModelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNumberNull() {
                this[this.tableInvoiceAll.ModelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemNull() {
                return this.IsNull(this.tableInvoiceAll.ProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemNull() {
                this[this.tableInvoiceAll.ProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobComputedNull() {
                return this.IsNull(this.tableInvoiceAll.JobComputedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobComputedNull() {
                this[this.tableInvoiceAll.JobComputedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableInvoiceAll.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableInvoiceAll.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherRequirementNull() {
                return this.IsNull(this.tableInvoiceAll.OtherRequirementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherRequirementNull() {
                this[this.tableInvoiceAll.OtherRequirementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargesNull() {
                return this.IsNull(this.tableInvoiceAll.ChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargesNull() {
                this[this.tableInvoiceAll.ChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableInvoiceAll.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableInvoiceAll.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableInvoiceAll.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableInvoiceAll.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableInvoiceAll.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableInvoiceAll.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableInvoiceAll.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableInvoiceAll.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableInvoiceAll.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableInvoiceAll.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableInvoiceAll.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableInvoiceAll.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableInvoiceAll.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableInvoiceAll.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableInvoiceAll.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableInvoiceAll.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableInvoiceAll.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableInvoiceAll.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableInvoiceAll.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableInvoiceAll.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableInvoiceAll.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableInvoiceAll.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableInvoiceAll.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableInvoiceAll.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableInvoiceAll.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableInvoiceAll.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableInvoiceAll.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableInvoiceAll.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableInvoiceAll.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableInvoiceAll.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableInvoiceAll.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableInvoiceAll.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableInvoiceAll.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableInvoiceAll.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFYIDNull() {
                return this.IsNull(this.tableInvoiceAll.FYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFYIDNull() {
                this[this.tableInvoiceAll.FYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableInvoiceAll.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableInvoiceAll.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableInvoiceAll.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableInvoiceAll.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tableInvoiceAll.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptIDNull() {
                this[this.tableInvoiceAll.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConTypeIDNull() {
                return this.IsNull(this.tableInvoiceAll.ConTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConTypeIDNull() {
                this[this.tableInvoiceAll.ConTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProIDNull() {
                return this.IsNull(this.tableInvoiceAll.ProIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProIDNull() {
                this[this.tableInvoiceAll.ProIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneIDNull() {
                return this.IsNull(this.tableInvoiceAll.ZoneIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneIDNull() {
                this[this.tableInvoiceAll.ZoneIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableInvoiceAll.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableInvoiceAll.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableInvoiceAll.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableInvoiceAll.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarrantyDateNull() {
                return this.IsNull(this.tableInvoiceAll.WarrantyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarrantyDateNull() {
                this[this.tableInvoiceAll.WarrantyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTakenByNull() {
                return this.IsNull(this.tableInvoiceAll.TakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTakenByNull() {
                this[this.tableInvoiceAll.TakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallIDNull() {
                return this.IsNull(this.tableInvoiceAll.CallIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallIDNull() {
                this[this.tableInvoiceAll.CallIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalHoursNull() {
                return this.IsNull(this.tableInvoiceAll.TotalHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalHoursNull() {
                this[this.tableInvoiceAll.TotalHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCall_StatusNull() {
                return this.IsNull(this.tableInvoiceAll.Call_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCall_StatusNull() {
                this[this.tableInvoiceAll.Call_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableInvoiceAll.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableInvoiceAll.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServicebillNull() {
                return this.IsNull(this.tableInvoiceAll.ServicebillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServicebillNull() {
                this[this.tableInvoiceAll.ServicebillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactpersonNameNull() {
                return this.IsNull(this.tableInvoiceAll.ContactpersonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactpersonNameNull() {
                this[this.tableInvoiceAll.ContactpersonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableInvoiceAll.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableInvoiceAll.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableInvoiceAll.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableInvoiceAll.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttendedByNull() {
                return this.IsNull(this.tableInvoiceAll.AttendedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttendedByNull() {
                this[this.tableInvoiceAll.AttendedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableInvoiceAll.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableInvoiceAll.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCon_NameNull() {
                return this.IsNull(this.tableInvoiceAll.Con_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCon_NameNull() {
                this[this.tableInvoiceAll.Con_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZone_nameNull() {
                return this.IsNull(this.tableInvoiceAll.Zone_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZone_nameNull() {
                this[this.tableInvoiceAll.Zone_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCall_NameNull() {
                return this.IsNull(this.tableInvoiceAll.Call_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCall_NameNull() {
                this[this.tableInvoiceAll.Call_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableInvoiceAll.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableInvoiceAll.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableInvoiceAll.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableInvoiceAll.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCounterReadingNull() {
                return this.IsNull(this.tableInvoiceAll.CounterReadingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCounterReadingNull() {
                this[this.tableInvoiceAll.CounterReadingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InvoicePageRow : global::System.Data.DataRow {
            
            private InvoicePageDataTable tableInvoicePage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InvoicePageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoicePage = ((InvoicePageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ClosingCounter {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoicePage.ClosingCounterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClosingCounter\' in table \'InvoicePage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoicePage.ClosingCounterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OpeningCounter {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoicePage.OpeningCounterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpeningCounter\' in table \'InvoicePage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoicePage.OpeningCounterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalCopies {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoicePage.TotalCopiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalCopies\' in table \'InvoicePage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoicePage.TotalCopiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MinCopies {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoicePage.MinCopiesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MinCopies\' in table \'InvoicePage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoicePage.MinCopiesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoicePage.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'InvoicePage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoicePage.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoicePage.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'InvoicePage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoicePage.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PageDesc {
                get {
                    try {
                        return ((string)(this[this.tableInvoicePage.PageDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PageDesc\' in table \'InvoicePage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoicePage.PageDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableInvoicePage.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'InvoicePage\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoicePage.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClosingCounterNull() {
                return this.IsNull(this.tableInvoicePage.ClosingCounterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClosingCounterNull() {
                this[this.tableInvoicePage.ClosingCounterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOpeningCounterNull() {
                return this.IsNull(this.tableInvoicePage.OpeningCounterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOpeningCounterNull() {
                this[this.tableInvoicePage.OpeningCounterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalCopiesNull() {
                return this.IsNull(this.tableInvoicePage.TotalCopiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalCopiesNull() {
                this[this.tableInvoicePage.TotalCopiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMinCopiesNull() {
                return this.IsNull(this.tableInvoicePage.MinCopiesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMinCopiesNull() {
                this[this.tableInvoicePage.MinCopiesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableInvoicePage.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableInvoicePage.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableInvoicePage.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableInvoicePage.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPageDescNull() {
                return this.IsNull(this.tableInvoicePage.PageDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPageDescNull() {
                this[this.tableInvoicePage.PageDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableInvoicePage.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableInvoicePage.ServiceIdColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesInvoice_NewRow : global::System.Data.DataRow {
            
            private SalesInvoice_NewDataTable tableSalesInvoice_New;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoice_NewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesInvoice_New = ((SalesInvoice_NewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_New.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoice_New.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNumber {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.ModelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNumber\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ModelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Problem {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.ProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Problem\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobComputed {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.JobComputedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobComputed\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.JobComputedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherRequirement {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.OtherRequirementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherRequirement\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.OtherRequirementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Charges {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.ChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Charges\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_New.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoice_New.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_New.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoice_New.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_New.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_New.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FYID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_New.FYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FYID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.FYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoice_New.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_New.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeptID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoice_New.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConTypeID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoice_New.ConTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConTypeID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ConTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoice_New.ProIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ProIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZoneID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoice_New.ZoneIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ZoneIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoice_New.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoice_New.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WarrantyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSalesInvoice_New.WarrantyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarrantyDate\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.WarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TakenBy {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_New.TakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenBy\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.TakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CallID {
                get {
                    try {
                        return ((int)(this[this.tableSalesInvoice_New.CallIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallID\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.CallIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalHours {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.TotalHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHours\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.TotalHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Call_Status {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.Call_StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Status\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.Call_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Servicebill {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.ServicebillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Servicebill\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ServicebillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactpersonName {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.ContactpersonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactpersonName\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ContactpersonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartTime {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AttendedBy {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.AttendedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendedBy\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.AttendedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Con_Name {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.Con_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Con_Name\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.Con_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone_name {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.Zone_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone_name\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.Zone_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Call_Name {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.Call_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Name\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.Call_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrNo {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CounterReading {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_New.CounterReadingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CounterReading\' in table \'SalesInvoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_New.CounterReadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableSalesInvoice_New.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableSalesInvoice_New.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableSalesInvoice_New.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableSalesInvoice_New.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableSalesInvoice_New.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableSalesInvoice_New.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableSalesInvoice_New.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableSalesInvoice_New.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableSalesInvoice_New.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableSalesInvoice_New.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableSalesInvoice_New.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableSalesInvoice_New.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNumberNull() {
                return this.IsNull(this.tableSalesInvoice_New.ModelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNumberNull() {
                this[this.tableSalesInvoice_New.ModelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemNull() {
                return this.IsNull(this.tableSalesInvoice_New.ProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemNull() {
                this[this.tableSalesInvoice_New.ProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobComputedNull() {
                return this.IsNull(this.tableSalesInvoice_New.JobComputedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobComputedNull() {
                this[this.tableSalesInvoice_New.JobComputedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableSalesInvoice_New.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableSalesInvoice_New.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherRequirementNull() {
                return this.IsNull(this.tableSalesInvoice_New.OtherRequirementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherRequirementNull() {
                this[this.tableSalesInvoice_New.OtherRequirementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargesNull() {
                return this.IsNull(this.tableSalesInvoice_New.ChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargesNull() {
                this[this.tableSalesInvoice_New.ChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableSalesInvoice_New.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableSalesInvoice_New.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableSalesInvoice_New.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableSalesInvoice_New.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableSalesInvoice_New.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableSalesInvoice_New.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableSalesInvoice_New.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableSalesInvoice_New.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableSalesInvoice_New.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableSalesInvoice_New.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableSalesInvoice_New.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableSalesInvoice_New.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableSalesInvoice_New.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableSalesInvoice_New.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableSalesInvoice_New.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableSalesInvoice_New.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableSalesInvoice_New.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableSalesInvoice_New.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableSalesInvoice_New.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableSalesInvoice_New.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableSalesInvoice_New.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableSalesInvoice_New.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableSalesInvoice_New.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableSalesInvoice_New.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFYIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.FYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFYIDNull() {
                this[this.tableSalesInvoice_New.FYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableSalesInvoice_New.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableSalesInvoice_New.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptIDNull() {
                this[this.tableSalesInvoice_New.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConTypeIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.ConTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConTypeIDNull() {
                this[this.tableSalesInvoice_New.ConTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.ProIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProIDNull() {
                this[this.tableSalesInvoice_New.ProIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.ZoneIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneIDNull() {
                this[this.tableSalesInvoice_New.ZoneIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableSalesInvoice_New.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableSalesInvoice_New.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableSalesInvoice_New.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableSalesInvoice_New.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarrantyDateNull() {
                return this.IsNull(this.tableSalesInvoice_New.WarrantyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarrantyDateNull() {
                this[this.tableSalesInvoice_New.WarrantyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTakenByNull() {
                return this.IsNull(this.tableSalesInvoice_New.TakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTakenByNull() {
                this[this.tableSalesInvoice_New.TakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallIDNull() {
                return this.IsNull(this.tableSalesInvoice_New.CallIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallIDNull() {
                this[this.tableSalesInvoice_New.CallIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalHoursNull() {
                return this.IsNull(this.tableSalesInvoice_New.TotalHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalHoursNull() {
                this[this.tableSalesInvoice_New.TotalHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCall_StatusNull() {
                return this.IsNull(this.tableSalesInvoice_New.Call_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCall_StatusNull() {
                this[this.tableSalesInvoice_New.Call_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableSalesInvoice_New.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableSalesInvoice_New.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServicebillNull() {
                return this.IsNull(this.tableSalesInvoice_New.ServicebillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServicebillNull() {
                this[this.tableSalesInvoice_New.ServicebillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactpersonNameNull() {
                return this.IsNull(this.tableSalesInvoice_New.ContactpersonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactpersonNameNull() {
                this[this.tableSalesInvoice_New.ContactpersonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableSalesInvoice_New.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableSalesInvoice_New.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableSalesInvoice_New.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableSalesInvoice_New.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttendedByNull() {
                return this.IsNull(this.tableSalesInvoice_New.AttendedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttendedByNull() {
                this[this.tableSalesInvoice_New.AttendedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableSalesInvoice_New.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableSalesInvoice_New.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCon_NameNull() {
                return this.IsNull(this.tableSalesInvoice_New.Con_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCon_NameNull() {
                this[this.tableSalesInvoice_New.Con_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZone_nameNull() {
                return this.IsNull(this.tableSalesInvoice_New.Zone_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZone_nameNull() {
                this[this.tableSalesInvoice_New.Zone_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCall_NameNull() {
                return this.IsNull(this.tableSalesInvoice_New.Call_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCall_NameNull() {
                this[this.tableSalesInvoice_New.Call_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableSalesInvoice_New.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableSalesInvoice_New.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableSalesInvoice_New.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableSalesInvoice_New.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCounterReadingNull() {
                return this.IsNull(this.tableSalesInvoice_New.CounterReadingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCounterReadingNull() {
                this[this.tableSalesInvoice_New.CounterReadingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesInvoice_PageRow : global::System.Data.DataRow {
            
            private SalesInvoice_PageDataTable tableSalesInvoice_Page;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesInvoice_PageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesInvoice_Page = ((SalesInvoice_PageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_Page.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'SalesInvoice_Page\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_Page.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PageDesc {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_Page.PageDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PageDesc\' in table \'SalesInvoice_Page\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_Page.PageDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PageID {
                get {
                    try {
                        return ((long)(this[this.tableSalesInvoice_Page.PageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PageID\' in table \'SalesInvoice_Page\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_Page.PageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_Page.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'SalesInvoice_Page\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_Page.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tax {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_Page.TaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tax\' in table \'SalesInvoice_Page\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_Page.TaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesInvoice_Page.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'SalesInvoice_Page\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_Page.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PageDescDetail {
                get {
                    try {
                        return ((string)(this[this.tableSalesInvoice_Page.PageDescDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PageDescDetail\' in table \'SalesInvoice_Page\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesInvoice_Page.PageDescDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableSalesInvoice_Page.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableSalesInvoice_Page.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPageDescNull() {
                return this.IsNull(this.tableSalesInvoice_Page.PageDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPageDescNull() {
                this[this.tableSalesInvoice_Page.PageDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPageIDNull() {
                return this.IsNull(this.tableSalesInvoice_Page.PageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPageIDNull() {
                this[this.tableSalesInvoice_Page.PageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableSalesInvoice_Page.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableSalesInvoice_Page.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxNull() {
                return this.IsNull(this.tableSalesInvoice_Page.TaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxNull() {
                this[this.tableSalesInvoice_Page.TaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull() {
                return this.IsNull(this.tableSalesInvoice_Page.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull() {
                this[this.tableSalesInvoice_Page.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPageDescDetailNull() {
                return this.IsNull(this.tableSalesInvoice_Page.PageDescDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPageDescDetailNull() {
                this[this.tableSalesInvoice_Page.PageDescDetailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Invoice_NewRow : global::System.Data.DataRow {
            
            private Invoice_NewDataTable tableInvoice_New;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Invoice_NewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoice_New = ((Invoice_NewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableInvoice_New.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice_New.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableInvoice_New.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableInvoice_New.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProID {
                get {
                    try {
                        return ((int)(this[this.tableInvoice_New.ProIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProID\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.ProIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZoneID {
                get {
                    try {
                        return ((int)(this[this.tableInvoice_New.ZoneIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneID\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.ZoneIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WarrantyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice_New.WarrantyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarrantyDate\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.WarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice_New.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice_New.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeptID {
                get {
                    try {
                        return ((int)(this[this.tableInvoice_New.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConTypeID {
                get {
                    try {
                        return ((int)(this[this.tableInvoice_New.ConTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConTypeID\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.ConTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dept_Name {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.Dept_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dept_Name\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.Dept_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Con_Name {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.Con_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Con_Name\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.Con_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NameOfProduct {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.NameOfProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameOfProduct\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.NameOfProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone_name {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.Zone_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone_name\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.Zone_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Godown_name {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.Godown_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Godown_name\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.Godown_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Empname {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.EmpnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Empname\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.EmpnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.BrandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brand\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPersonName {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.ContactPersonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPersonName\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.ContactPersonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPersonPhno {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.ContactPersonPhnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPersonPhno\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.ContactPersonPhnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New.ModelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNo\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.ModelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoice_New.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'Invoice_New\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableInvoice_New.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableInvoice_New.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableInvoice_New.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableInvoice_New.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableInvoice_New.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableInvoice_New.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableInvoice_New.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableInvoice_New.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableInvoice_New.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableInvoice_New.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableInvoice_New.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableInvoice_New.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableInvoice_New.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableInvoice_New.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProIDNull() {
                return this.IsNull(this.tableInvoice_New.ProIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProIDNull() {
                this[this.tableInvoice_New.ProIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneIDNull() {
                return this.IsNull(this.tableInvoice_New.ZoneIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneIDNull() {
                this[this.tableInvoice_New.ZoneIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarrantyDateNull() {
                return this.IsNull(this.tableInvoice_New.WarrantyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarrantyDateNull() {
                this[this.tableInvoice_New.WarrantyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableInvoice_New.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableInvoice_New.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableInvoice_New.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableInvoice_New.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tableInvoice_New.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptIDNull() {
                this[this.tableInvoice_New.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConTypeIDNull() {
                return this.IsNull(this.tableInvoice_New.ConTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConTypeIDNull() {
                this[this.tableInvoice_New.ConTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDept_NameNull() {
                return this.IsNull(this.tableInvoice_New.Dept_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDept_NameNull() {
                this[this.tableInvoice_New.Dept_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCon_NameNull() {
                return this.IsNull(this.tableInvoice_New.Con_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCon_NameNull() {
                this[this.tableInvoice_New.Con_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameOfProductNull() {
                return this.IsNull(this.tableInvoice_New.NameOfProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameOfProductNull() {
                this[this.tableInvoice_New.NameOfProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZone_nameNull() {
                return this.IsNull(this.tableInvoice_New.Zone_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZone_nameNull() {
                this[this.tableInvoice_New.Zone_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodown_nameNull() {
                return this.IsNull(this.tableInvoice_New.Godown_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodown_nameNull() {
                this[this.tableInvoice_New.Godown_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpnameNull() {
                return this.IsNull(this.tableInvoice_New.EmpnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpnameNull() {
                this[this.tableInvoice_New.EmpnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableInvoice_New.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableInvoice_New.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNull() {
                return this.IsNull(this.tableInvoice_New.BrandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNull() {
                this[this.tableInvoice_New.BrandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersonNameNull() {
                return this.IsNull(this.tableInvoice_New.ContactPersonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersonNameNull() {
                this[this.tableInvoice_New.ContactPersonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersonPhnoNull() {
                return this.IsNull(this.tableInvoice_New.ContactPersonPhnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersonPhnoNull() {
                this[this.tableInvoice_New.ContactPersonPhnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableInvoice_New.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableInvoice_New.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableInvoice_New.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableInvoice_New.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNoNull() {
                return this.IsNull(this.tableInvoice_New.ModelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNoNull() {
                this[this.tableInvoice_New.ModelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableInvoice_New.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableInvoice_New.CreatedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Invoice_New_ItemRow : global::System.Data.DataRow {
            
            private Invoice_New_ItemDataTable tableInvoice_New_Item;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Invoice_New_ItemRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoice_New_Item = ((Invoice_New_ItemDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceDetailID {
                get {
                    try {
                        return ((long)(this[this.tableInvoice_New_Item.ServiceDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDetailID\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.ServiceDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableInvoice_New_Item.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableInvoice_New_Item.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New_Item.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Expr1 {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.Expr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr1\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.Expr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVAT {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.AVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVAT\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.AVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VAT {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CST {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.CSTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CST\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.CSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceTax {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.ServiceTaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceTax\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.ServiceTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HEduCess {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.HEduCessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HEduCess\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.HEduCessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EduCess {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.EduCessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EduCess\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.EduCessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Excise {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.ExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Excise\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.ExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_Name {
                get {
                    try {
                        return ((string)(this[this.tableInvoice_New_Item.Item_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Item_Name\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.Item_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoice_New_Item.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Invoice_New_Item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoice_New_Item.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDetailIDNull() {
                return this.IsNull(this.tableInvoice_New_Item.ServiceDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDetailIDNull() {
                this[this.tableInvoice_New_Item.ServiceDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableInvoice_New_Item.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableInvoice_New_Item.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableInvoice_New_Item.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableInvoice_New_Item.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tableInvoice_New_Item.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tableInvoice_New_Item.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableInvoice_New_Item.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableInvoice_New_Item.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableInvoice_New_Item.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableInvoice_New_Item.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableInvoice_New_Item.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableInvoice_New_Item.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableInvoice_New_Item.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableInvoice_New_Item.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableInvoice_New_Item.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableInvoice_New_Item.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExpr1Null() {
                return this.IsNull(this.tableInvoice_New_Item.Expr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExpr1Null() {
                this[this.tableInvoice_New_Item.Expr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableInvoice_New_Item.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableInvoice_New_Item.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableInvoice_New_Item.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATNull() {
                return this.IsNull(this.tableInvoice_New_Item.AVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATNull() {
                this[this.tableInvoice_New_Item.AVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATNull() {
                return this.IsNull(this.tableInvoice_New_Item.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATNull() {
                this[this.tableInvoice_New_Item.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTNull() {
                return this.IsNull(this.tableInvoice_New_Item.CSTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTNull() {
                this[this.tableInvoice_New_Item.CSTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceTaxNull() {
                return this.IsNull(this.tableInvoice_New_Item.ServiceTaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceTaxNull() {
                this[this.tableInvoice_New_Item.ServiceTaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHEduCessNull() {
                return this.IsNull(this.tableInvoice_New_Item.HEduCessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHEduCessNull() {
                this[this.tableInvoice_New_Item.HEduCessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEduCessNull() {
                return this.IsNull(this.tableInvoice_New_Item.EduCessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEduCessNull() {
                this[this.tableInvoice_New_Item.EduCessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseNull() {
                return this.IsNull(this.tableInvoice_New_Item.ExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseNull() {
                this[this.tableInvoice_New_Item.ExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItem_NameNull() {
                return this.IsNull(this.tableInvoice_New_Item.Item_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItem_NameNull() {
                this[this.tableInvoice_New_Item.Item_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableInvoice_New_Item.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableInvoice_New_Item.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableInvoice_New_Item.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableInvoice_New_Item.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableInvoice_New_Item.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableInvoice_New_Item.AmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CompanyInfoRow : global::System.Data.DataRow {
            
            private CompanyInfoDataTable tableCompanyInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CompanyInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCompanyInfo = ((CompanyInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CompId {
                get {
                    try {
                        return ((long)(this[this.tableCompanyInfo.CompIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompId\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.CompIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyCode {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.CompanyCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyCode\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.CompanyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CompanyName {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.CompanyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanyName\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BusinessLine {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.BusinessLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BusinessLine\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.BusinessLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address1 {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address1\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address2 {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address2\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CityName {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.CityNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityName\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.CityNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pincode {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pincode\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone2 {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.Phone2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone2\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.Phone2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fax\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReportPath {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.ReportPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportPath\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.ReportPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DocPath {
                get {
                    try {
                        return ((string)(this[this.tableCompanyInfo.DocPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocPath\' in table \'CompanyInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCompanyInfo.DocPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompIdNull() {
                return this.IsNull(this.tableCompanyInfo.CompIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompIdNull() {
                this[this.tableCompanyInfo.CompIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyCodeNull() {
                return this.IsNull(this.tableCompanyInfo.CompanyCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyCodeNull() {
                this[this.tableCompanyInfo.CompanyCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNameNull() {
                return this.IsNull(this.tableCompanyInfo.CompanyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNameNull() {
                this[this.tableCompanyInfo.CompanyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBusinessLineNull() {
                return this.IsNull(this.tableCompanyInfo.BusinessLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBusinessLineNull() {
                this[this.tableCompanyInfo.BusinessLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress1Null() {
                return this.IsNull(this.tableCompanyInfo.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress1Null() {
                this[this.tableCompanyInfo.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddress2Null() {
                return this.IsNull(this.tableCompanyInfo.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddress2Null() {
                this[this.tableCompanyInfo.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNameNull() {
                return this.IsNull(this.tableCompanyInfo.CityNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNameNull() {
                this[this.tableCompanyInfo.CityNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableCompanyInfo.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableCompanyInfo.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPincodeNull() {
                return this.IsNull(this.tableCompanyInfo.PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPincodeNull() {
                this[this.tableCompanyInfo.PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableCompanyInfo.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableCompanyInfo.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone2Null() {
                return this.IsNull(this.tableCompanyInfo.Phone2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone2Null() {
                this[this.tableCompanyInfo.Phone2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableCompanyInfo.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableCompanyInfo.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFaxNull() {
                return this.IsNull(this.tableCompanyInfo.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFaxNull() {
                this[this.tableCompanyInfo.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableCompanyInfo.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableCompanyInfo.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReportPathNull() {
                return this.IsNull(this.tableCompanyInfo.ReportPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReportPathNull() {
                this[this.tableCompanyInfo.ReportPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocPathNull() {
                return this.IsNull(this.tableCompanyInfo.DocPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocPathNull() {
                this[this.tableCompanyInfo.DocPathColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Customer_ServiceRow : global::System.Data.DataRow {
            
            private Customer_ServiceDataTable tableCustomer_Service;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Customer_ServiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomer_Service = ((Customer_ServiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableCustomer_Service.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomer_Service.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNumber {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.ModelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNumber\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ModelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Problem {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.ProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Problem\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AttendedBy {
                get {
                    try {
                        return ((long)(this[this.tableCustomer_Service.AttendedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendedBy\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.AttendedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobComputed {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.JobComputedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobComputed\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.JobComputedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherRequirement {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.OtherRequirementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherRequirement\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.OtherRequirementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Charges {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.ChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Charges\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableCustomer_Service.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomer_Service.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableCustomer_Service.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomer_Service.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableCustomer_Service.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomer_Service.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FYID {
                get {
                    try {
                        return ((long)(this[this.tableCustomer_Service.FYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FYID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.FYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableCustomer_Service.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableCustomer_Service.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DeptID {
                get {
                    try {
                        return ((int)(this[this.tableCustomer_Service.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ConTypeID {
                get {
                    try {
                        return ((int)(this[this.tableCustomer_Service.ConTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConTypeID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ConTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ProID {
                get {
                    try {
                        return ((int)(this[this.tableCustomer_Service.ProIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ProIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ZoneID {
                get {
                    try {
                        return ((int)(this[this.tableCustomer_Service.ZoneIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZoneID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ZoneIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomer_Service.StartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartDate\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.StartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomer_Service.EndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndDate\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.EndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime WarrantyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomer_Service.WarrantyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarrantyDate\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.WarrantyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TakenBy {
                get {
                    try {
                        return ((long)(this[this.tableCustomer_Service.TakenByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TakenBy\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.TakenByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CallID {
                get {
                    try {
                        return ((int)(this[this.tableCustomer_Service.CallIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallID\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CallIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TotalHours {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.TotalHoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHours\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.TotalHoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Call_Status {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.Call_StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Call_Status\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.Call_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Servicebill {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.ServicebillColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Servicebill\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ServicebillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactpersonName {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.ContactpersonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactpersonName\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ContactpersonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StartTime {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.StartTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StartTime\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.StartTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EndTime {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.EndTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EndTime\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.EndTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CounterReading {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.CounterReadingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CounterReading\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CounterReadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PONo {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.PONoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PONo\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.PONoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.ModelNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNo\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.ModelNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrNo {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.CategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Category\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.BrandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Brand\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CallType {
                get {
                    try {
                        return ((string)(this[this.tableCustomer_Service.CallTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CallType\' in table \'Customer Service\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomer_Service.CallTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableCustomer_Service.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableCustomer_Service.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableCustomer_Service.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableCustomer_Service.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableCustomer_Service.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableCustomer_Service.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomer_Service.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomer_Service.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableCustomer_Service.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableCustomer_Service.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableCustomer_Service.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableCustomer_Service.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNumberNull() {
                return this.IsNull(this.tableCustomer_Service.ModelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNumberNull() {
                this[this.tableCustomer_Service.ModelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemNull() {
                return this.IsNull(this.tableCustomer_Service.ProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemNull() {
                this[this.tableCustomer_Service.ProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttendedByNull() {
                return this.IsNull(this.tableCustomer_Service.AttendedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttendedByNull() {
                this[this.tableCustomer_Service.AttendedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobComputedNull() {
                return this.IsNull(this.tableCustomer_Service.JobComputedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobComputedNull() {
                this[this.tableCustomer_Service.JobComputedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableCustomer_Service.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableCustomer_Service.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherRequirementNull() {
                return this.IsNull(this.tableCustomer_Service.OtherRequirementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherRequirementNull() {
                this[this.tableCustomer_Service.OtherRequirementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargesNull() {
                return this.IsNull(this.tableCustomer_Service.ChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargesNull() {
                this[this.tableCustomer_Service.ChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableCustomer_Service.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableCustomer_Service.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableCustomer_Service.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableCustomer_Service.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableCustomer_Service.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableCustomer_Service.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableCustomer_Service.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableCustomer_Service.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableCustomer_Service.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableCustomer_Service.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableCustomer_Service.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableCustomer_Service.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableCustomer_Service.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableCustomer_Service.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableCustomer_Service.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableCustomer_Service.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableCustomer_Service.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableCustomer_Service.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableCustomer_Service.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableCustomer_Service.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableCustomer_Service.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableCustomer_Service.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableCustomer_Service.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableCustomer_Service.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableCustomer_Service.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableCustomer_Service.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableCustomer_Service.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableCustomer_Service.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableCustomer_Service.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableCustomer_Service.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableCustomer_Service.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableCustomer_Service.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableCustomer_Service.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableCustomer_Service.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFYIDNull() {
                return this.IsNull(this.tableCustomer_Service.FYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFYIDNull() {
                this[this.tableCustomer_Service.FYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableCustomer_Service.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableCustomer_Service.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableCustomer_Service.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableCustomer_Service.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tableCustomer_Service.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeptIDNull() {
                this[this.tableCustomer_Service.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConTypeIDNull() {
                return this.IsNull(this.tableCustomer_Service.ConTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConTypeIDNull() {
                this[this.tableCustomer_Service.ConTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProIDNull() {
                return this.IsNull(this.tableCustomer_Service.ProIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProIDNull() {
                this[this.tableCustomer_Service.ProIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneIDNull() {
                return this.IsNull(this.tableCustomer_Service.ZoneIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneIDNull() {
                this[this.tableCustomer_Service.ZoneIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartDateNull() {
                return this.IsNull(this.tableCustomer_Service.StartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartDateNull() {
                this[this.tableCustomer_Service.StartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndDateNull() {
                return this.IsNull(this.tableCustomer_Service.EndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndDateNull() {
                this[this.tableCustomer_Service.EndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWarrantyDateNull() {
                return this.IsNull(this.tableCustomer_Service.WarrantyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWarrantyDateNull() {
                this[this.tableCustomer_Service.WarrantyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTakenByNull() {
                return this.IsNull(this.tableCustomer_Service.TakenByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTakenByNull() {
                this[this.tableCustomer_Service.TakenByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallIDNull() {
                return this.IsNull(this.tableCustomer_Service.CallIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallIDNull() {
                this[this.tableCustomer_Service.CallIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalHoursNull() {
                return this.IsNull(this.tableCustomer_Service.TotalHoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalHoursNull() {
                this[this.tableCustomer_Service.TotalHoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCall_StatusNull() {
                return this.IsNull(this.tableCustomer_Service.Call_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCall_StatusNull() {
                this[this.tableCustomer_Service.Call_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableCustomer_Service.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableCustomer_Service.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServicebillNull() {
                return this.IsNull(this.tableCustomer_Service.ServicebillColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServicebillNull() {
                this[this.tableCustomer_Service.ServicebillColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactpersonNameNull() {
                return this.IsNull(this.tableCustomer_Service.ContactpersonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactpersonNameNull() {
                this[this.tableCustomer_Service.ContactpersonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tableCustomer_Service.StartTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tableCustomer_Service.StartTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tableCustomer_Service.EndTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tableCustomer_Service.EndTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCounterReadingNull() {
                return this.IsNull(this.tableCustomer_Service.CounterReadingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCounterReadingNull() {
                this[this.tableCustomer_Service.CounterReadingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPONoNull() {
                return this.IsNull(this.tableCustomer_Service.PONoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPONoNull() {
                this[this.tableCustomer_Service.PONoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNoNull() {
                return this.IsNull(this.tableCustomer_Service.ModelNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNoNull() {
                this[this.tableCustomer_Service.ModelNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableCustomer_Service.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableCustomer_Service.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableCustomer_Service.CategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableCustomer_Service.CategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBrandNull() {
                return this.IsNull(this.tableCustomer_Service.BrandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBrandNull() {
                this[this.tableCustomer_Service.BrandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCallTypeNull() {
                return this.IsNull(this.tableCustomer_Service.CallTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCallTypeNull() {
                this[this.tableCustomer_Service.CallTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TNCRow : global::System.Data.DataRow {
            
            private TNCDataTable tableTNC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TNCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTNC = ((TNCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TNC_Desc {
                get {
                    try {
                        return ((string)(this[this.tableTNC.TNC_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TNC_Desc\' in table \'TNC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTNC.TNC_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTNC_DescNull() {
                return this.IsNull(this.tableTNC.TNC_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTNC_DescNull() {
                this[this.tableTNC.TNC_DescColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Service_ToyoRow : global::System.Data.DataRow {
            
            private Service_ToyoDataTable tableService_Toyo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Service_ToyoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableService_Toyo = ((Service_ToyoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableService_Toyo.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductName {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.ProductNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductName\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ProductNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ModelNumber {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.ModelNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModelNumber\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ModelNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Problem {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.ProblemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Problem\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ProblemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AttendedBy {
                get {
                    try {
                        return ((long)(this[this.tableService_Toyo.AttendedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AttendedBy\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.AttendedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JobComputed {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.JobComputedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobComputed\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.JobComputedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OtherRequirement {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.OtherRequirementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherRequirement\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.OtherRequirementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Charges {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.ChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Charges\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreatedBy {
                get {
                    try {
                        return ((long)(this[this.tableService_Toyo.CreatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedBy\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.CreatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableService_Toyo.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ModifiedBy {
                get {
                    try {
                        return ((long)(this[this.tableService_Toyo.ModifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedBy\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ModifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ModifiedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableService_Toyo.ModifiedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ModifiedDate\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableService_Toyo.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FYID {
                get {
                    try {
                        return ((long)(this[this.tableService_Toyo.FYIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FYID\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.FYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableService_Toyo.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableService_Toyo.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableService_Toyo.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableService_Toyo.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEM_NAME {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.ITEM_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEM_NAME\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.ITEM_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableService_Toyo.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'Service_Toyo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableService_Toyo.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableService_Toyo.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableService_Toyo.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableService_Toyo.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableService_Toyo.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableService_Toyo.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableService_Toyo.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableService_Toyo.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableService_Toyo.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableService_Toyo.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableService_Toyo.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductNameNull() {
                return this.IsNull(this.tableService_Toyo.ProductNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductNameNull() {
                this[this.tableService_Toyo.ProductNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNumberNull() {
                return this.IsNull(this.tableService_Toyo.ModelNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNumberNull() {
                this[this.tableService_Toyo.ModelNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProblemNull() {
                return this.IsNull(this.tableService_Toyo.ProblemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProblemNull() {
                this[this.tableService_Toyo.ProblemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAttendedByNull() {
                return this.IsNull(this.tableService_Toyo.AttendedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAttendedByNull() {
                this[this.tableService_Toyo.AttendedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJobComputedNull() {
                return this.IsNull(this.tableService_Toyo.JobComputedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJobComputedNull() {
                this[this.tableService_Toyo.JobComputedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableService_Toyo.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableService_Toyo.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOtherRequirementNull() {
                return this.IsNull(this.tableService_Toyo.OtherRequirementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOtherRequirementNull() {
                this[this.tableService_Toyo.OtherRequirementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChargesNull() {
                return this.IsNull(this.tableService_Toyo.ChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChargesNull() {
                this[this.tableService_Toyo.ChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedByNull() {
                return this.IsNull(this.tableService_Toyo.CreatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedByNull() {
                this[this.tableService_Toyo.CreatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableService_Toyo.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableService_Toyo.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedByNull() {
                return this.IsNull(this.tableService_Toyo.ModifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedByNull() {
                this[this.tableService_Toyo.ModifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModifiedDateNull() {
                return this.IsNull(this.tableService_Toyo.ModifiedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModifiedDateNull() {
                this[this.tableService_Toyo.ModifiedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableService_Toyo.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableService_Toyo.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableService_Toyo.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableService_Toyo.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableService_Toyo.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableService_Toyo.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableService_Toyo.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableService_Toyo.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableService_Toyo.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableService_Toyo.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableService_Toyo.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableService_Toyo.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableService_Toyo.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableService_Toyo.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableService_Toyo.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableService_Toyo.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableService_Toyo.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableService_Toyo.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableService_Toyo.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableService_Toyo.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableService_Toyo.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableService_Toyo.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableService_Toyo.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableService_Toyo.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableService_Toyo.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableService_Toyo.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFYIDNull() {
                return this.IsNull(this.tableService_Toyo.FYIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFYIDNull() {
                this[this.tableService_Toyo.FYIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableService_Toyo.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableService_Toyo.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableService_Toyo.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableService_Toyo.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableService_Toyo.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableService_Toyo.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tableService_Toyo.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tableService_Toyo.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableService_Toyo.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableService_Toyo.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableService_Toyo.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableService_Toyo.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tableService_Toyo.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tableService_Toyo.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEM_NAMENull() {
                return this.IsNull(this.tableService_Toyo.ITEM_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEM_NAMENull() {
                this[this.tableService_Toyo.ITEM_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableService_Toyo.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableService_Toyo.UOMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemStockRegisterHozifaRow : global::System.Data.DataRow {
            
            private ItemStockRegisterHozifaDataTable tableItemStockRegisterHozifa;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemStockRegisterHozifaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemStockRegisterHozifa = ((ItemStockRegisterHozifaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long StockID {
                get {
                    try {
                        return ((long)(this[this.tableItemStockRegisterHozifa.StockIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StockID\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.StockIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableItemStockRegisterHozifa.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableItemStockRegisterHozifa.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableItemStockRegisterHozifa.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableItemStockRegisterHozifa.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RackNo {
                get {
                    try {
                        return ((string)(this[this.tableItemStockRegisterHozifa.RackNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RackNo\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.RackNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int GodownID {
                get {
                    try {
                        return ((int)(this[this.tableItemStockRegisterHozifa.GodownIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownID\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.GodownIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QOH {
                get {
                    try {
                        return ((decimal)(this[this.tableItemStockRegisterHozifa.QOHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QOH\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.QOHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Roll {
                get {
                    try {
                        return ((decimal)(this[this.tableItemStockRegisterHozifa.RollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Weigth {
                get {
                    try {
                        return ((decimal)(this[this.tableItemStockRegisterHozifa.WeigthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weigth\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.WeigthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SF {
                get {
                    try {
                        return ((decimal)(this[this.tableItemStockRegisterHozifa.SFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SF\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.SFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SM {
                get {
                    try {
                        return ((decimal)(this[this.tableItemStockRegisterHozifa.SMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SM\' in table \'ItemStockRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemStockRegisterHozifa.SMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStockIDNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.StockIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStockIDNull() {
                this[this.tableItemStockRegisterHozifa.StockIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableItemStockRegisterHozifa.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableItemStockRegisterHozifa.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableItemStockRegisterHozifa.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableItemStockRegisterHozifa.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRackNoNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.RackNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRackNoNull() {
                this[this.tableItemStockRegisterHozifa.RackNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownIDNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.GodownIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownIDNull() {
                this[this.tableItemStockRegisterHozifa.GodownIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQOHNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.QOHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQOHNull() {
                this[this.tableItemStockRegisterHozifa.QOHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRollNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.RollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRollNull() {
                this[this.tableItemStockRegisterHozifa.RollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWeigthNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.WeigthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWeigthNull() {
                this[this.tableItemStockRegisterHozifa.WeigthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSFNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.SFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSFNull() {
                this[this.tableItemStockRegisterHozifa.SFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMNull() {
                return this.IsNull(this.tableItemStockRegisterHozifa.SMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMNull() {
                this[this.tableItemStockRegisterHozifa.SMColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseInvoiceRegisterWithDetailRow : global::System.Data.DataRow {
            
            private PurchaseInvoiceRegisterWithDetailDataTable tablePurchaseInvoiceRegisterWithDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseInvoiceRegisterWithDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseInvoiceRegisterWithDetail = ((PurchaseInvoiceRegisterWithDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PIID {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseInvoiceRegisterWithDetail.PIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIID\' in table \'PurchaseInvoiceRegisterWithDetail\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.PIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseCode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseInvoiceRegisterWithDetail.PurchaseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseCode\' in table \'PurchaseInvoiceRegisterWithDetail\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.PurchaseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PurchaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseInvoiceRegisterWithDetail.PurchaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseDate\' in table \'PurchaseInvoiceRegisterWithDetail\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.PurchaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseInvoiceRegisterWithDetail.VoucherNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherNo\' in table \'PurchaseInvoiceRegisterWithDetail\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.VoucherNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VoucherDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseInvoiceRegisterWithDetail.VoucherDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherDate\' in table \'PurchaseInvoiceRegisterWithDetail\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.VoucherDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long VendorID {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseInvoiceRegisterWithDetail.VendorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorID\' in table \'PurchaseInvoiceRegisterWithDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseInvoiceRegisterWithDetail.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'PurchaseInvoiceRegisterWithDetail\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseInvoiceRegisterWithDetail.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'PurchaseInvoiceRegisterWithDetail\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DueDays {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseInvoiceRegisterWithDetail.DueDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDays\' in table \'PurchaseInvoiceRegisterWithDetail\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DueDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseInvoiceRegisterWithDetail.DueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDate\' in table \'PurchaseInvoiceRegisterWithDetail\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'PurchaseInvoiceRegisterWithDet" +
                                "ail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'PurchaseInvoiceRegisterWithDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseInvoiceRegisterWithDetail.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'PurchaseInvoiceRegisterWithDetail\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseInvoiceRegisterWithDetail.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'PurchaseInvoiceRegisterWithDetail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'PurchaseInvoiceRegisterWithDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'PurchaseInvoiceRegisterWithDetail\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'PurchaseInvoiceRegisterWithDetail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseInvoiceRegisterWithDetail.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'PurchaseInvoiceRegisterWithDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseInvoiceRegisterWithDetail.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'PurchaseInvoiceRegisterWithDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxClass {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseInvoiceRegisterWithDetail.TaxClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClass\' in table \'PurchaseInvoiceRegisterWithDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.ExciseRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseRate\' in table \'PurchaseInvoiceRegisterWithDetail\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.ExciseRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DetExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DetExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetExciseAmount\' in table \'PurchaseInvoiceRegisterWithDetai" +
                                "l\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DetExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.CessRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessRate\' in table \'PurchaseInvoiceRegisterWithDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.CessRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DetCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DetCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetCessAmount\' in table \'PurchaseInvoiceRegisterWithDetail\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DetCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.HCessRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessRate\' in table \'PurchaseInvoiceRegisterWithDetail\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.HCessRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DetHCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DetHCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetHCessAmount\' in table \'PurchaseInvoiceRegisterWithDetail" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DetHCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DetAmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DetAmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetAmountAfterExcise\' in table \'PurchaseInvoiceRegisterWith" +
                                "Detail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DetAmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.CSTRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTRate\' in table \'PurchaseInvoiceRegisterWithDetail\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.CSTRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DetCSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DetCSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetCSTAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DetCSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.VATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATRate\' in table \'PurchaseInvoiceRegisterWithDetail\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.VATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DetVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DetVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetVATAmount\' in table \'PurchaseInvoiceRegisterWithDetail\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DetVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATRate {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.AVATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATRate\' in table \'PurchaseInvoiceRegisterWithDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.AVATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DetAVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DetAVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetAVATAmount\' in table \'PurchaseInvoiceRegisterWithDetail\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DetAVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DetNEtAMount {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.DetNEtAMountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetNEtAMount\' in table \'PurchaseInvoiceRegisterWithDetail\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.DetNEtAMountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TaxClassID {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseInvoiceRegisterWithDetail.TaxClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClassID\' in table \'PurchaseInvoiceRegisterWithDetail\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.TaxClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long PIDetailID {
                get {
                    try {
                        return ((long)(this[this.tablePurchaseInvoiceRegisterWithDetail.PIDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIDetailID\' in table \'PurchaseInvoiceRegisterWithDetail\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.PIDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseInvoiceRegisterWithDetail.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'PurchaseInvoiceRegisterWithDetail\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseInvoiceRegisterWithDetail.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPIIDNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.PIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPIIDNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.PIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseCodeNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.PurchaseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseCodeNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.PurchaseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseDateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.PurchaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseDateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.PurchaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNoNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.VoucherNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNoNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.VoucherNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherDateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.VoucherDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherDateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.VoucherDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorIDNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.VendorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorIDNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.VendorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodeNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodeNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDaysNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DueDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDaysNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DueDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.TaxClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.TaxClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseRateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.ExciseRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseRateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.ExciseRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetExciseAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DetExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetExciseAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DetExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessRateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.CessRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessRateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.CessRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetCessAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DetCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetCessAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DetCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessRateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.HCessRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessRateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.HCessRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetHCessAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DetHCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetHCessAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DetHCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetAmountAfterExciseNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DetAmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetAmountAfterExciseNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DetAmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTRateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.CSTRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTRateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.CSTRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetCSTAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DetCSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetCSTAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DetCSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATRateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.VATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATRateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.VATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetVATAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DetVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetVATAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DetVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATRateNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.AVATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATRateNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.AVATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetAVATAmountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DetAVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetAVATAmountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DetAVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetNEtAMountNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.DetNEtAMountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetNEtAMountNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.DetNEtAMountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassIDNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.TaxClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassIDNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.TaxClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPIDetailIDNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.PIDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPIDetailIDNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.PIDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tablePurchaseInvoiceRegisterWithDetail.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tablePurchaseInvoiceRegisterWithDetail.QuantityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SalesRegisterHozifaRow : global::System.Data.DataRow {
            
            private SalesRegisterHozifaDataTable tableSalesRegisterHozifa;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SalesRegisterHozifaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSalesRegisterHozifa = ((SalesRegisterHozifaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableSalesRegisterHozifa.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'SalesRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesRegisterHozifa.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableSalesRegisterHozifa.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'SalesRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesRegisterHozifa.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableSalesRegisterHozifa.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'SalesRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesRegisterHozifa.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Quantity {
                get {
                    try {
                        return ((decimal)(this[this.tableSalesRegisterHozifa.QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quantity\' in table \'SalesRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesRegisterHozifa.QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableSalesRegisterHozifa.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'SalesRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesRegisterHozifa.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EmpName {
                get {
                    try {
                        return ((string)(this[this.tableSalesRegisterHozifa.EmpNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpName\' in table \'SalesRegisterHozifa\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSalesRegisterHozifa.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableSalesRegisterHozifa.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableSalesRegisterHozifa.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableSalesRegisterHozifa.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableSalesRegisterHozifa.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableSalesRegisterHozifa.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableSalesRegisterHozifa.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityNull() {
                return this.IsNull(this.tableSalesRegisterHozifa.QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityNull() {
                this[this.tableSalesRegisterHozifa.QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableSalesRegisterHozifa.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableSalesRegisterHozifa.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmpNameNull() {
                return this.IsNull(this.tableSalesRegisterHozifa.EmpNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmpNameNull() {
                this[this.tableSalesRegisterHozifa.EmpNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentReceiptRow : global::System.Data.DataRow {
            
            private PaymentReceiptDataTable tablePaymentReceipt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentReceiptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentReceipt = ((PaymentReceiptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReceipt.ReceiptCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptCode\' in table \'PaymentReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReceipt.ReceiptCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMERNAME {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReceipt.CUSTOMERNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMERNAME\' in table \'PaymentReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReceipt.CUSTOMERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentReceipt.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'PaymentReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReceipt.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentReceipt.ReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptDate\' in table \'PaymentReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReceipt.ReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReceipt.CurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Currency\' in table \'PaymentReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReceipt.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReceipt.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'PaymentReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReceipt.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptCodeNull() {
                return this.IsNull(this.tablePaymentReceipt.ReceiptCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptCodeNull() {
                this[this.tablePaymentReceipt.ReceiptCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNAMENull() {
                return this.IsNull(this.tablePaymentReceipt.CUSTOMERNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNAMENull() {
                this[this.tablePaymentReceipt.CUSTOMERNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablePaymentReceipt.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablePaymentReceipt.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptDateNull() {
                return this.IsNull(this.tablePaymentReceipt.ReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptDateNull() {
                this[this.tablePaymentReceipt.ReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNull() {
                return this.IsNull(this.tablePaymentReceipt.CurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNull() {
                this[this.tablePaymentReceipt.CurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tablePaymentReceipt.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNameNull() {
                this[this.tablePaymentReceipt.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ServiceOrderRow : global::System.Data.DataRow {
            
            private ServiceOrderDataTable tableServiceOrder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceOrderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServiceOrder = ((ServiceOrderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableServiceOrder.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceOrder.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROBLEM {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.PROBLEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROBLEM\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.PROBLEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPARESUSED {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.SPARESUSEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPARESUSED\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.SPARESUSEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOLUTIONS {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.SOLUTIONSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOLUTIONS\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.SOLUTIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SPARECHARGES {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceOrder.SPARECHARGESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPARECHARGES\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.SPARECHARGESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SERVICECHARGES {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceOrder.SERVICECHARGESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICECHARGES\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.SERVICECHARGESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTENDEDBY {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.ATTENDEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATTENDEDBY\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.ATTENDEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CALLTYPE {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.CALLTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CALLTYPE\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.CALLTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableServiceOrder.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'ServiceOrder\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceOrder.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableServiceOrder.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableServiceOrder.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableServiceOrder.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableServiceOrder.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableServiceOrder.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableServiceOrder.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableServiceOrder.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableServiceOrder.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableServiceOrder.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableServiceOrder.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableServiceOrder.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableServiceOrder.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableServiceOrder.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tableServiceOrder.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROBLEMNull() {
                return this.IsNull(this.tableServiceOrder.PROBLEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROBLEMNull() {
                this[this.tableServiceOrder.PROBLEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPARESUSEDNull() {
                return this.IsNull(this.tableServiceOrder.SPARESUSEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPARESUSEDNull() {
                this[this.tableServiceOrder.SPARESUSEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOLUTIONSNull() {
                return this.IsNull(this.tableServiceOrder.SOLUTIONSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOLUTIONSNull() {
                this[this.tableServiceOrder.SOLUTIONSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPARECHARGESNull() {
                return this.IsNull(this.tableServiceOrder.SPARECHARGESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPARECHARGESNull() {
                this[this.tableServiceOrder.SPARECHARGESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICECHARGESNull() {
                return this.IsNull(this.tableServiceOrder.SERVICECHARGESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICECHARGESNull() {
                this[this.tableServiceOrder.SERVICECHARGESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTENDEDBYNull() {
                return this.IsNull(this.tableServiceOrder.ATTENDEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTENDEDBYNull() {
                this[this.tableServiceOrder.ATTENDEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCALLTYPENull() {
                return this.IsNull(this.tableServiceOrder.CALLTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCALLTYPENull() {
                this[this.tableServiceOrder.CALLTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableServiceOrder.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableServiceOrder.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableServiceOrder.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableServiceOrder.STATUSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ServiceInvoiceOldRow : global::System.Data.DataRow {
            
            private ServiceInvoiceOldDataTable tableServiceInvoiceOld;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceInvoiceOldRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServiceInvoiceOld = ((ServiceInvoiceOldDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceInvoiceOld.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LeadNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.LeadNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LeadNo\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.LeadNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CITY {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.CITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CITY\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pincode {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pincode\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATE {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATE\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMNAME {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.ITEMNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEMNAME\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.ITEMNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.ServiceRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceRate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.ServiceRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.ExciseRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseRate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.ExciseRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.CessRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessRate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.CessRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.HCessRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessRate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.HCessRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.CSTRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTRate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.CSTRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.VATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATRate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.VATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.AVATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATRate\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.AVATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoiceOld.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxClass {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoiceOld.TaxClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClass\' in table \'ServiceInvoiceOld\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoiceOld.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableServiceInvoiceOld.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableServiceInvoiceOld.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableServiceInvoiceOld.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLeadNoNull() {
                return this.IsNull(this.tableServiceInvoiceOld.LeadNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLeadNoNull() {
                this[this.tableServiceInvoiceOld.LeadNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableServiceInvoiceOld.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableServiceInvoiceOld.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableServiceInvoiceOld.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableServiceInvoiceOld.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCITYNull() {
                return this.IsNull(this.tableServiceInvoiceOld.CITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCITYNull() {
                this[this.tableServiceInvoiceOld.CITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPincodeNull() {
                return this.IsNull(this.tableServiceInvoiceOld.PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPincodeNull() {
                this[this.tableServiceInvoiceOld.PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableServiceInvoiceOld.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableServiceInvoiceOld.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATENull() {
                return this.IsNull(this.tableServiceInvoiceOld.STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATENull() {
                this[this.tableServiceInvoiceOld.STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMNAMENull() {
                return this.IsNull(this.tableServiceInvoiceOld.ITEMNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMNAMENull() {
                this[this.tableServiceInvoiceOld.ITEMNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableServiceInvoiceOld.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableServiceInvoiceOld.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableServiceInvoiceOld.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableServiceInvoiceOld.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableServiceInvoiceOld.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableServiceInvoiceOld.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceRateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.ServiceRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceRateNull() {
                this[this.tableServiceInvoiceOld.ServiceRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableServiceInvoiceOld.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseRateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.ExciseRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseRateNull() {
                this[this.tableServiceInvoiceOld.ExciseRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableServiceInvoiceOld.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessRateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.CessRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessRateNull() {
                this[this.tableServiceInvoiceOld.CessRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableServiceInvoiceOld.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessRateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.HCessRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessRateNull() {
                this[this.tableServiceInvoiceOld.HCessRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableServiceInvoiceOld.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableServiceInvoiceOld.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableServiceInvoiceOld.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTRateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.CSTRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTRateNull() {
                this[this.tableServiceInvoiceOld.CSTRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableServiceInvoiceOld.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATRateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.VATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATRateNull() {
                this[this.tableServiceInvoiceOld.VATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableServiceInvoiceOld.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATRateNull() {
                return this.IsNull(this.tableServiceInvoiceOld.AVATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATRateNull() {
                this[this.tableServiceInvoiceOld.AVATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableServiceInvoiceOld.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableServiceInvoiceOld.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableServiceInvoiceOld.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassNull() {
                return this.IsNull(this.tableServiceInvoiceOld.TaxClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassNull() {
                this[this.tableServiceInvoiceOld.TaxClassColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemSalesRow : global::System.Data.DataRow {
            
            private ItemSalesDataTable tableItemSales;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemSalesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemSales = ((ItemSalesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemSales.DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DATE\' in table \'ItemSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemSales.DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMNAME {
                get {
                    try {
                        return ((string)(this[this.tableItemSales.ITEMNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEMNAME\' in table \'ItemSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemSales.ITEMNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableItemSales.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'ItemSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemSales.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableItemSales.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'ItemSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemSales.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TYPE {
                get {
                    try {
                        return ((string)(this[this.tableItemSales.TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TYPE\' in table \'ItemSales\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemSales.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATENull() {
                return this.IsNull(this.tableItemSales.DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATENull() {
                this[this.tableItemSales.DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMNAMENull() {
                return this.IsNull(this.tableItemSales.ITEMNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMNAMENull() {
                this[this.tableItemSales.ITEMNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableItemSales.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableItemSales.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableItemSales.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableItemSales.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTYPENull() {
                return this.IsNull(this.tableItemSales.TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTYPENull() {
                this[this.tableItemSales.TYPEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LogoRow : global::System.Data.DataRow {
            
            private LogoDataTable tableLogo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LogoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLogo = ((LogoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Logo {
                get {
                    try {
                        return ((byte[])(this[this.tableLogo.LogoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Logo\' in table \'Logo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogo.LogoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Header {
                get {
                    try {
                        return ((byte[])(this[this.tableLogo.HeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Header\' in table \'Logo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogo.HeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Footer {
                get {
                    try {
                        return ((byte[])(this[this.tableLogo.FooterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Footer\' in table \'Logo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogo.FooterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Sign {
                get {
                    try {
                        return ((byte[])(this[this.tableLogo.SignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sign\' in table \'Logo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogo.SignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLogoNull() {
                return this.IsNull(this.tableLogo.LogoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLogoNull() {
                this[this.tableLogo.LogoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHeaderNull() {
                return this.IsNull(this.tableLogo.HeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHeaderNull() {
                this[this.tableLogo.HeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFooterNull() {
                return this.IsNull(this.tableLogo.FooterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFooterNull() {
                this[this.tableLogo.FooterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSignNull() {
                return this.IsNull(this.tableLogo.SignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSignNull() {
                this[this.tableLogo.SignColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ChallanCumTaxInvoiceRow : global::System.Data.DataRow {
            
            private ChallanCumTaxInvoiceDataTable tableChallanCumTaxInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ChallanCumTaxInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableChallanCumTaxInvoice = ((ChallanCumTaxInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableChallanCumTaxInvoice.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DCNO {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.DCNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCNO\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DCNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableChallanCumTaxInvoice.DCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DCDate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'ChallanCumTaxInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableChallanCumTaxInvoice.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableChallanCumTaxInvoice.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxClass {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.TaxClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClass\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraCharges {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.ExtraChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraCharges\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ExtraChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraChargesType {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.ExtraChargesTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraChargesType\' in table \'ChallanCumTaxInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ExtraChargesTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS1 {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.ADDRESS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS1\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ADDRESS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pincode {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pincode\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TinNo {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.TinNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TinNo\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.TinNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Dis {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.DisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dis\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShippingAdd {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.ShippingAddColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShippingAdd\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ShippingAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BONo {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.BONoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BONo\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.BONoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BODate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableChallanCumTaxInvoice.BODateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BODate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.BODateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DNote {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.DNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DNote\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DNoteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableChallanCumTaxInvoice.DNoteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DNoteDate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DNoteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SuRNo {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.SuRNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuRNo\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.SuRNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DDNo {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.DDNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DDNo\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DDNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DT {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.DTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DT\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string D {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'D\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DtI {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableChallanCumTaxInvoice.DtIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DtI\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DtIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TI {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.TIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TI\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.TIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DtR {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableChallanCumTaxInvoice.DtRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DtR\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DtRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TR {
                get {
                    try {
                        return ((string)(this[this.tableChallanCumTaxInvoice.TRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TR\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.TRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DueDays {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.DueDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDays\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.DueDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseRate {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.ExciseRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseRate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ExciseRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessRate {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.CessRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessRate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.CessRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessRate {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.HCessRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessRate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.HCessRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTRate {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.CSTRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTRate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.CSTRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATRate {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.VATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATRate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.VATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATRate {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.AVATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATRate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.AVATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceRate {
                get {
                    try {
                        return ((decimal)(this[this.tableChallanCumTaxInvoice.ServiceRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceRate\' in table \'ChallanCumTaxInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableChallanCumTaxInvoice.ServiceRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableChallanCumTaxInvoice.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableChallanCumTaxInvoice.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCNONull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DCNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCNONull() {
                this[this.tableChallanCumTaxInvoice.DCNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDCDateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDCDateNull() {
                this[this.tableChallanCumTaxInvoice.DCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableChallanCumTaxInvoice.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableChallanCumTaxInvoice.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableChallanCumTaxInvoice.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableChallanCumTaxInvoice.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableChallanCumTaxInvoice.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableChallanCumTaxInvoice.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableChallanCumTaxInvoice.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableChallanCumTaxInvoice.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableChallanCumTaxInvoice.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableChallanCumTaxInvoice.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableChallanCumTaxInvoice.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableChallanCumTaxInvoice.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableChallanCumTaxInvoice.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableChallanCumTaxInvoice.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableChallanCumTaxInvoice.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.TaxClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassNull() {
                this[this.tableChallanCumTaxInvoice.TaxClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableChallanCumTaxInvoice.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableChallanCumTaxInvoice.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableChallanCumTaxInvoice.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableChallanCumTaxInvoice.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraChargesNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ExtraChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraChargesNull() {
                this[this.tableChallanCumTaxInvoice.ExtraChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraChargesTypeNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ExtraChargesTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraChargesTypeNull() {
                this[this.tableChallanCumTaxInvoice.ExtraChargesTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableChallanCumTaxInvoice.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableChallanCumTaxInvoice.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESS1Null() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ADDRESS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESS1Null() {
                this[this.tableChallanCumTaxInvoice.ADDRESS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableChallanCumTaxInvoice.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableChallanCumTaxInvoice.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPincodeNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPincodeNull() {
                this[this.tableChallanCumTaxInvoice.PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableChallanCumTaxInvoice.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableChallanCumTaxInvoice.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTinNoNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.TinNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTinNoNull() {
                this[this.tableChallanCumTaxInvoice.TinNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisNull() {
                this[this.tableChallanCumTaxInvoice.DisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShippingAddNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ShippingAddColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShippingAddNull() {
                this[this.tableChallanCumTaxInvoice.ShippingAddColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBONoNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.BONoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBONoNull() {
                this[this.tableChallanCumTaxInvoice.BONoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBODateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.BODateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBODateNull() {
                this[this.tableChallanCumTaxInvoice.BODateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNoteNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNoteNull() {
                this[this.tableChallanCumTaxInvoice.DNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNoteDateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DNoteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNoteDateNull() {
                this[this.tableChallanCumTaxInvoice.DNoteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSuRNoNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.SuRNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSuRNoNull() {
                this[this.tableChallanCumTaxInvoice.SuRNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDDNoNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DDNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDDNoNull() {
                this[this.tableChallanCumTaxInvoice.DDNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDTNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDTNull() {
                this[this.tableChallanCumTaxInvoice.DTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNull() {
                this[this.tableChallanCumTaxInvoice.DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDtINull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DtIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDtINull() {
                this[this.tableChallanCumTaxInvoice.DtIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTINull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.TIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTINull() {
                this[this.tableChallanCumTaxInvoice.TIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDtRNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DtRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDtRNull() {
                this[this.tableChallanCumTaxInvoice.DtRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.TRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRNull() {
                this[this.tableChallanCumTaxInvoice.TRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDaysNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.DueDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDaysNull() {
                this[this.tableChallanCumTaxInvoice.DueDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseRateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ExciseRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseRateNull() {
                this[this.tableChallanCumTaxInvoice.ExciseRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessRateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.CessRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessRateNull() {
                this[this.tableChallanCumTaxInvoice.CessRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessRateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.HCessRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessRateNull() {
                this[this.tableChallanCumTaxInvoice.HCessRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTRateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.CSTRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTRateNull() {
                this[this.tableChallanCumTaxInvoice.CSTRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATRateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.VATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATRateNull() {
                this[this.tableChallanCumTaxInvoice.VATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATRateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.AVATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATRateNull() {
                this[this.tableChallanCumTaxInvoice.AVATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceRateNull() {
                return this.IsNull(this.tableChallanCumTaxInvoice.ServiceRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceRateNull() {
                this[this.tableChallanCumTaxInvoice.ServiceRateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentRegister1Row : global::System.Data.DataRow {
            
            private PaymentRegister1DataTable tablePaymentRegister1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentRegister1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentRegister1 = ((PaymentRegister1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ReceiptID {
                get {
                    try {
                        return ((long)(this[this.tablePaymentRegister1.ReceiptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptID\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.ReceiptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister1.ReceiptCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptCode\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.ReceiptCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceiptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentRegister1.ReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptDate\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.ReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tablePaymentRegister1.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentRegister1.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister1.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister1.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister1.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount1 {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentRegister1.NetAmount1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount1\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.NetAmount1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentRegister1.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PendingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentRegister1.PendingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PendingAmount\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.PendingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tablePaymentRegister1.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DueDays {
                get {
                    try {
                        return ((long)(this[this.tablePaymentRegister1.DueDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDays\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.DueDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentRegister1.DueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDate\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.DueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister1.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentRegister1.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RNetAmount {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister1.RNetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RNetAmount\' in table \'PaymentRegister1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister1.RNetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptIDNull() {
                return this.IsNull(this.tablePaymentRegister1.ReceiptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptIDNull() {
                this[this.tablePaymentRegister1.ReceiptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptCodeNull() {
                return this.IsNull(this.tablePaymentRegister1.ReceiptCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptCodeNull() {
                this[this.tablePaymentRegister1.ReceiptCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptDateNull() {
                return this.IsNull(this.tablePaymentRegister1.ReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptDateNull() {
                this[this.tablePaymentRegister1.ReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tablePaymentRegister1.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tablePaymentRegister1.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablePaymentRegister1.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablePaymentRegister1.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tablePaymentRegister1.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tablePaymentRegister1.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablePaymentRegister1.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tablePaymentRegister1.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tablePaymentRegister1.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tablePaymentRegister1.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmount1Null() {
                return this.IsNull(this.tablePaymentRegister1.NetAmount1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmount1Null() {
                this[this.tablePaymentRegister1.NetAmount1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tablePaymentRegister1.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tablePaymentRegister1.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPendingAmountNull() {
                return this.IsNull(this.tablePaymentRegister1.PendingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPendingAmountNull() {
                this[this.tablePaymentRegister1.PendingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tablePaymentRegister1.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tablePaymentRegister1.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDaysNull() {
                return this.IsNull(this.tablePaymentRegister1.DueDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDaysNull() {
                this[this.tablePaymentRegister1.DueDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateNull() {
                return this.IsNull(this.tablePaymentRegister1.DueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateNull() {
                this[this.tablePaymentRegister1.DueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tablePaymentRegister1.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tablePaymentRegister1.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tablePaymentRegister1.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tablePaymentRegister1.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRNetAmountNull() {
                return this.IsNull(this.tablePaymentRegister1.RNetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRNetAmountNull() {
                this[this.tablePaymentRegister1.RNetAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemRegisterRow : global::System.Data.DataRow {
            
            private ItemRegisterDataTable tableItemRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemRegister = ((ItemRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableItemRegister.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string iCode {
                get {
                    try {
                        return ((string)(this[this.tableItemRegister.iCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'iCode\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.iCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableItemRegister.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long UOMID {
                get {
                    try {
                        return ((long)(this[this.tableItemRegister.UOMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOMID\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.UOMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableItemRegister.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Specification {
                get {
                    try {
                        return ((string)(this[this.tableItemRegister.SpecificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Specification\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.SpecificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tableItemRegister.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HSNCode {
                get {
                    try {
                        return ((string)(this[this.tableItemRegister.HSNCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HSNCode\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.HSNCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductCode {
                get {
                    try {
                        return ((string)(this[this.tableItemRegister.ProductCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCode\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.ProductCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMNAME {
                get {
                    try {
                        return ((string)(this[this.tableItemRegister.ITEMNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEMNAME\' in table \'ItemRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemRegister.ITEMNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableItemRegister.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableItemRegister.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsiCodeNull() {
                return this.IsNull(this.tableItemRegister.iCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetiCodeNull() {
                this[this.tableItemRegister.iCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tableItemRegister.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tableItemRegister.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMIDNull() {
                return this.IsNull(this.tableItemRegister.UOMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMIDNull() {
                this[this.tableItemRegister.UOMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableItemRegister.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableItemRegister.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecificationNull() {
                return this.IsNull(this.tableItemRegister.SpecificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecificationNull() {
                this[this.tableItemRegister.SpecificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableItemRegister.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableItemRegister.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHSNCodeNull() {
                return this.IsNull(this.tableItemRegister.HSNCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHSNCodeNull() {
                this[this.tableItemRegister.HSNCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductCodeNull() {
                return this.IsNull(this.tableItemRegister.ProductCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductCodeNull() {
                this[this.tableItemRegister.ProductCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMNAMENull() {
                return this.IsNull(this.tableItemRegister.ITEMNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMNAMENull() {
                this[this.tableItemRegister.ITEMNAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PORegisterRow : global::System.Data.DataRow {
            
            private PORegisterDataTable tablePORegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PORegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePORegister = ((PORegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tablePORegister.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PendingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePORegister.PendingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PendingAmount\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.PendingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePORegister.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePORegister.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tablePORegister.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablePORegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tablePORegister.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tablePORegister.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ContactPerson {
                get {
                    try {
                        return ((string)(this[this.tablePORegister.ContactPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactPerson\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.ContactPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePORegister.DueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDate\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.DueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RecDay {
                get {
                    try {
                        return ((int)(this[this.tablePORegister.RecDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecDay\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.RecDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DueDays {
                get {
                    try {
                        return ((long)(this[this.tablePORegister.DueDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDays\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.DueDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RNetAmount {
                get {
                    try {
                        return ((string)(this[this.tablePORegister.RNetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RNetAmount\' in table \'PORegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePORegister.RNetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tablePORegister.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tablePORegister.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPendingAmountNull() {
                return this.IsNull(this.tablePORegister.PendingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPendingAmountNull() {
                this[this.tablePORegister.PendingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablePORegister.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablePORegister.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tablePORegister.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tablePORegister.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tablePORegister.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tablePORegister.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablePORegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tablePORegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tablePORegister.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tablePORegister.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tablePORegister.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tablePORegister.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsContactPersonNull() {
                return this.IsNull(this.tablePORegister.ContactPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetContactPersonNull() {
                this[this.tablePORegister.ContactPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateNull() {
                return this.IsNull(this.tablePORegister.DueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateNull() {
                this[this.tablePORegister.DueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecDayNull() {
                return this.IsNull(this.tablePORegister.RecDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRecDayNull() {
                this[this.tablePORegister.RecDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDaysNull() {
                return this.IsNull(this.tablePORegister.DueDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDaysNull() {
                this[this.tablePORegister.DueDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRNetAmountNull() {
                return this.IsNull(this.tablePORegister.RNetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRNetAmountNull() {
                this[this.tablePORegister.RNetAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class OrderBookingRow : global::System.Data.DataRow {
            
            private OrderBookingDataTable tableOrderBooking;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OrderBookingRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrderBooking = ((OrderBookingDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemDesc {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.ItemDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemDesc\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.ItemDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MoldNo {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.MoldNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoldNo\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.MoldNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderBooking.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OQty {
                get {
                    try {
                        return ((decimal)(this[this.tableOrderBooking.OQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OQty\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.OQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SQty {
                get {
                    try {
                        return ((int)(this[this.tableOrderBooking.SQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SQty\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.SQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Diff {
                get {
                    try {
                        return ((int)(this[this.tableOrderBooking.DiffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diff\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.DiffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OrdValue {
                get {
                    try {
                        return ((int)(this[this.tableOrderBooking.OrdValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrdValue\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.OrdValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SupplyValue {
                get {
                    try {
                        return ((int)(this[this.tableOrderBooking.SupplyValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplyValue\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.SupplyValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int diff1 {
                get {
                    try {
                        return ((int)(this[this.tableOrderBooking.diff1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diff1\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.diff1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long OrderBookingID {
                get {
                    try {
                        return ((long)(this[this.tableOrderBooking.OrderBookingIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrderBookingID\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.OrderBookingIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ThirdPartyControl {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.ThirdPartyControlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThirdPartyControl\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.ThirdPartyControlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseCode {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.PurchaseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseCode\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.PurchaseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DQty {
                get {
                    try {
                        return ((string)(this[this.tableOrderBooking.DQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DQty\' in table \'OrderBooking\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrderBooking.DQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableOrderBooking.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableOrderBooking.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableOrderBooking.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableOrderBooking.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemDescNull() {
                return this.IsNull(this.tableOrderBooking.ItemDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemDescNull() {
                this[this.tableOrderBooking.ItemDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoldNoNull() {
                return this.IsNull(this.tableOrderBooking.MoldNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoldNoNull() {
                this[this.tableOrderBooking.MoldNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableOrderBooking.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableOrderBooking.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOQtyNull() {
                return this.IsNull(this.tableOrderBooking.OQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOQtyNull() {
                this[this.tableOrderBooking.OQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQtyNull() {
                return this.IsNull(this.tableOrderBooking.SQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQtyNull() {
                this[this.tableOrderBooking.SQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiffNull() {
                return this.IsNull(this.tableOrderBooking.DiffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiffNull() {
                this[this.tableOrderBooking.DiffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrdValueNull() {
                return this.IsNull(this.tableOrderBooking.OrdValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrdValueNull() {
                this[this.tableOrderBooking.OrdValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSupplyValueNull() {
                return this.IsNull(this.tableOrderBooking.SupplyValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSupplyValueNull() {
                this[this.tableOrderBooking.SupplyValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdiff1Null() {
                return this.IsNull(this.tableOrderBooking.diff1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdiff1Null() {
                this[this.tableOrderBooking.diff1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOrderBookingIDNull() {
                return this.IsNull(this.tableOrderBooking.OrderBookingIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOrderBookingIDNull() {
                this[this.tableOrderBooking.OrderBookingIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsThirdPartyControlNull() {
                return this.IsNull(this.tableOrderBooking.ThirdPartyControlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetThirdPartyControlNull() {
                this[this.tableOrderBooking.ThirdPartyControlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tableOrderBooking.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tableOrderBooking.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableOrderBooking.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableOrderBooking.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseCodeNull() {
                return this.IsNull(this.tableOrderBooking.PurchaseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseCodeNull() {
                this[this.tableOrderBooking.PurchaseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDQtyNull() {
                return this.IsNull(this.tableOrderBooking.DQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDQtyNull() {
                this[this.tableOrderBooking.DQtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemPicRow : global::System.Data.DataRow {
            
            private ItemPicDataTable tableItemPic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemPicRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemPic = ((ItemPicDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] DocName {
                get {
                    try {
                        return ((byte[])(this[this.tableItemPic.DocNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DocName\' in table \'ItemPic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemPic.DocNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableItemPic.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'ItemPic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemPic.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocNameNull() {
                return this.IsNull(this.tableItemPic.DocNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocNameNull() {
                this[this.tableItemPic.DocNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableItemPic.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableItemPic.ItemNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Ledger_ReportRow : global::System.Data.DataRow {
            
            private Ledger_ReportDataTable tableLedger_Report;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Ledger_ReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLedger_Report = ((Ledger_ReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccCode {
                get {
                    try {
                        return ((string)(this[this.tableLedger_Report.AccCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccCode\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.AccCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccName {
                get {
                    try {
                        return ((string)(this[this.tableLedger_Report.AccNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccName\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.AccNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TransactionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLedger_Report.TransactionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionDate\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.TransactionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TransactionType {
                get {
                    try {
                        return ((string)(this[this.tableLedger_Report.TransactionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionType\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.TransactionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableLedger_Report.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CRAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableLedger_Report.CRAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CRAmount\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.CRAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DBAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableLedger_Report.DBAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DBAmount\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.DBAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccountName {
                get {
                    try {
                        return ((string)(this[this.tableLedger_Report.AccountNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccountName\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.AccountNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LedgerID {
                get {
                    try {
                        return ((long)(this[this.tableLedger_Report.LedgerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LedgerID\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.LedgerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CreditNoteAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableLedger_Report.CreditNoteAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditNoteAmount\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.CreditNoteAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SrNo {
                get {
                    try {
                        return ((int)(this[this.tableLedger_Report.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DebitNoteAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableLedger_Report.DebitNoteAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebitNoteAmount\' in table \'Ledger_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLedger_Report.DebitNoteAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccCodeNull() {
                return this.IsNull(this.tableLedger_Report.AccCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccCodeNull() {
                this[this.tableLedger_Report.AccCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccNameNull() {
                return this.IsNull(this.tableLedger_Report.AccNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccNameNull() {
                this[this.tableLedger_Report.AccNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransactionDateNull() {
                return this.IsNull(this.tableLedger_Report.TransactionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransactionDateNull() {
                this[this.tableLedger_Report.TransactionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransactionTypeNull() {
                return this.IsNull(this.tableLedger_Report.TransactionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransactionTypeNull() {
                this[this.tableLedger_Report.TransactionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableLedger_Report.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableLedger_Report.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCRAmountNull() {
                return this.IsNull(this.tableLedger_Report.CRAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCRAmountNull() {
                this[this.tableLedger_Report.CRAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDBAmountNull() {
                return this.IsNull(this.tableLedger_Report.DBAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDBAmountNull() {
                this[this.tableLedger_Report.DBAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccountNameNull() {
                return this.IsNull(this.tableLedger_Report.AccountNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccountNameNull() {
                this[this.tableLedger_Report.AccountNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLedgerIDNull() {
                return this.IsNull(this.tableLedger_Report.LedgerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLedgerIDNull() {
                this[this.tableLedger_Report.LedgerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNoteAmountNull() {
                return this.IsNull(this.tableLedger_Report.CreditNoteAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNoteAmountNull() {
                this[this.tableLedger_Report.CreditNoteAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tableLedger_Report.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tableLedger_Report.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteAmountNull() {
                return this.IsNull(this.tableLedger_Report.DebitNoteAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteAmountNull() {
                this[this.tableLedger_Report.DebitNoteAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DebitNoteRow : global::System.Data.DataRow {
            
            private DebitNoteDataTable tableDebitNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DebitNoteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDebitNote = ((DebitNoteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DNnumber {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.DNnumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DNnumber\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.DNnumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DNDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDebitNote.DNDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DNDate\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.DNDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal finalamount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.finalamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'finalamount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.finalamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DebitNoteAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.DebitNoteAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebitNoteAmount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.DebitNoteAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long VendorID {
                get {
                    try {
                        return ((long)(this[this.tableDebitNote.VendorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorID\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableDebitNote.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxClass {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.TaxClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClass\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS1 {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.ADDRESS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS1\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.ADDRESS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pincode {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pincode\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemSpec {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.ItemSpecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemSpec\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.ItemSpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemSSpec {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.ItemSSpecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemSSpec\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.ItemSSpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HSNCode {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.HSNCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HSNCode\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.HSNCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Dis {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.DisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dis\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.DisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableDebitNote.DiscountAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountAmt\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.DiscountAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableDebitNote.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mobile\' in table \'DebitNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDebitNote.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNnumberNull() {
                return this.IsNull(this.tableDebitNote.DNnumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNnumberNull() {
                this[this.tableDebitNote.DNnumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDNDateNull() {
                return this.IsNull(this.tableDebitNote.DNDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDNDateNull() {
                this[this.tableDebitNote.DNDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableDebitNote.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableDebitNote.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableDebitNote.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableDebitNote.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableDebitNote.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableDebitNote.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableDebitNote.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableDebitNote.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableDebitNote.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableDebitNote.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableDebitNote.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableDebitNote.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableDebitNote.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableDebitNote.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableDebitNote.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableDebitNote.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableDebitNote.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableDebitNote.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableDebitNote.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableDebitNote.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableDebitNote.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableDebitNote.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfinalamountNull() {
                return this.IsNull(this.tableDebitNote.finalamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfinalamountNull() {
                this[this.tableDebitNote.finalamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteAmountNull() {
                return this.IsNull(this.tableDebitNote.DebitNoteAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteAmountNull() {
                this[this.tableDebitNote.DebitNoteAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorIDNull() {
                return this.IsNull(this.tableDebitNote.VendorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorIDNull() {
                this[this.tableDebitNote.VendorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableDebitNote.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableDebitNote.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableDebitNote.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableDebitNote.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassNull() {
                return this.IsNull(this.tableDebitNote.TaxClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassNull() {
                this[this.tableDebitNote.TaxClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableDebitNote.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableDebitNote.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableDebitNote.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableDebitNote.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableDebitNote.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableDebitNote.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableDebitNote.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableDebitNote.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableDebitNote.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableDebitNote.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESS1Null() {
                return this.IsNull(this.tableDebitNote.ADDRESS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESS1Null() {
                this[this.tableDebitNote.ADDRESS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableDebitNote.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableDebitNote.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableDebitNote.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableDebitNote.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPincodeNull() {
                return this.IsNull(this.tableDebitNote.PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPincodeNull() {
                this[this.tableDebitNote.PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableDebitNote.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableDebitNote.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableDebitNote.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableDebitNote.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemSpecNull() {
                return this.IsNull(this.tableDebitNote.ItemSpecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemSpecNull() {
                this[this.tableDebitNote.ItemSpecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemSSpecNull() {
                return this.IsNull(this.tableDebitNote.ItemSSpecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemSSpecNull() {
                this[this.tableDebitNote.ItemSSpecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHSNCodeNull() {
                return this.IsNull(this.tableDebitNote.HSNCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHSNCodeNull() {
                this[this.tableDebitNote.HSNCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisNull() {
                return this.IsNull(this.tableDebitNote.DisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisNull() {
                this[this.tableDebitNote.DisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountAmtNull() {
                return this.IsNull(this.tableDebitNote.DiscountAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountAmtNull() {
                this[this.tableDebitNote.DiscountAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNull() {
                return this.IsNull(this.tableDebitNote.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNull() {
                this[this.tableDebitNote.MobileColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CreditNoteRow : global::System.Data.DataRow {
            
            private CreditNoteDataTable tableCreditNote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CreditNoteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCreditNote = ((CreditNoteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNnumber {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.CNnumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNnumber\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.CNnumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CNDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCreditNote.CNDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CNDate\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.CNDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.TotalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AmountAfterExcise {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.AmountAfterExciseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountAfterExcise\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.AmountAfterExciseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Discount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.DiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.DiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal finalamount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.finalamountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'finalamount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.finalamountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CreditNoteAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.CreditNoteAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditNoteAmount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.CreditNoteAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableCreditNote.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ItemID {
                get {
                    try {
                        return ((long)(this[this.tableCreditNote.ItemIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemID\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.ItemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TaxClass {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.TaxClassColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TaxClass\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.TaxClassColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMER {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.CUSTOMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMER\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.CUSTOMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS1 {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.ADDRESS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS1\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.ADDRESS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string City {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'City\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string State {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'State\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pincode {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pincode\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemSpec {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.ItemSpecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemSpec\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.ItemSpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemSSpec {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.ItemSSpecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemSSpec\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.ItemSSpecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HSNCode {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.HSNCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HSNCode\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.HSNCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Dis {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.DisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dis\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.DisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DiscountAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableCreditNote.DiscountAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountAmt\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.DiscountAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableCreditNote.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'CreditNote\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCreditNote.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNnumberNull() {
                return this.IsNull(this.tableCreditNote.CNnumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNnumberNull() {
                this[this.tableCreditNote.CNnumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNDateNull() {
                return this.IsNull(this.tableCreditNote.CNDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNDateNull() {
                this[this.tableCreditNote.CNDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalAmountNull() {
                return this.IsNull(this.tableCreditNote.TotalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalAmountNull() {
                this[this.tableCreditNote.TotalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableCreditNote.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableCreditNote.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableCreditNote.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableCreditNote.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableCreditNote.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableCreditNote.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableCreditNote.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableCreditNote.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountAfterExciseNull() {
                return this.IsNull(this.tableCreditNote.AmountAfterExciseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountAfterExciseNull() {
                this[this.tableCreditNote.AmountAfterExciseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableCreditNote.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableCreditNote.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableCreditNote.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableCreditNote.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableCreditNote.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableCreditNote.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountNull() {
                return this.IsNull(this.tableCreditNote.DiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountNull() {
                this[this.tableCreditNote.DiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableCreditNote.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableCreditNote.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfinalamountNull() {
                return this.IsNull(this.tableCreditNote.finalamountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfinalamountNull() {
                this[this.tableCreditNote.finalamountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNoteAmountNull() {
                return this.IsNull(this.tableCreditNote.CreditNoteAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNoteAmountNull() {
                this[this.tableCreditNote.CreditNoteAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableCreditNote.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableCreditNote.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableCreditNote.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableCreditNote.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemIDNull() {
                return this.IsNull(this.tableCreditNote.ItemIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemIDNull() {
                this[this.tableCreditNote.ItemIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxClassNull() {
                return this.IsNull(this.tableCreditNote.TaxClassColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxClassNull() {
                this[this.tableCreditNote.TaxClassColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableCreditNote.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableCreditNote.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableCreditNote.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableCreditNote.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableCreditNote.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableCreditNote.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableCreditNote.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableCreditNote.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNull() {
                return this.IsNull(this.tableCreditNote.CUSTOMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNull() {
                this[this.tableCreditNote.CUSTOMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADDRESS1Null() {
                return this.IsNull(this.tableCreditNote.ADDRESS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADDRESS1Null() {
                this[this.tableCreditNote.ADDRESS1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCityNull() {
                return this.IsNull(this.tableCreditNote.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCityNull() {
                this[this.tableCreditNote.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStateNull() {
                return this.IsNull(this.tableCreditNote.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStateNull() {
                this[this.tableCreditNote.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPincodeNull() {
                return this.IsNull(this.tableCreditNote.PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPincodeNull() {
                this[this.tableCreditNote.PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableCreditNote.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableCreditNote.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableCreditNote.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableCreditNote.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemSpecNull() {
                return this.IsNull(this.tableCreditNote.ItemSpecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemSpecNull() {
                this[this.tableCreditNote.ItemSpecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemSSpecNull() {
                return this.IsNull(this.tableCreditNote.ItemSSpecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemSSpecNull() {
                this[this.tableCreditNote.ItemSSpecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHSNCodeNull() {
                return this.IsNull(this.tableCreditNote.HSNCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHSNCodeNull() {
                this[this.tableCreditNote.HSNCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisNull() {
                return this.IsNull(this.tableCreditNote.DisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisNull() {
                this[this.tableCreditNote.DisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDiscountAmtNull() {
                return this.IsNull(this.tableCreditNote.DiscountAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDiscountAmtNull() {
                this[this.tableCreditNote.DiscountAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableCreditNote.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableCreditNote.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableCreditNote.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableCreditNote.EmailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ServiceInvoiceRow : global::System.Data.DataRow {
            
            private ServiceInvoiceDataTable tableServiceInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ServiceInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServiceInvoice = ((ServiceInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long ServiceId {
                get {
                    try {
                        return ((long)(this[this.tableServiceInvoice.ServiceIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceId\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ServiceIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RequestNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.RequestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestNo\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.RequestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ServiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableServiceInvoice.ServiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceDate\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ServiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MobileNo {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.MobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MobileNo\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.MobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EMAIL\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROBLEM {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.PROBLEMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROBLEM\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.PROBLEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SPARESUSED {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.SPARESUSEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPARESUSED\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.SPARESUSEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SOLUTIONS {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.SOLUTIONSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SOLUTIONS\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.SOLUTIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SPARECHARGES {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.SPARECHARGESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SPARECHARGES\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.SPARECHARGESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SERVICECHARGES {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.SERVICECHARGESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SERVICECHARGES\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.SERVICECHARGESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTENDEDBY {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.ATTENDEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ATTENDEDBY\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ATTENDEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CALLTYPE {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.CALLTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CALLTYPE\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.CALLTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name1 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Name1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name1\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Name1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name2 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Name2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name2\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Name2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name3 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Name3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name3\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Name3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name4 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Name4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name4\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Name4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name5 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Name5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name5\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Name5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name6 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Name6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name6\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Name6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value1 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Value1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value1\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Value1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value2 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Value2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value2\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Value2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value3 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Value3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value3\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Value3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value4 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Value4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value4\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Value4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value5 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Value5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value5\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Value5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Value6 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Value6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value6\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Value6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMNAME {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.ITEMNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEMNAME\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ITEMNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ITEMSPEC {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.ITEMSPECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ITEMSPEC\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ITEMSPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Qty {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UOM {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.UOMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UOM\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.UOMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ServiceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.ServiceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ServiceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.CessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CessAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.CessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.HCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HCessAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.HCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.VATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATRate\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.VATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATRate {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.AVATRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATRate\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.AVATRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExciseAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.ExciseAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExciseAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ExciseAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.CSTAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CSTAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.CSTAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal VATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.VATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.VATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AVATAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.AVATAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AVATAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.AVATAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone1 {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.Phone1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone1\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.Phone1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CITY {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.CITYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CITY\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATE {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATE\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pincode {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pincode\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.CurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Currency\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SBCessAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.SBCessAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SBCessAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.SBCessAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ExtraTaxAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableServiceInvoice.ExtraTaxAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraTaxAmount\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ExtraTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ExtraTaxType {
                get {
                    try {
                        return ((string)(this[this.tableServiceInvoice.ExtraTaxTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExtraTaxType\' in table \'ServiceInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableServiceInvoice.ExtraTaxTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceIdNull() {
                return this.IsNull(this.tableServiceInvoice.ServiceIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceIdNull() {
                this[this.tableServiceInvoice.ServiceIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestNoNull() {
                return this.IsNull(this.tableServiceInvoice.RequestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestNoNull() {
                this[this.tableServiceInvoice.RequestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceDateNull() {
                return this.IsNull(this.tableServiceInvoice.ServiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceDateNull() {
                this[this.tableServiceInvoice.ServiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableServiceInvoice.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableServiceInvoice.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAddressNull() {
                return this.IsNull(this.tableServiceInvoice.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAddressNull() {
                this[this.tableServiceInvoice.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMobileNoNull() {
                return this.IsNull(this.tableServiceInvoice.MobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMobileNoNull() {
                this[this.tableServiceInvoice.MobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableServiceInvoice.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMAILNull() {
                this[this.tableServiceInvoice.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROBLEMNull() {
                return this.IsNull(this.tableServiceInvoice.PROBLEMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROBLEMNull() {
                this[this.tableServiceInvoice.PROBLEMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPARESUSEDNull() {
                return this.IsNull(this.tableServiceInvoice.SPARESUSEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPARESUSEDNull() {
                this[this.tableServiceInvoice.SPARESUSEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSOLUTIONSNull() {
                return this.IsNull(this.tableServiceInvoice.SOLUTIONSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSOLUTIONSNull() {
                this[this.tableServiceInvoice.SOLUTIONSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSPARECHARGESNull() {
                return this.IsNull(this.tableServiceInvoice.SPARECHARGESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSPARECHARGESNull() {
                this[this.tableServiceInvoice.SPARECHARGESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICECHARGESNull() {
                return this.IsNull(this.tableServiceInvoice.SERVICECHARGESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICECHARGESNull() {
                this[this.tableServiceInvoice.SERVICECHARGESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTENDEDBYNull() {
                return this.IsNull(this.tableServiceInvoice.ATTENDEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTENDEDBYNull() {
                this[this.tableServiceInvoice.ATTENDEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCALLTYPENull() {
                return this.IsNull(this.tableServiceInvoice.CALLTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCALLTYPENull() {
                this[this.tableServiceInvoice.CALLTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableServiceInvoice.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableServiceInvoice.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableServiceInvoice.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableServiceInvoice.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName1Null() {
                return this.IsNull(this.tableServiceInvoice.Name1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName1Null() {
                this[this.tableServiceInvoice.Name1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName2Null() {
                return this.IsNull(this.tableServiceInvoice.Name2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName2Null() {
                this[this.tableServiceInvoice.Name2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName3Null() {
                return this.IsNull(this.tableServiceInvoice.Name3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName3Null() {
                this[this.tableServiceInvoice.Name3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName4Null() {
                return this.IsNull(this.tableServiceInvoice.Name4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName4Null() {
                this[this.tableServiceInvoice.Name4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName5Null() {
                return this.IsNull(this.tableServiceInvoice.Name5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName5Null() {
                this[this.tableServiceInvoice.Name5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsName6Null() {
                return this.IsNull(this.tableServiceInvoice.Name6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetName6Null() {
                this[this.tableServiceInvoice.Name6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue1Null() {
                return this.IsNull(this.tableServiceInvoice.Value1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue1Null() {
                this[this.tableServiceInvoice.Value1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue2Null() {
                return this.IsNull(this.tableServiceInvoice.Value2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue2Null() {
                this[this.tableServiceInvoice.Value2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue3Null() {
                return this.IsNull(this.tableServiceInvoice.Value3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue3Null() {
                this[this.tableServiceInvoice.Value3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue4Null() {
                return this.IsNull(this.tableServiceInvoice.Value4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue4Null() {
                this[this.tableServiceInvoice.Value4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue5Null() {
                return this.IsNull(this.tableServiceInvoice.Value5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue5Null() {
                this[this.tableServiceInvoice.Value5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValue6Null() {
                return this.IsNull(this.tableServiceInvoice.Value6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValue6Null() {
                this[this.tableServiceInvoice.Value6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMNAMENull() {
                return this.IsNull(this.tableServiceInvoice.ITEMNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMNAMENull() {
                this[this.tableServiceInvoice.ITEMNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsITEMSPECNull() {
                return this.IsNull(this.tableServiceInvoice.ITEMSPECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetITEMSPECNull() {
                this[this.tableServiceInvoice.ITEMSPECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableServiceInvoice.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableServiceInvoice.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUOMNull() {
                return this.IsNull(this.tableServiceInvoice.UOMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUOMNull() {
                this[this.tableServiceInvoice.UOMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRateNull() {
                return this.IsNull(this.tableServiceInvoice.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRateNull() {
                this[this.tableServiceInvoice.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull() {
                return this.IsNull(this.tableServiceInvoice.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull() {
                this[this.tableServiceInvoice.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsServiceAmountNull() {
                return this.IsNull(this.tableServiceInvoice.ServiceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetServiceAmountNull() {
                this[this.tableServiceInvoice.ServiceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCessAmountNull() {
                return this.IsNull(this.tableServiceInvoice.CessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCessAmountNull() {
                this[this.tableServiceInvoice.CessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHCessAmountNull() {
                return this.IsNull(this.tableServiceInvoice.HCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHCessAmountNull() {
                this[this.tableServiceInvoice.HCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATRateNull() {
                return this.IsNull(this.tableServiceInvoice.VATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATRateNull() {
                this[this.tableServiceInvoice.VATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATRateNull() {
                return this.IsNull(this.tableServiceInvoice.AVATRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATRateNull() {
                this[this.tableServiceInvoice.AVATRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExciseAmountNull() {
                return this.IsNull(this.tableServiceInvoice.ExciseAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExciseAmountNull() {
                this[this.tableServiceInvoice.ExciseAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTAmountNull() {
                return this.IsNull(this.tableServiceInvoice.CSTAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTAmountNull() {
                this[this.tableServiceInvoice.CSTAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVATAmountNull() {
                return this.IsNull(this.tableServiceInvoice.VATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVATAmountNull() {
                this[this.tableServiceInvoice.VATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVATAmountNull() {
                return this.IsNull(this.tableServiceInvoice.AVATAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVATAmountNull() {
                this[this.tableServiceInvoice.AVATAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhone1Null() {
                return this.IsNull(this.tableServiceInvoice.Phone1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhone1Null() {
                this[this.tableServiceInvoice.Phone1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCITYNull() {
                return this.IsNull(this.tableServiceInvoice.CITYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCITYNull() {
                this[this.tableServiceInvoice.CITYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATENull() {
                return this.IsNull(this.tableServiceInvoice.STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATENull() {
                this[this.tableServiceInvoice.STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPincodeNull() {
                return this.IsNull(this.tableServiceInvoice.PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPincodeNull() {
                this[this.tableServiceInvoice.PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableServiceInvoice.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableServiceInvoice.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNull() {
                return this.IsNull(this.tableServiceInvoice.CurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNull() {
                this[this.tableServiceInvoice.CurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tableServiceInvoice.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNameNull() {
                this[this.tableServiceInvoice.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBCessAmountNull() {
                return this.IsNull(this.tableServiceInvoice.SBCessAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBCessAmountNull() {
                this[this.tableServiceInvoice.SBCessAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraTaxAmountNull() {
                return this.IsNull(this.tableServiceInvoice.ExtraTaxAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraTaxAmountNull() {
                this[this.tableServiceInvoice.ExtraTaxAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsExtraTaxTypeNull() {
                return this.IsNull(this.tableServiceInvoice.ExtraTaxTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetExtraTaxTypeNull() {
                this[this.tableServiceInvoice.ExtraTaxTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProfitnLossStatementRow : global::System.Data.DataRow {
            
            private ProfitnLossStatementDataTable tableProfitnLossStatement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProfitnLossStatementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProfitnLossStatement = ((ProfitnLossStatementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalSalesAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableProfitnLossStatement.TotalSalesAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalSalesAmt\' in table \'ProfitnLossStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProfitnLossStatement.TotalSalesAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalPurchaseAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableProfitnLossStatement.TotalPurchaseAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPurchaseAmt\' in table \'ProfitnLossStatement\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableProfitnLossStatement.TotalPurchaseAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalExpenseAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableProfitnLossStatement.TotalExpenseAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalExpenseAmt\' in table \'ProfitnLossStatement\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProfitnLossStatement.TotalExpenseAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TotalProfit {
                get {
                    try {
                        return ((decimal)(this[this.tableProfitnLossStatement.TotalProfitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalProfit\' in table \'ProfitnLossStatement\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProfitnLossStatement.TotalProfitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalSalesAmtNull() {
                return this.IsNull(this.tableProfitnLossStatement.TotalSalesAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalSalesAmtNull() {
                this[this.tableProfitnLossStatement.TotalSalesAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalPurchaseAmtNull() {
                return this.IsNull(this.tableProfitnLossStatement.TotalPurchaseAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalPurchaseAmtNull() {
                this[this.tableProfitnLossStatement.TotalPurchaseAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalExpenseAmtNull() {
                return this.IsNull(this.tableProfitnLossStatement.TotalExpenseAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalExpenseAmtNull() {
                this[this.tableProfitnLossStatement.TotalExpenseAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalProfitNull() {
                return this.IsNull(this.tableProfitnLossStatement.TotalProfitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalProfitNull() {
                this[this.tableProfitnLossStatement.TotalProfitColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentReturnRegisterRow : global::System.Data.DataRow {
            
            private PaymentReturnRegisterDataTable tablePaymentReturnRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentReturnRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentReturnRegister = ((PaymentReturnRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DebitNoteID {
                get {
                    try {
                        return ((long)(this[this.tablePaymentReturnRegister.DebitNoteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebitNoteID\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.DebitNoteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DebitNoteCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnRegister.DebitNoteCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebitNoteCode\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.DebitNoteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DebitNoteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentReturnRegister.DebitNoteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DebitNoteDate\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.DebitNoteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long VendorID {
                get {
                    try {
                        return ((long)(this[this.tablePaymentReturnRegister.VendorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorID\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.VendorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentReturnRegister.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnRegister.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnRegister.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnRegister.VendorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCode\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.VendorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FinalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentReturnRegister.FinalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalAmount\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.FinalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentReturnRegister.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PendingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentReturnRegister.PendingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PendingAmount\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.PendingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tablePaymentReturnRegister.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DueDays {
                get {
                    try {
                        return ((long)(this[this.tablePaymentReturnRegister.DueDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDays\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.DueDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentReturnRegister.DueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDate\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.DueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnRegister.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentReturnRegister.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RNetAmount {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnRegister.RNetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RNetAmount\' in table \'PaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnRegister.RNetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteIDNull() {
                return this.IsNull(this.tablePaymentReturnRegister.DebitNoteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteIDNull() {
                this[this.tablePaymentReturnRegister.DebitNoteIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteCodeNull() {
                return this.IsNull(this.tablePaymentReturnRegister.DebitNoteCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteCodeNull() {
                this[this.tablePaymentReturnRegister.DebitNoteCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDebitNoteDateNull() {
                return this.IsNull(this.tablePaymentReturnRegister.DebitNoteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDebitNoteDateNull() {
                this[this.tablePaymentReturnRegister.DebitNoteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorIDNull() {
                return this.IsNull(this.tablePaymentReturnRegister.VendorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorIDNull() {
                this[this.tablePaymentReturnRegister.VendorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablePaymentReturnRegister.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablePaymentReturnRegister.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tablePaymentReturnRegister.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tablePaymentReturnRegister.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tablePaymentReturnRegister.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tablePaymentReturnRegister.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tablePaymentReturnRegister.VendorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCodeNull() {
                this[this.tablePaymentReturnRegister.VendorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalAmountNull() {
                return this.IsNull(this.tablePaymentReturnRegister.FinalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalAmountNull() {
                this[this.tablePaymentReturnRegister.FinalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tablePaymentReturnRegister.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tablePaymentReturnRegister.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPendingAmountNull() {
                return this.IsNull(this.tablePaymentReturnRegister.PendingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPendingAmountNull() {
                this[this.tablePaymentReturnRegister.PendingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tablePaymentReturnRegister.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tablePaymentReturnRegister.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDaysNull() {
                return this.IsNull(this.tablePaymentReturnRegister.DueDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDaysNull() {
                this[this.tablePaymentReturnRegister.DueDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateNull() {
                return this.IsNull(this.tablePaymentReturnRegister.DueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateNull() {
                this[this.tablePaymentReturnRegister.DueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tablePaymentReturnRegister.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tablePaymentReturnRegister.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tablePaymentReturnRegister.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tablePaymentReturnRegister.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRNetAmountNull() {
                return this.IsNull(this.tablePaymentReturnRegister.RNetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRNetAmountNull() {
                this[this.tablePaymentReturnRegister.RNetAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CustomerPaymentReturnRegisterRow : global::System.Data.DataRow {
            
            private CustomerPaymentReturnRegisterDataTable tableCustomerPaymentReturnRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CustomerPaymentReturnRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCustomerPaymentReturnRegister = ((CustomerPaymentReturnRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CreditNoteID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerPaymentReturnRegister.CreditNoteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditNoteID\' in table \'CustomerPaymentReturnRegister\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.CreditNoteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CreditNoteCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentReturnRegister.CreditNoteCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditNoteCode\' in table \'CustomerPaymentReturnRegister\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.CreditNoteCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreditNoteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerPaymentReturnRegister.CreditNoteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditNoteDate\' in table \'CustomerPaymentReturnRegister\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.CreditNoteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CustomerID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerPaymentReturnRegister.CustomerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerID\' in table \'CustomerPaymentReturnRegister\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPaymentReturnRegister.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'CustomerPaymentReturnRegister\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentReturnRegister.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'CustomerPaymentReturnRegister\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentReturnRegister.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'CustomerPaymentReturnRegister\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentReturnRegister.CustomerCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerCode\' in table \'CustomerPaymentReturnRegister\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.CustomerCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FinalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPaymentReturnRegister.FinalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalAmount\' in table \'CustomerPaymentReturnRegister\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.FinalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PaidAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPaymentReturnRegister.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'CustomerPaymentReturnRegister\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PendingAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableCustomerPaymentReturnRegister.PendingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PendingAmount\' in table \'CustomerPaymentReturnRegister\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.PendingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long SIID {
                get {
                    try {
                        return ((long)(this[this.tableCustomerPaymentReturnRegister.SIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIID\' in table \'CustomerPaymentReturnRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.SIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DueDays {
                get {
                    try {
                        return ((long)(this[this.tableCustomerPaymentReturnRegister.DueDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDays\' in table \'CustomerPaymentReturnRegister\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.DueDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerPaymentReturnRegister.DueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDate\' in table \'CustomerPaymentReturnRegister\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.DueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SalesCode {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentReturnRegister.SalesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesCode\' in table \'CustomerPaymentReturnRegister\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.SalesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SalesDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCustomerPaymentReturnRegister.SalesDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SalesDate\' in table \'CustomerPaymentReturnRegister\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.SalesDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RNetAmount {
                get {
                    try {
                        return ((string)(this[this.tableCustomerPaymentReturnRegister.RNetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RNetAmount\' in table \'CustomerPaymentReturnRegister\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCustomerPaymentReturnRegister.RNetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNoteIDNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.CreditNoteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNoteIDNull() {
                this[this.tableCustomerPaymentReturnRegister.CreditNoteIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNoteCodeNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.CreditNoteCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNoteCodeNull() {
                this[this.tableCustomerPaymentReturnRegister.CreditNoteCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreditNoteDateNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.CreditNoteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreditNoteDateNull() {
                this[this.tableCustomerPaymentReturnRegister.CreditNoteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerIDNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.CustomerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerIDNull() {
                this[this.tableCustomerPaymentReturnRegister.CustomerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tableCustomerPaymentReturnRegister.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableCustomerPaymentReturnRegister.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerNameNull() {
                this[this.tableCustomerPaymentReturnRegister.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerCodeNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.CustomerCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerCodeNull() {
                this[this.tableCustomerPaymentReturnRegister.CustomerCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinalAmountNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.FinalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinalAmountNull() {
                this[this.tableCustomerPaymentReturnRegister.FinalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tableCustomerPaymentReturnRegister.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPendingAmountNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.PendingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPendingAmountNull() {
                this[this.tableCustomerPaymentReturnRegister.PendingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIIDNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.SIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIIDNull() {
                this[this.tableCustomerPaymentReturnRegister.SIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDaysNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.DueDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDaysNull() {
                this[this.tableCustomerPaymentReturnRegister.DueDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.DueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateNull() {
                this[this.tableCustomerPaymentReturnRegister.DueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesCodeNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.SalesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesCodeNull() {
                this[this.tableCustomerPaymentReturnRegister.SalesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSalesDateNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.SalesDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSalesDateNull() {
                this[this.tableCustomerPaymentReturnRegister.SalesDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRNetAmountNull() {
                return this.IsNull(this.tableCustomerPaymentReturnRegister.RNetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRNetAmountNull() {
                this[this.tableCustomerPaymentReturnRegister.RNetAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentReturnReceiptRow : global::System.Data.DataRow {
            
            private PaymentReturnReceiptDataTable tablePaymentReturnReceipt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentReturnReceiptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentReturnReceipt = ((PaymentReturnReceiptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptReturnCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnReceipt.ReceiptReturnCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptReturnCode\' in table \'PaymentReturnReceipt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnReceipt.ReceiptReturnCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTOMERNAME {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnReceipt.CUSTOMERNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUSTOMERNAME\' in table \'PaymentReturnReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnReceipt.CUSTOMERNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NetAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablePaymentReturnReceipt.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'PaymentReturnReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnReceipt.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceiptReturnDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentReturnReceipt.ReceiptReturnDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptReturnDate\' in table \'PaymentReturnReceipt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnReceipt.ReceiptReturnDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnReceipt.CurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Currency\' in table \'PaymentReturnReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnReceipt.CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tablePaymentReturnReceipt.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'PaymentReturnReceipt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentReturnReceipt.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptReturnCodeNull() {
                return this.IsNull(this.tablePaymentReturnReceipt.ReceiptReturnCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptReturnCodeNull() {
                this[this.tablePaymentReturnReceipt.ReceiptReturnCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUSTOMERNAMENull() {
                return this.IsNull(this.tablePaymentReturnReceipt.CUSTOMERNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUSTOMERNAMENull() {
                this[this.tablePaymentReturnReceipt.CUSTOMERNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablePaymentReturnReceipt.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablePaymentReturnReceipt.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptReturnDateNull() {
                return this.IsNull(this.tablePaymentReturnReceipt.ReceiptReturnDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptReturnDateNull() {
                this[this.tablePaymentReturnReceipt.ReceiptReturnDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNull() {
                return this.IsNull(this.tablePaymentReturnReceipt.CurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNull() {
                this[this.tablePaymentReturnReceipt.CurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tablePaymentReturnReceipt.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrencyNameNull() {
                this[this.tablePaymentReturnReceipt.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PaymentRegisterRow : global::System.Data.DataRow {
            
            private PaymentRegisterDataTable tablePaymentRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PaymentRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePaymentRegister = ((PaymentRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.VendorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorCode\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.VendorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VendorName {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.VendorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VendorName\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.VendorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PurchaseCode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.PurchaseCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseCode\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.PurchaseCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PurchaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentRegister.PurchaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PurchaseDate\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.PurchaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long DueDays {
                get {
                    try {
                        return ((long)(this[this.tablePaymentRegister.DueDaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDays\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.DueDaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DueDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentRegister.DueDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DueDate\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.DueDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PIID {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.PIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PIID\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.PIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaidAmount {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.PaidAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidAmount\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.PaidAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PendingAmount {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.PendingAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PendingAmount\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.PendingAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PaymentMode {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.PaymentModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentMode\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.PaymentModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ChequeNo {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.ChequeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeNo\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.ChequeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ChequeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentRegister.ChequeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChequeDate\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.ChequeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustomerBankName {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.CustomerBankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerBankName\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.CustomerBankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NetAmount {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.NetAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetAmount\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.NetAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VoucherNo {
                get {
                    try {
                        return ((string)(this[this.tablePaymentRegister.VoucherNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherNo\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.VoucherNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime VoucherDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePaymentRegister.VoucherDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoucherDate\' in table \'PaymentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePaymentRegister.VoucherDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorCodeNull() {
                return this.IsNull(this.tablePaymentRegister.VendorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorCodeNull() {
                this[this.tablePaymentRegister.VendorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVendorNameNull() {
                return this.IsNull(this.tablePaymentRegister.VendorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVendorNameNull() {
                this[this.tablePaymentRegister.VendorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseCodeNull() {
                return this.IsNull(this.tablePaymentRegister.PurchaseCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseCodeNull() {
                this[this.tablePaymentRegister.PurchaseCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPurchaseDateNull() {
                return this.IsNull(this.tablePaymentRegister.PurchaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPurchaseDateNull() {
                this[this.tablePaymentRegister.PurchaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDaysNull() {
                return this.IsNull(this.tablePaymentRegister.DueDaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDaysNull() {
                this[this.tablePaymentRegister.DueDaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDueDateNull() {
                return this.IsNull(this.tablePaymentRegister.DueDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDueDateNull() {
                this[this.tablePaymentRegister.DueDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPIIDNull() {
                return this.IsNull(this.tablePaymentRegister.PIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPIIDNull() {
                this[this.tablePaymentRegister.PIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaidAmountNull() {
                return this.IsNull(this.tablePaymentRegister.PaidAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaidAmountNull() {
                this[this.tablePaymentRegister.PaidAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPendingAmountNull() {
                return this.IsNull(this.tablePaymentRegister.PendingAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPendingAmountNull() {
                this[this.tablePaymentRegister.PendingAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPaymentModeNull() {
                return this.IsNull(this.tablePaymentRegister.PaymentModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPaymentModeNull() {
                this[this.tablePaymentRegister.PaymentModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tablePaymentRegister.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tablePaymentRegister.NarrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeNoNull() {
                return this.IsNull(this.tablePaymentRegister.ChequeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeNoNull() {
                this[this.tablePaymentRegister.ChequeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsChequeDateNull() {
                return this.IsNull(this.tablePaymentRegister.ChequeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetChequeDateNull() {
                this[this.tablePaymentRegister.ChequeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBankNameNull() {
                return this.IsNull(this.tablePaymentRegister.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBankNameNull() {
                this[this.tablePaymentRegister.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustomerBankNameNull() {
                return this.IsNull(this.tablePaymentRegister.CustomerBankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustomerBankNameNull() {
                this[this.tablePaymentRegister.CustomerBankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNetAmountNull() {
                return this.IsNull(this.tablePaymentRegister.NetAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNetAmountNull() {
                this[this.tablePaymentRegister.NetAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherNoNull() {
                return this.IsNull(this.tablePaymentRegister.VoucherNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherNoNull() {
                this[this.tablePaymentRegister.VoucherNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVoucherDateNull() {
                return this.IsNull(this.tablePaymentRegister.VoucherDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVoucherDateNull() {
                this[this.tablePaymentRegister.VoucherDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MatrialissueREGRow : global::System.Data.DataRow {
            
            private MatrialissueREGDataTable tableMatrialissueREG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MatrialissueREGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMatrialissueREG = ((MatrialissueREGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaterialIssueCode {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.MaterialIssueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialIssueCode\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.MaterialIssueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueBy {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.IssueByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueBy\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.IssueByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueTo {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.IssueToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueTo\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.IssueToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short QOH {
                get {
                    try {
                        return ((short)(this[this.tableMatrialissueREG.QOHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QOH\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.QOHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueQTY {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.IssueQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueQTY\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.IssueQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string reason {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.reasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reason\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.reasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string narration {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.narrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'narration\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.narrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string returnYESNO {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.returnYESNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'returnYESNO\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.returnYESNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GodownName {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissueREG.GodownNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownName\' in table \'MatrialissueREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissueREG.GodownNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialIssueCodeNull() {
                return this.IsNull(this.tableMatrialissueREG.MaterialIssueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialIssueCodeNull() {
                this[this.tableMatrialissueREG.MaterialIssueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableMatrialissueREG.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableMatrialissueREG.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableMatrialissueREG.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableMatrialissueREG.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueByNull() {
                return this.IsNull(this.tableMatrialissueREG.IssueByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueByNull() {
                this[this.tableMatrialissueREG.IssueByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueToNull() {
                return this.IsNull(this.tableMatrialissueREG.IssueToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueToNull() {
                this[this.tableMatrialissueREG.IssueToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQOHNull() {
                return this.IsNull(this.tableMatrialissueREG.QOHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQOHNull() {
                this[this.tableMatrialissueREG.QOHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueQTYNull() {
                return this.IsNull(this.tableMatrialissueREG.IssueQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueQTYNull() {
                this[this.tableMatrialissueREG.IssueQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreasonNull() {
                return this.IsNull(this.tableMatrialissueREG.reasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreasonNull() {
                this[this.tableMatrialissueREG.reasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnarrationNull() {
                return this.IsNull(this.tableMatrialissueREG.narrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnarrationNull() {
                this[this.tableMatrialissueREG.narrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreturnYESNONull() {
                return this.IsNull(this.tableMatrialissueREG.returnYESNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreturnYESNONull() {
                this[this.tableMatrialissueREG.returnYESNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownNameNull() {
                return this.IsNull(this.tableMatrialissueREG.GodownNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownNameNull() {
                this[this.tableMatrialissueREG.GodownNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MatrialissueRow : global::System.Data.DataRow {
            
            private MatrialissueDataTable tableMatrialissue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MatrialissueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMatrialissue = ((MatrialissueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaterialIssueCode {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.MaterialIssueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialIssueCode\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.MaterialIssueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueBy {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.IssueByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueBy\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.IssueByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueTo {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.IssueToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueTo\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.IssueToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short QOH {
                get {
                    try {
                        return ((short)(this[this.tableMatrialissue.QOHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QOH\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.QOHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueQTY {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.IssueQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueQTY\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.IssueQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string reason {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.reasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reason\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.reasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string returnYESNO {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.returnYESNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'returnYESNO\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.returnYESNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string narration {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.narrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'narration\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.narrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GodownName {
                get {
                    try {
                        return ((string)(this[this.tableMatrialissue.GodownNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownName\' in table \'Matrialissue\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialissue.GodownNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialIssueCodeNull() {
                return this.IsNull(this.tableMatrialissue.MaterialIssueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialIssueCodeNull() {
                this[this.tableMatrialissue.MaterialIssueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableMatrialissue.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableMatrialissue.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableMatrialissue.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableMatrialissue.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueByNull() {
                return this.IsNull(this.tableMatrialissue.IssueByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueByNull() {
                this[this.tableMatrialissue.IssueByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueToNull() {
                return this.IsNull(this.tableMatrialissue.IssueToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueToNull() {
                this[this.tableMatrialissue.IssueToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQOHNull() {
                return this.IsNull(this.tableMatrialissue.QOHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQOHNull() {
                this[this.tableMatrialissue.QOHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueQTYNull() {
                return this.IsNull(this.tableMatrialissue.IssueQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueQTYNull() {
                this[this.tableMatrialissue.IssueQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreasonNull() {
                return this.IsNull(this.tableMatrialissue.reasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreasonNull() {
                this[this.tableMatrialissue.reasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsreturnYESNONull() {
                return this.IsNull(this.tableMatrialissue.returnYESNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetreturnYESNONull() {
                this[this.tableMatrialissue.returnYESNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnarrationNull() {
                return this.IsNull(this.tableMatrialissue.narrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnarrationNull() {
                this[this.tableMatrialissue.narrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownNameNull() {
                return this.IsNull(this.tableMatrialissue.GodownNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownNameNull() {
                this[this.tableMatrialissue.GodownNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MatrialReturnREGRow : global::System.Data.DataRow {
            
            private MatrialReturnREGDataTable tableMatrialReturnREG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MatrialReturnREGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMatrialReturnREG = ((MatrialReturnREGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MaterialIssueCode {
                get {
                    try {
                        return ((string)(this[this.tableMatrialReturnREG.MaterialIssueCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaterialIssueCode\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.MaterialIssueCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableMatrialReturnREG.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableMatrialReturnREG.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnBy {
                get {
                    try {
                        return ((string)(this[this.tableMatrialReturnREG.ReturnByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnBy\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.ReturnByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReturnTo {
                get {
                    try {
                        return ((string)(this[this.tableMatrialReturnREG.ReturnToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnTo\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.ReturnToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ReturnQty {
                get {
                    try {
                        return ((short)(this[this.tableMatrialReturnREG.ReturnQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnQty\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.ReturnQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IssueQTY {
                get {
                    try {
                        return ((string)(this[this.tableMatrialReturnREG.IssueQTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssueQTY\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.IssueQTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string narration {
                get {
                    try {
                        return ((string)(this[this.tableMatrialReturnREG.narrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'narration\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.narrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GodownName {
                get {
                    try {
                        return ((string)(this[this.tableMatrialReturnREG.GodownNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GodownName\' in table \'MatrialReturnREG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMatrialReturnREG.GodownNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaterialIssueCodeNull() {
                return this.IsNull(this.tableMatrialReturnREG.MaterialIssueCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaterialIssueCodeNull() {
                this[this.tableMatrialReturnREG.MaterialIssueCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableMatrialReturnREG.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableMatrialReturnREG.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableMatrialReturnREG.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableMatrialReturnREG.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnByNull() {
                return this.IsNull(this.tableMatrialReturnREG.ReturnByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnByNull() {
                this[this.tableMatrialReturnREG.ReturnByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnToNull() {
                return this.IsNull(this.tableMatrialReturnREG.ReturnToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnToNull() {
                this[this.tableMatrialReturnREG.ReturnToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReturnQtyNull() {
                return this.IsNull(this.tableMatrialReturnREG.ReturnQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReturnQtyNull() {
                this[this.tableMatrialReturnREG.ReturnQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIssueQTYNull() {
                return this.IsNull(this.tableMatrialReturnREG.IssueQTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIssueQTYNull() {
                this[this.tableMatrialReturnREG.IssueQTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnarrationNull() {
                return this.IsNull(this.tableMatrialReturnREG.narrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnarrationNull() {
                this[this.tableMatrialReturnREG.narrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodownNameNull() {
                return this.IsNull(this.tableMatrialReturnREG.GodownNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodownNameNull() {
                this[this.tableMatrialReturnREG.GodownNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ItemAdjustmentRegisterRow : global::System.Data.DataRow {
            
            private ItemAdjustmentRegisterDataTable tableItemAdjustmentRegister;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ItemAdjustmentRegisterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableItemAdjustmentRegister = ((ItemAdjustmentRegisterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AdjustmentID {
                get {
                    try {
                        return ((string)(this[this.tableItemAdjustmentRegister.AdjustmentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustmentID\' in table \'ItemAdjustmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemAdjustmentRegister.AdjustmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime AdjustDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableItemAdjustmentRegister.AdjustDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdjustDate\' in table \'ItemAdjustmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemAdjustmentRegister.AdjustDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemName {
                get {
                    try {
                        return ((string)(this[this.tableItemAdjustmentRegister.ItemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemName\' in table \'ItemAdjustmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemAdjustmentRegister.ItemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ItemCode {
                get {
                    try {
                        return ((string)(this[this.tableItemAdjustmentRegister.ItemCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemCode\' in table \'ItemAdjustmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemAdjustmentRegister.ItemCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Qty {
                get {
                    try {
                        return ((short)(this[this.tableItemAdjustmentRegister.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'ItemAdjustmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemAdjustmentRegister.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Godown_name {
                get {
                    try {
                        return ((string)(this[this.tableItemAdjustmentRegister.Godown_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Godown_name\' in table \'ItemAdjustmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemAdjustmentRegister.Godown_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableItemAdjustmentRegister.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'ItemAdjustmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemAdjustmentRegister.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Narration {
                get {
                    try {
                        return ((string)(this[this.tableItemAdjustmentRegister.NarrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Narration\' in table \'ItemAdjustmentRegister\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableItemAdjustmentRegister.NarrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustmentIDNull() {
                return this.IsNull(this.tableItemAdjustmentRegister.AdjustmentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustmentIDNull() {
                this[this.tableItemAdjustmentRegister.AdjustmentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdjustDateNull() {
                return this.IsNull(this.tableItemAdjustmentRegister.AdjustDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdjustDateNull() {
                this[this.tableItemAdjustmentRegister.AdjustDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemNameNull() {
                return this.IsNull(this.tableItemAdjustmentRegister.ItemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemNameNull() {
                this[this.tableItemAdjustmentRegister.ItemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsItemCodeNull() {
                return this.IsNull(this.tableItemAdjustmentRegister.ItemCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetItemCodeNull() {
                this[this.tableItemAdjustmentRegister.ItemCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQtyNull() {
                return this.IsNull(this.tableItemAdjustmentRegister.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQtyNull() {
                this[this.tableItemAdjustmentRegister.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGodown_nameNull() {
                return this.IsNull(this.tableItemAdjustmentRegister.Godown_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGodown_nameNull() {
                this[this.tableItemAdjustmentRegister.Godown_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableItemAdjustmentRegister.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableItemAdjustmentRegister.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNarrationNull() {
                return this.IsNull(this.tableItemAdjustmentRegister.NarrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNarrationNull() {
                this[this.tableItemAdjustmentRegister.NarrationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PurchaseINdentRegRow : global::System.Data.DataRow {
            
            private PurchaseINdentRegDataTable tablePurchaseINdentReg;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PurchaseINdentRegRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchaseINdentReg = ((PurchaseINdentRegDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Id {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Id\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SrNo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.SrNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SrNo\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.SrNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime IndentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePurchaseINdentReg.IndentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IndentDate\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.IndentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string itemcode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.itemcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemcode\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.itemcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string productcode {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.productcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'productcode\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.productcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string itemDetails {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.itemDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemDetails\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.itemDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qtyreqd {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseINdentReg.qtyreqdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qtyreqd\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.qtyreqdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal qtyinstock {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseINdentReg.qtyinstockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qtyinstock\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.qtyinstockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal stockinhand {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseINdentReg.stockinhandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stockinhand\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.stockinhandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal unitprice {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseINdentReg.unitpriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unitprice\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.unitpriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal totalcost {
                get {
                    try {
                        return ((decimal)(this[this.tablePurchaseINdentReg.totalcostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalcost\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.totalcostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string itemused {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.itemusedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'itemused\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.itemusedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string purchaseindent {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.purchaseindentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'purchaseindent\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.purchaseindentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string statuspo {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.statuspoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'statuspo\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.statuspoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tablePurchaseINdentReg.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'PurchaseINdentReg\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePurchaseINdentReg.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIdNull() {
                return this.IsNull(this.tablePurchaseINdentReg.IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIdNull() {
                this[this.tablePurchaseINdentReg.IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSrNoNull() {
                return this.IsNull(this.tablePurchaseINdentReg.SrNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSrNoNull() {
                this[this.tablePurchaseINdentReg.SrNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIndentDateNull() {
                return this.IsNull(this.tablePurchaseINdentReg.IndentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIndentDateNull() {
                this[this.tablePurchaseINdentReg.IndentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemcodeNull() {
                return this.IsNull(this.tablePurchaseINdentReg.itemcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemcodeNull() {
                this[this.tablePurchaseINdentReg.itemcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsproductcodeNull() {
                return this.IsNull(this.tablePurchaseINdentReg.productcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetproductcodeNull() {
                this[this.tablePurchaseINdentReg.productcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemDetailsNull() {
                return this.IsNull(this.tablePurchaseINdentReg.itemDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemDetailsNull() {
                this[this.tablePurchaseINdentReg.itemDetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyreqdNull() {
                return this.IsNull(this.tablePurchaseINdentReg.qtyreqdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyreqdNull() {
                this[this.tablePurchaseINdentReg.qtyreqdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsqtyinstockNull() {
                return this.IsNull(this.tablePurchaseINdentReg.qtyinstockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetqtyinstockNull() {
                this[this.tablePurchaseINdentReg.qtyinstockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstockinhandNull() {
                return this.IsNull(this.tablePurchaseINdentReg.stockinhandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstockinhandNull() {
                this[this.tablePurchaseINdentReg.stockinhandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsunitpriceNull() {
                return this.IsNull(this.tablePurchaseINdentReg.unitpriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetunitpriceNull() {
                this[this.tablePurchaseINdentReg.unitpriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalcostNull() {
                return this.IsNull(this.tablePurchaseINdentReg.totalcostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalcostNull() {
                this[this.tablePurchaseINdentReg.totalcostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsitemusedNull() {
                return this.IsNull(this.tablePurchaseINdentReg.itemusedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetitemusedNull() {
                this[this.tablePurchaseINdentReg.itemusedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspurchaseindentNull() {
                return this.IsNull(this.tablePurchaseINdentReg.purchaseindentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpurchaseindentNull() {
                this[this.tablePurchaseINdentReg.purchaseindentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstatuspoNull() {
                return this.IsNull(this.tablePurchaseINdentReg.statuspoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstatuspoNull() {
                this[this.tablePurchaseINdentReg.statuspoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tablePurchaseINdentReg.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tablePurchaseINdentReg.RemarksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SiteInfoRegisterRowChangeEvent : global::System.EventArgs {
            
            private SiteInfoRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiteInfoRegisterRowChangeEvent(SiteInfoRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SiteInfoRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BuildingInfoRegisterRowChangeEvent : global::System.EventArgs {
            
            private BuildingInfoRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BuildingInfoRegisterRowChangeEvent(BuildingInfoRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BuildingInfoRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BlockInfoRegisterRowChangeEvent : global::System.EventArgs {
            
            private BlockInfoRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BlockInfoRegisterRowChangeEvent(BlockInfoRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BlockInfoRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BankDetailRegisterRowChangeEvent : global::System.EventArgs {
            
            private BankDetailRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BankDetailRegisterRowChangeEvent(BankDetailRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BankDetailRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AllotmentReportRowChangeEvent : global::System.EventArgs {
            
            private AllotmentReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllotmentReportRowChangeEvent(AllotmentReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AllotmentReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DemandLetterRowChangeEvent : global::System.EventArgs {
            
            private DemandLetterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DemandLetterRowChangeEvent(DemandLetterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DemandLetterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerReceiptRowChangeEvent : global::System.EventArgs {
            
            private CustomerReceiptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerReceiptRowChangeEvent(CustomerReceiptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerReceiptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LeadRegisterRowChangeEvent : global::System.EventArgs {
            
            private LeadRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LeadRegisterRowChangeEvent(LeadRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LeadRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HRDetailListRowChangeEvent : global::System.EventArgs {
            
            private HRDetailListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRDetailListRowChangeEvent(HRDetailListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HRDetailListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DailyConsumptionRowChangeEvent : global::System.EventArgs {
            
            private DailyConsumptionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyConsumptionRowChangeEvent(DailyConsumptionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DailyConsumptionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerPaymentRegisterRowChangeEvent : global::System.EventArgs {
            
            private CustomerPaymentRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentRegisterRowChangeEvent(CustomerPaymentRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerRegisterRowChangeEvent : global::System.EventArgs {
            
            private CustomerRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegisterRowChangeEvent(CustomerRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesVoucherRowChangeEvent : global::System.EventArgs {
            
            private SalesVoucherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesVoucherRowChangeEvent(SalesVoucherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesVoucherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ServiceModuleRegisterRowChangeEvent : global::System.EventArgs {
            
            private ServiceModuleRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceModuleRegisterRowChangeEvent(ServiceModuleRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceModuleRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CarTypeWiseRegisterRowChangeEvent : global::System.EventArgs {
            
            private CarTypeWiseRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarTypeWiseRegisterRowChangeEvent(CarTypeWiseRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarTypeWiseRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesInvoiceRowChangeEvent : global::System.EventArgs {
            
            private SalesInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceRowChangeEvent(SalesInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseOrderRowChangeEvent : global::System.EventArgs {
            
            private PurchaseOrderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRowChangeEvent(PurchaseOrderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class salesRowChangeEvent : global::System.EventArgs {
            
            private salesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public salesRowChangeEvent(salesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public salesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesInvoicevRowChangeEvent : global::System.EventArgs {
            
            private SalesInvoicevRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevRowChangeEvent(SalesInvoicevRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesInvoicevidhiRowChangeEvent : global::System.EventArgs {
            
            private SalesInvoicevidhiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevidhiRowChangeEvent(SalesInvoicevidhiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoicevidhiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesInvoiceviRowChangeEvent : global::System.EventArgs {
            
            private SalesInvoiceviRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceviRowChangeEvent(SalesInvoiceviRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoiceviRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DriveDutyVoucherRowChangeEvent : global::System.EventArgs {
            
            private DriveDutyVoucherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DriveDutyVoucherRowChangeEvent(DriveDutyVoucherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DriveDutyVoucherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class QuotationRowChangeEvent : global::System.EventArgs {
            
            private QuotationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuotationRowChangeEvent(QuotationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public QuotationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AverageRowChangeEvent : global::System.EventArgs {
            
            private AverageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AverageRowChangeEvent(AverageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AverageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DepartmentRegisterRowChangeEvent : global::System.EventArgs {
            
            private DepartmentRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRegisterRowChangeEvent(DepartmentRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DepartmentRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContractTypeRegisterRowChangeEvent : global::System.EventArgs {
            
            private ContractTypeRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContractTypeRegisterRowChangeEvent(ContractTypeRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContractTypeRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CallTypeRegisterRowChangeEvent : global::System.EventArgs {
            
            private CallTypeRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallTypeRegisterRowChangeEvent(CallTypeRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CallTypeRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ZoneRegisterRowChangeEvent : global::System.EventArgs {
            
            private ZoneRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneRegisterRowChangeEvent(ZoneRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZoneRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductRegisterRowChangeEvent : global::System.EventArgs {
            
            private ProductRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRegisterRowChangeEvent(ProductRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GodownRegisterRowChangeEvent : global::System.EventArgs {
            
            private GodownRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GodownRegisterRowChangeEvent(GodownRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GodownRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BookingRegisterRowChangeEvent : global::System.EventArgs {
            
            private BookingRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegisterRowChangeEvent(BookingRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BookingRegRowChangeEvent : global::System.EventArgs {
            
            private BookingRegRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegRowChangeEvent(BookingRegRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BookingRegRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VendorRegRowChangeEvent : global::System.EventArgs {
            
            private VendorRegRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRegRowChangeEvent(VendorRegRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorRegRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerRegRowChangeEvent : global::System.EventArgs {
            
            private CustomerRegRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegRowChangeEvent(CustomerRegRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerRegRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerPendingRegRowChangeEvent : global::System.EventArgs {
            
            private CustomerPendingRegRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPendingRegRowChangeEvent(CustomerPendingRegRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPendingRegRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VendorPendingRegRowChangeEvent : global::System.EventArgs {
            
            private VendorPendingRegRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorPendingRegRowChangeEvent(VendorPendingRegRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VendorPendingRegRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ServiceRegisterRowChangeEvent : global::System.EventArgs {
            
            private ServiceRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceRegisterRowChangeEvent(ServiceRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Service_Item_ListRowChangeEvent : global::System.EventArgs {
            
            private Service_Item_ListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_Item_ListRowChangeEvent(Service_Item_ListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_Item_ListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InvoiceAllRowChangeEvent : global::System.EventArgs {
            
            private InvoiceAllRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceAllRowChangeEvent(InvoiceAllRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoiceAllRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InvoicePageRowChangeEvent : global::System.EventArgs {
            
            private InvoicePageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoicePageRowChangeEvent(InvoicePageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InvoicePageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesInvoice_NewRowChangeEvent : global::System.EventArgs {
            
            private SalesInvoice_NewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_NewRowChangeEvent(SalesInvoice_NewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_NewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesInvoice_PageRowChangeEvent : global::System.EventArgs {
            
            private SalesInvoice_PageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_PageRowChangeEvent(SalesInvoice_PageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesInvoice_PageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Invoice_NewRowChangeEvent : global::System.EventArgs {
            
            private Invoice_NewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_NewRowChangeEvent(Invoice_NewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_NewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Invoice_New_ItemRowChangeEvent : global::System.EventArgs {
            
            private Invoice_New_ItemRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_New_ItemRowChangeEvent(Invoice_New_ItemRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Invoice_New_ItemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CompanyInfoRowChangeEvent : global::System.EventArgs {
            
            private CompanyInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyInfoRowChangeEvent(CompanyInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CompanyInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Customer_ServiceRowChangeEvent : global::System.EventArgs {
            
            private Customer_ServiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Customer_ServiceRowChangeEvent(Customer_ServiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Customer_ServiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TNCRowChangeEvent : global::System.EventArgs {
            
            private TNCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TNCRowChangeEvent(TNCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TNCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Service_ToyoRowChangeEvent : global::System.EventArgs {
            
            private Service_ToyoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_ToyoRowChangeEvent(Service_ToyoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Service_ToyoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemStockRegisterHozifaRowChangeEvent : global::System.EventArgs {
            
            private ItemStockRegisterHozifaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemStockRegisterHozifaRowChangeEvent(ItemStockRegisterHozifaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemStockRegisterHozifaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseInvoiceRegisterWithDetailRowChangeEvent : global::System.EventArgs {
            
            private PurchaseInvoiceRegisterWithDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseInvoiceRegisterWithDetailRowChangeEvent(PurchaseInvoiceRegisterWithDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseInvoiceRegisterWithDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SalesRegisterHozifaRowChangeEvent : global::System.EventArgs {
            
            private SalesRegisterHozifaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesRegisterHozifaRowChangeEvent(SalesRegisterHozifaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SalesRegisterHozifaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentReceiptRowChangeEvent : global::System.EventArgs {
            
            private PaymentReceiptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReceiptRowChangeEvent(PaymentReceiptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReceiptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ServiceOrderRowChangeEvent : global::System.EventArgs {
            
            private ServiceOrderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceOrderRowChangeEvent(ServiceOrderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceOrderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ServiceInvoiceOldRowChangeEvent : global::System.EventArgs {
            
            private ServiceInvoiceOldRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceOldRowChangeEvent(ServiceInvoiceOldRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceOldRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemSalesRowChangeEvent : global::System.EventArgs {
            
            private ItemSalesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemSalesRowChangeEvent(ItemSalesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemSalesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LogoRowChangeEvent : global::System.EventArgs {
            
            private LogoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LogoRowChangeEvent(LogoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LogoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ChallanCumTaxInvoiceRowChangeEvent : global::System.EventArgs {
            
            private ChallanCumTaxInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChallanCumTaxInvoiceRowChangeEvent(ChallanCumTaxInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ChallanCumTaxInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentRegister1RowChangeEvent : global::System.EventArgs {
            
            private PaymentRegister1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegister1RowChangeEvent(PaymentRegister1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegister1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemRegisterRowChangeEvent : global::System.EventArgs {
            
            private ItemRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRegisterRowChangeEvent(ItemRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PORegisterRowChangeEvent : global::System.EventArgs {
            
            private PORegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PORegisterRowChangeEvent(PORegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PORegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class OrderBookingRowChangeEvent : global::System.EventArgs {
            
            private OrderBookingRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderBookingRowChangeEvent(OrderBookingRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OrderBookingRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemPicRowChangeEvent : global::System.EventArgs {
            
            private ItemPicRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemPicRowChangeEvent(ItemPicRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemPicRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Ledger_ReportRowChangeEvent : global::System.EventArgs {
            
            private Ledger_ReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Ledger_ReportRowChangeEvent(Ledger_ReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Ledger_ReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DebitNoteRowChangeEvent : global::System.EventArgs {
            
            private DebitNoteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DebitNoteRowChangeEvent(DebitNoteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DebitNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CreditNoteRowChangeEvent : global::System.EventArgs {
            
            private CreditNoteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CreditNoteRowChangeEvent(CreditNoteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CreditNoteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ServiceInvoiceRowChangeEvent : global::System.EventArgs {
            
            private ServiceInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceRowChangeEvent(ServiceInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ServiceInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProfitnLossStatementRowChangeEvent : global::System.EventArgs {
            
            private ProfitnLossStatementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProfitnLossStatementRowChangeEvent(ProfitnLossStatementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProfitnLossStatementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentReturnRegisterRowChangeEvent : global::System.EventArgs {
            
            private PaymentReturnRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnRegisterRowChangeEvent(PaymentReturnRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CustomerPaymentReturnRegisterRowChangeEvent : global::System.EventArgs {
            
            private CustomerPaymentReturnRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentReturnRegisterRowChangeEvent(CustomerPaymentReturnRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CustomerPaymentReturnRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentReturnReceiptRowChangeEvent : global::System.EventArgs {
            
            private PaymentReturnReceiptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnReceiptRowChangeEvent(PaymentReturnReceiptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentReturnReceiptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PaymentRegisterRowChangeEvent : global::System.EventArgs {
            
            private PaymentRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegisterRowChangeEvent(PaymentRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PaymentRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MatrialissueREGRowChangeEvent : global::System.EventArgs {
            
            private MatrialissueREGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueREGRowChangeEvent(MatrialissueREGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueREGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MatrialissueRowChangeEvent : global::System.EventArgs {
            
            private MatrialissueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueRowChangeEvent(MatrialissueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialissueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MatrialReturnREGRowChangeEvent : global::System.EventArgs {
            
            private MatrialReturnREGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialReturnREGRowChangeEvent(MatrialReturnREGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MatrialReturnREGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ItemAdjustmentRegisterRowChangeEvent : global::System.EventArgs {
            
            private ItemAdjustmentRegisterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemAdjustmentRegisterRowChangeEvent(ItemAdjustmentRegisterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ItemAdjustmentRegisterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PurchaseINdentRegRowChangeEvent : global::System.EventArgs {
            
            private PurchaseINdentRegRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseINdentRegRowChangeEvent(PurchaseINdentRegRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PurchaseINdentRegRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591